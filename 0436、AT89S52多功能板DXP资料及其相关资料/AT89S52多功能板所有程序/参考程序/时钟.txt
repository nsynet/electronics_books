  #include<reg52.h>
 #define uchar unsigned char 
 #define uint unsigned int 
  sbit P3_7=P3^7;
  sbit P1_0=P1^0;
  sbit P1_1=P1^1;
   sbit P1_2=P1^2;
   
unsigned char code dispcode[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x98};
unsigned char dispbitcode[]={0xfe,0xfd,0xfb,0xf7}; 
unsigned char dispbuf[8]={0,0,0,0}; 
unsigned char dispbitcnt; 
unsigned char second; 
unsigned char minite; 
unsigned char hour; 
unsigned int tcnt; 
unsigned char mstcnt; 
 unsigned char i,j;

 void delay1ms(uint t)
 {
    for(i=0;i<t;i++)
	 for(j=0;j<120;j++);
	 } 

 void main(void) 
{ TMOD=0x02; 
  TH0=0x06; 
  TL0=0x06; 
  TR0=1; 
  ET0=1; 
  EA=1; 
   while(1) 
    {  if(P1_0==0) 
        {  for(i=5;i>0;i--) 
          for(j=248;j>0;j--); 
          if(P1_0==0) 
            {  second++; 
              if(second==60) 
                { second=0; } 
              dispbuf[0]=second%10; 
              dispbuf[1]=second/10; 
              while(P1_0==0); 
            } 
        } 
      if(P1_1==0) 
        {  for(i=5;i>0;i--) 
          for(j=248;j>0;j--); 
          if(P1_1==0) 
            {  minite++; 
              if(minite==60) 
                {   minite=0; 
			
				} 
              dispbuf[2]=minite%10; 
              dispbuf[3]=minite/10; 
              while(P1_1==0); 
            } 
          } 
       
       } 
    } 

void t0(void) interrupt 1 using 0 
{   mstcnt++; 
  if(mstcnt==4) 
    { mstcnt=0; 
      P0=dispcode[dispbuf[dispbitcnt]]; 
      P2=dispbitcode[dispbitcnt]; 
      dispbitcnt++; 
      if(dispbitcnt==4) 
        { 
		 dispbitcnt=0;
		 } 
     	} 
  tcnt++; 
  if(tcnt==4000) 		    
     {
	  tcnt=0; 
      second++; 
      if(second==60) 
        {  
		second=0; 
          minite++; 
          if(minite==60) 					  	 
            {  
			minite=0; 
              
            } 
        } 
      dispbuf[3]=second%10; 
      dispbuf[2]=second/10; 
      dispbuf[1]=minite%10; 
      dispbuf[0]=minite/10; 
     
    } 
} 






































