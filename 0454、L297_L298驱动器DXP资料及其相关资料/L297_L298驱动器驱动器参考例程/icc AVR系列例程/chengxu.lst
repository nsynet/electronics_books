__start:
__text_start:
    0013 E5CF      LDI	R28,0x5F
    0014 E0D4      LDI	R29,4
    0015 BFCD      OUT	0x3D,R28
    0016 BFDE      OUT	0x3E,R29
    0017 51C0      SUBI	R28,0x10
    0018 40D0      SBCI	R29,0
    0019 EA0A      LDI	R16,0xAA
    001A 8308      STD	Y+0,R16
    001B 2400      CLR	R0
    001C E6E0      LDI	R30,0x60
    001D E0F0      LDI	R31,0
    001E E010      LDI	R17,0
    001F 36E0      CPI	R30,0x60
    0020 07F1      CPC	R31,R17
    0021 F011      BEQ	0x0024
    0022 9201      ST	R0,Z+
    0023 CFFB      RJMP	0x001F
    0024 8300      STD	Z+0,R16
    0025 E2E6      LDI	R30,0x26
    0026 E0F0      LDI	R31,0
    0027 E6A0      LDI	R26,0x60
    0028 E0B0      LDI	R27,0
    0029 E010      LDI	R17,0
    002A 32E6      CPI	R30,0x26
    002B 07F1      CPC	R31,R17
    002C F021      BEQ	0x0031
    002D 95C8      LPM
    002E 9631      ADIW	R30,1
    002F 920D      ST	R0,X+
    0030 CFF9      RJMP	0x002A
    0031 D01D      RCALL	_main
_exit:
    0032 CFFF      RJMP	_exit
_delay:
  i                    --> R20
  j                    --> R22
  t                    --> R16
    0033 D043      RCALL	push_gset2
FILE: C:\DOCUME~1\Administrator\桌面\数码管显示程序\icc\chengxu.c
(0001) #include <iom8v.h>
(0002) #define uchar unsigned char 
(0003) #define uint unsigned int
(0004) 
(0005) //CW控制步进电机的方向
(0006) //H_F控制步进电机的工作方式（1为四拍工作方式，0为八拍工作方式）
(0007) //CLK控制步进电机的转动速度，一个脉冲电机转动一个步进角。
(0008) //RES使能控制(为1时电机运行，为0时电机停止)
(0009) 
(0010) /******************************************************************
(0011) 延时函数
(0012) ******************************************************************/
(0013) void delay(uint t)
(0014) {
(0015)   uint i,j;
(0016)    for(i=0;i<t;i++)
    0034 2744      CLR	R20
    0035 2755      CLR	R21
    0036 C00A      RJMP	0x0041
(0017)    {
(0018)    	 for(j=800;j>0;j--);
    0037 E260      LDI	R22,0x20
    0038 E073      LDI	R23,3
    0039 C002      RJMP	0x003C
    003A 5061      SUBI	R22,1
    003B 4070      SBCI	R23,0
    003C 3060      CPI	R22,0
    003D 0767      CPC	R22,R23
    003E F7D9      BNE	0x003A
    003F 5F4F      SUBI	R20,0xFF
    0040 4F5F      SBCI	R21,0xFF
    0041 1740      CP	R20,R16
    0042 0751      CPC	R21,R17
    0043 F398      BCS	0x0037
    0044 D019      RCALL	pop_gset2
    0045 9508      RET
(0019) 	 { ;
(0020) 	 }
(0021)    }
(0022) }
(0023) /***********************************初始化*****************************/
(0024) void Init_IO(void)//初始化I/O
(0025) {
(0026) //设置B口为输出
(0027) DDRB=0xff;
_Init_IO:
    0046 EF8F      LDI	R24,0xFF
    0047 BB87      OUT	0x17,R24
(0028) PORTB=0xff;
    0048 BB88      OUT	0x18,R24
(0029) //设置C口为输出
(0030) DDRC=0xff;
    0049 BB84      OUT	0x14,R24
(0031) PORTC=0xff;
    004A BB85      OUT	0x15,R24
(0032) //设置D口为输入
(0033) DDRD=0X00;
    004B 2422      CLR	R2
    004C BA21      OUT	0x11,R2
(0034) PORTD=0x00;
    004D BA22      OUT	0x12,R2
    004E 9508      RET
(0035) }
(0036)  /*************************************************************************
(0037)                                 主函数	
(0038) **************************************************************************/
(0039)  void main()
(0040) {  
(0041)     Init_IO();
_main:
    004F DFF6      RCALL	_Init_IO
    0050 C00B      RJMP	0x005C
(0042)  while(1)
(0043) 	{	
(0044) 
(0045) 	PORTC=0xFF;//PC口控制电机的工作方式；方向；使能
    0051 EF8F      LDI	R24,0xFF
    0052 BB85      OUT	0x15,R24
(0046) 	
(0047) 	/************PB口输出控制电机的转速****************/
(0048) 	PORTB=0xff;
    0053 BB88      OUT	0x18,R24
(0049) 	delay(10);
    0054 E00A      LDI	R16,0xA
    0055 E010      LDI	R17,0
    0056 DFDC      RCALL	_delay
(0050) 	PORTB=0x00;
    0057 2422      CLR	R2
    0058 BA28      OUT	0x18,R2
(0051) 	delay(10);
FILE: <library>
    0059 E00A      LDI	R16,0xA
    005A E010      LDI	R17,0
    005B DFD7      RCALL	_delay
    005C CFF4      RJMP	0x0051
    005D 9508      RET
pop_gset2:
    005E E0E2      LDI	R30,2
    005F C004      RJMP	pop
push_gset1:
    0060 935A      ST	R21,-Y
    0061 934A      ST	R20,-Y
    0062 9508      RET
pop_gset1:
    0063 E0E1      LDI	R30,1
pop:
    0064 9149      LD	R20,Y+
    0065 9159      LD	R21,Y+
    0066 FDE0      SBRC	R30,0
    0067 9508      RET
    0068 9169      LD	R22,Y+
    0069 9179      LD	R23,Y+
    006A FDE1      SBRC	R30,1
    006B 9508      RET
    006C 90A9      LD	R10,Y+
    006D 90B9      LD	R11,Y+
    006E FDE2      SBRC	R30,2
    006F 9508      RET
    0070 90C9      LD	R12,Y+
    0071 90D9      LD	R13,Y+
    0072 FDE3      SBRC	R30,3
    0073 9508      RET
    0074 90E9      LD	R14,Y+
    0075 90F9      LD	R15,Y+
    0076 9508      RET
push_gset2:
    0077 937A      ST	R23,-Y
    0078 936A      ST	R22,-Y
    0079 CFE6      RJMP	push_gset1
