

HI-TECH Software PICC Macro Assembler V8.05PL1
                                                      Sun Oct 11 19:42:43 2009


     1                           	processor	16F877A
     2                           	opt	pw 79
     3                           	psect	__Z49231UD_,global,delta=1
     4                           	psect	rdata_0,global,class=BANK0,space=1,delta
      +                          =1
     5                           	psect	idata_0,global,class=CODE,delta=2
     6                           	psect	text0,local,class=CODE,delta=2
     7                           	psect	text4,local,class=CODE,delta=2
     8                           	psect	rbss_0,global,class=BANK0,space=1,delta=
      +                          1
     9  0000                     
    10  0000                     
    11  0000                     
    12  0000                     
    13  0000                     
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19                           
    20                           	psect	rdata_0
    21  0029                     _Table
    22  0029                     	ds	1
    23  002A                     	ds	1
    24  002B                     	ds	1
    25  002C                     	ds	1
    26  002D                     	ds	1
    27  002E                     	ds	1
    28  002F                     	ds	1
    29  0030                     	ds	1
    30  0031                     	ds	1
    31  0032                     	ds	1
    32  0033                     	ds	1
    33  0034                     	ds	1
    34  0035                     	ds	1
    35  0036                     	ds	1
    36  0037                     	ds	1
    37  0038                     	ds	1
    38  0000                     _DelayMS$i	set	?_DelayMS
    39                           
    40                           	psect	idata_0
    41  07F0  34C0               	retlw	-64
    42  07F1  34F9               	retlw	-7
    43  07F2  34A4               	retlw	-92
    44  07F3  34B0               	retlw	-80
    45  07F4  3499               	retlw	-103
    46  07F5  3492               	retlw	-110
    47  07F6  3482               	retlw	-126
    48  07F7  34F8               	retlw	-8
    49  07F8  3480               	retlw	-128
    50  07F9  3490               	retlw	-112
    51  07FA  3488               	retlw	-120
    52  07FB  3483               	retlw	-125
    53  07FC  34C6               	retlw	-58
    54  07FD  34A1               	retlw	-95
    55  07FE  3486               	retlw	-122
    56  07FF  348E               	retlw	-114
    57                           
    58                           	psect	text0
    59  0726                     _DelayMS
    60                           ;	_j assigned to ?a_DelayMS+0
    61  0000                     _DelayMS$j	set	?a_DelayMS
    62                           ;ourhc.c: 22: unsigned int j;
    63  0726  0183               	clrf	3	;select bank 0
    64  0727  0826               	movf	?_DelayMS+1,w
    65  0728  0425               	iorwf	?_DelayMS,w
    66  0729  1903               	btfsc	3,2
    67  072A  0008               	return
    68  072B                     l2
    69                           ;ourhc.c: 24: {
    70                           ;ourhc.c: 25: for(j=600;j!=0;j--);
    71  072B  3058               	movlw	88
    72  072C  00A7               	movwf	?a_DelayMS
    73  072D  3002               	movlw	2
    74  072E  00A8               	movwf	?a_DelayMS+1
    75  072F                     l5
    76  072F  08A7               	movf	?a_DelayMS
    77  0730  1903               	btfsc	3,2
    78  0731  03A8               	decf	?a_DelayMS+1
    79  0732  03A7               	decf	?a_DelayMS
    80  0733  0828               	movf	?a_DelayMS+1,w
    81  0734  0427               	iorwf	?a_DelayMS,w
    82  0735  1D03               	btfss	3,2
    83  0736  2F2F               	goto	l5
    84                           ;ourhc.c: 26: }
    85  0737  08A5               	movf	?_DelayMS
    86  0738  1903               	btfsc	3,2
    87  0739  03A6               	decf	?_DelayMS+1
    88  073A  03A5               	decf	?_DelayMS
    89  073B  0826               	movf	?_DelayMS+1,w
    90  073C  0425               	iorwf	?_DelayMS,w
    91  073D  1903               	btfsc	3,2
    92  073E  0008               	return
    93  073F  2F2B               	goto	l2
    94                           ;ourhc.c: 31: void Getch ( )
    95                           ;ourhc.c: 32: {
    96  0740                     _Getch
    97                           ;	_X assigned to ?a_Getch+0
    98  0000                     _Getch$X	set	?a_Getch
    99                           ;	_Y assigned to ?a_Getch+1
   100  0000                     _Getch$Y	set	?a_Getch+1
   101                           ;	_Z assigned to ?a_Getch+2
   102  0000                     _Getch$Z	set	?a_Getch+2
   103                           ;	_INC assigned to ?a_Getch+3
   104  0000                     _Getch$INC	set	?a_Getch+3
   105                           ;ourhc.c: 33: unsigned char X,Y,Z;
   106  0740  30F0               	movlw	-16
   107  0741  1683               	bsf	3,5
   108  0742  1303               	bcf	3,6	;carry unused
   109  0743  0087               	movwf	7	;volatile
   110                           ;ourhc.c: 36: PORTC=0X0f;
   111  0744  300F               	movlw	15
   112  0745  1283               	bcf	3,5
   113  0746  0087               	movwf	7	;volatile
   114                           ;ourhc.c: 37: INC=PORTC;
   115  0747  0807               	movf	7,w	;volatile
   116  0748  00A4               	movwf	?a_Getch+3
   117                           ;ourhc.c: 39: if(INC!=0xf0)
   118  0749  3AF0               	xorlw	-16
   119  074A  1903               	btfsc	3,2
   120  074B  0008               	return
   121                           ;ourhc.c: 40: {
   122  074C  01A5               	clrf	?_DelayMS
   123  074D  0AA5               	incf	?_DelayMS
   124  074E  01A6               	clrf	?_DelayMS+1
   125  074F  2726               	fcall	_DelayMS
   126                           ;ourhc.c: 42: if(INC!=0xf0)
   127  0750  0824               	movf	?a_Getch+3,w
   128  0751  3AF0               	xorlw	-16
   129  0752  1903               	btfsc	3,2
   130  0753  0008               	return
   131                           ;ourhc.c: 43: {
   132  0754  0824               	movf	?a_Getch+3,w
   133  0755  380F               	iorlw	15
   134  0756  00A1               	movwf	?a_Getch
   135                           ;ourhc.c: 46: DelayMS(1);
   136  0757  01A5               	clrf	?_DelayMS
   137  0758  0AA5               	incf	?_DelayMS
   138  0759  01A6               	clrf	?_DelayMS+1
   139  075A  2726               	fcall	_DelayMS
   140                           ;ourhc.c: 47: TRISC=0x0f;
   141  075B  300F               	movlw	15
   142  075C  1683               	bsf	3,5
   143  075D  0087               	movwf	7	;volatile
   144                           ;ourhc.c: 48: PORTC=0xf0;
   145  075E  30F0               	movlw	-16
   146  075F  1283               	bcf	3,5
   147  0760  0087               	movwf	7	;volatile
   148                           ;ourhc.c: 49: INC=PORTC;
   149  0761  0807               	movf	7,w	;volatile
   150  0762  00A4               	movwf	?a_Getch+3
   151                           ;ourhc.c: 50: if(INC!=0x0F)
   152  0763  3A0F               	xorlw	15
   153  0764  1903               	btfsc	3,2
   154  0765  0008               	return
   155                           ;ourhc.c: 51: {
   156  0766  01A5               	clrf	?_DelayMS
   157  0767  0AA5               	incf	?_DelayMS
   158  0768  01A6               	clrf	?_DelayMS+1
   159  0769  2726               	fcall	_DelayMS
   160                           ;ourhc.c: 53: if(INC!=0x0F)
   161  076A  0824               	movf	?a_Getch+3,w
   162  076B  3A0F               	xorlw	15
   163  076C  1903               	btfsc	3,2
   164  076D  0008               	return
   165                           ;ourhc.c: 54: {
   166  076E  0824               	movf	?a_Getch+3,w
   167  076F  38F0               	iorlw	-16
   168  0770  00A2               	movwf	?a_Getch+1
   169                           ;ourhc.c: 56: Z=~(X&Y);
   170  0771  0521               	andwf	?a_Getch,w
   171  0772  3AFF               	xorlw	255
   172  0773  00A3               	movwf	?a_Getch+2
   173                           ;ourhc.c: 59: switch ( Z )
   174  0774  3A77               	xorlw	119
   175  0775  1903               	btfsc	3,2
   176  0776  2FCF               	goto	l30
   177  0777  3A0C               	xorlw	12
   178  0778  1903               	btfsc	3,2
   179  0779  2FC3               	goto	l26
   180  077A  3A06               	xorlw	6
   181  077B  1903               	btfsc	3,2
   182  077C  2FB7               	goto	l22
   183  077D  3A03               	xorlw	3
   184  077E  1903               	btfsc	3,2
   185  077F  2FAB               	goto	l18
   186  0780  3AC9               	xorlw	201
   187  0781  1903               	btfsc	3,2
   188  0782  2FCC               	goto	l29
   189  0783  3A0C               	xorlw	12
   190  0784  1903               	btfsc	3,2
   191  0785  2FC0               	goto	l25
   192  0786  3A06               	xorlw	6
   193  0787  1903               	btfsc	3,2
   194  0788  2FB4               	goto	l21
   195  0789  3A03               	xorlw	3
   196  078A  1903               	btfsc	3,2
   197  078B  2FA8               	goto	l17
   198  078C  3A69               	xorlw	105
   199  078D  1903               	btfsc	3,2
   200  078E  2FC9               	goto	l28
   201  078F  3A0C               	xorlw	12
   202  0790  1903               	btfsc	3,2
   203  0791  2FBD               	goto	l24
   204  0792  3A06               	xorlw	6
   205  0793  1903               	btfsc	3,2
   206  0794  2FB1               	goto	l20
   207  0795  3A03               	xorlw	3
   208  0796  1903               	btfsc	3,2
   209  0797  2FA5               	goto	l16
   210  0798  3A39               	xorlw	57
   211  0799  1903               	btfsc	3,2
   212  079A  2FC6               	goto	l27
   213  079B  3A0C               	xorlw	12
   214  079C  1903               	btfsc	3,2
   215  079D  2FBA               	goto	l23
   216  079E  3A06               	xorlw	6
   217  079F  1903               	btfsc	3,2
   218  07A0  2FAE               	goto	l19
   219  07A1  3A03               	xorlw	3
   220  07A2  1903               	btfsc	3,2
   221                           ;ourhc.c: 60: {
   222  07A3  01A0               	clrf	_k
   223  07A4  0008               	return
   224  07A5                     l16
   225                           ;ourhc.c: 62: case 0xde: k=1; break;
   226  07A5  01A0               	clrf	_k
   227  07A6  0AA0               	incf	_k
   228  07A7  0008               	return
   229  07A8                     l17
   230                           ;ourhc.c: 63: case 0xbe: k=2; break;
   231  07A8  3002               	movlw	2
   232  07A9  00A0               	movwf	_k
   233  07AA  0008               	return
   234  07AB                     l18
   235                           ;ourhc.c: 64: case 0x7e: k=3; break;
   236  07AB  3003               	movlw	3
   237  07AC  00A0               	movwf	_k
   238  07AD  0008               	return
   239  07AE                     l19
   240                           ;ourhc.c: 65: case 0xed: k=4; break;
   241  07AE  3004               	movlw	4
   242  07AF  00A0               	movwf	_k
   243  07B0  0008               	return
   244  07B1                     l20
   245                           ;ourhc.c: 66: case 0xdd: k=5; break;
   246  07B1  3005               	movlw	5
   247  07B2  00A0               	movwf	_k
   248  07B3  0008               	return
   249  07B4                     l21
   250                           ;ourhc.c: 67: case 0xbd: k=6; break;
   251  07B4  3006               	movlw	6
   252  07B5  00A0               	movwf	_k
   253  07B6  0008               	return
   254  07B7                     l22
   255                           ;ourhc.c: 68: case 0x7d: k=7; break;
   256  07B7  3007               	movlw	7
   257  07B8  00A0               	movwf	_k
   258  07B9  0008               	return
   259  07BA                     l23
   260                           ;ourhc.c: 69: case 0xeb: k=8; break;
   261  07BA  3008               	movlw	8
   262  07BB  00A0               	movwf	_k
   263  07BC  0008               	return
   264  07BD                     l24
   265                           ;ourhc.c: 70: case 0xdb: k=9; break;
   266  07BD  3009               	movlw	9
   267  07BE  00A0               	movwf	_k
   268  07BF  0008               	return
   269  07C0                     l25
   270                           ;ourhc.c: 71: case 0xbb: k=10;break;
   271  07C0  300A               	movlw	10
   272  07C1  00A0               	movwf	_k
   273  07C2  0008               	return
   274  07C3                     l26
   275                           ;ourhc.c: 72: case 0x7b: k=11;break;
   276  07C3  300B               	movlw	11
   277  07C4  00A0               	movwf	_k
   278  07C5  0008               	return
   279  07C6                     l27
   280                           ;ourhc.c: 73: case 0xe7: k=12;break;
   281  07C6  300C               	movlw	12
   282  07C7  00A0               	movwf	_k
   283  07C8  0008               	return
   284  07C9                     l28
   285                           ;ourhc.c: 74: case 0xd7: k=13;break;
   286  07C9  300D               	movlw	13
   287  07CA  00A0               	movwf	_k
   288  07CB  0008               	return
   289  07CC                     l29
   290                           ;ourhc.c: 75: case 0xb7: k=14;break;
   291  07CC  300E               	movlw	14
   292  07CD  00A0               	movwf	_k
   293  07CE  0008               	return
   294  07CF                     l30
   295                           ;ourhc.c: 76: case 0x77: k=15;break;
   296  07CF  300F               	movlw	15
   297  07D0  00A0               	movwf	_k
   298  07D1  0008               	return
   299                           ;ourhc.c: 79: void Init_IO(void)
   300                           ;ourhc.c: 80: {
   301  07D2                     _Init_IO
   302                           ;ourhc.c: 82: TRISA=0x00;
   303  07D2  1683               	bsf	3,5
   304  07D3  1303               	bcf	3,6	;carry unused
   305  07D4  0185               	clrf	5	;volatile
   306                           ;ourhc.c: 83: PORTA=0xff;
   307  07D5  30FF               	movlw	-1
   308  07D6  1283               	bcf	3,5
   309  07D7  0085               	movwf	5	;volatile
   310                           ;ourhc.c: 85: TRISB=0x00;
   311  07D8  1683               	bsf	3,5
   312  07D9  0186               	clrf	6	;volatile
   313                           ;ourhc.c: 86: PORTB=0xFF;
   314  07DA  1283               	bcf	3,5
   315  07DB  0086               	movwf	6	;volatile
   316                           ;ourhc.c: 88: TRISC=0xff;
   317  07DC  1683               	bsf	3,5
   318  07DD  0087               	movwf	7	;volatile
   319                           ;ourhc.c: 89: PORTC=0xFF;
   320  07DE  1283               	bcf	3,5
   321  07DF  0087               	movwf	7	;volatile
   322                           ;ourhc.c: 91: TRISD=0x00;
   323  07E0  1683               	bsf	3,5
   324  07E1  0188               	clrf	8	;volatile
   325                           ;ourhc.c: 92: PORTD=0xff;
   326  07E2  1283               	bcf	3,5
   327  07E3  0088               	movwf	8	;volatile
   328                           ;ourhc.c: 94: }
   329  07E4  0008               	return
   330                           ;ourhc.c: 99: void main(void)
   331                           ;ourhc.c: 100: {
   332  07E5                     _main
   333                           ;ourhc.c: 101: Init_IO();
   334  07E5  27D2               	fcall	_Init_IO
   335  07E6                     l34
   336                           ;ourhc.c: 102: while(1)
   337                           ;ourhc.c: 103: {
   338  07E6  2740               	fcall	_Getch
   339                           ;ourhc.c: 105: PORTB=Table[k];
   340  07E7  0820               	movf	_k,w
   341  07E8  3E29               	addlw	_Table
   342  07E9  0084               	movwf	4
   343  07EA  1383               	bcf	3,7
   344  07EB  0800               	movf	0,w
   345  07EC  0086               	movwf	6	;volatile
   346                           ;ourhc.c: 106: PORTD=0x0f;
   347  07ED  300F               	movlw	15
   348  07EE  0088               	movwf	8	;volatile
   349                           ;ourhc.c: 108: }
   350  07EF  2FE6               	goto	l34
   351                           
   352                           	psect	text4
   353  0000                     
   354  0000                     
   355  0000                     
   356  0000                     
   357  0000                     
   358  0000                     
   359  0000                     
   360  0000                     
   361  0000                     
   362  0000                     
   363  0000                     
   364  0000                     
   365  0000                     
   366  0000                     
   367  0000                     
   368  0000                     
   369  0000                     
   370  0000                     
   371  0000                     
   372  0000                     
   373  0000                     
   374  0000                     
   375  0000                     
   376  0000                     
   377  0000                     
   378  0000                     
   379  0000                     
   380  0000                     
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579  0000                     
   580  0000                     
   581  0000                     
   582  0000                     
   583  0000                     
   584  0000                     
   585  0000                     
   586  0000                     
   587  0000                     
   588  0000                     
   589  0000                     
   590  0000                     
   591  0000                     
   592  0000                     
   593  0000                     
   594  0000                     
   595  0000                     
   596  0000                     
   597  0000                     
   598  0000                     
   599  0000                     
   600  0000                     
   601  0000                     
   602  0000                     
   603  0000                     
   604  0000                     
   605  0000                     
   606  0000                     
   607  0000                     
   608  0000                     
   609  0000                     
   610  0000                     
   611  0000                     
   612  0000                     
   613  0000                     
   614  0000                     
   615  0000                     
   616  0000                     
   617  0000                     
   618  0000                     
   619  0000                     
   620  0000                     
   621  0000                     
   622  0000                     
   623  0000                     
   624  0000                     
   625  0000                     
   626  0000                     
   627  0000                     
   628  0000                     
   629                           
   630                           	psect	rbss_0
   631  0020                     _k
   632  0020                     	ds	1


HI-TECH Software PICC Macro Assembler V8.05PL1
Symbol Table                                          Sun Oct 11 19:42:43 2009

 ?a_DelayMS 0027     ?a_Getch 0021           l2 072B           l5 072F  
         _k 0020          l20 07B1          l21 07B4          l30 07CF  
        l22 07B7          l23 07BA          l24 07BD          l16 07A5  
        l25 07C0          l17 07A8          l34 07E6          l26 07C3  
        l18 07AB          l27 07C6          l19 07AE          l28 07C9  
        l29 07CC          fsr 0004     _DelayMS 0726        _main 07E5  
      start 0004     _Init_IO 07D2       _Getch 0740       _Table 0029  
     status 0003   copy_bank0 0008  clear_bank0 0004    ?_DelayMS 0025  
