Sunplus u'nSP Assembler - Ver. 1.14.12
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.23
                            	// Command: F:\ÁèÑôÈí¼þ\toolchain\cc1.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccUBaaaa.i -fkeep-inline-functions -quiet -dumpbase PlayData.c -mglobal-var-iram -gstabs -Wall -o .\Debug/PlayData.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "E:/µ¥Æ¬»úÕûÀí/ÁèÑôµ¥Æ¬»ú/Ä£×é×ÊÁÏ/ºìÍâ²âÎÂÄ£×é/Demo_Code/TNRFD_Demo2/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 3A 00
         2F 00 B5 00
         A5 00 C6 00
         AC 00 BB 00
         FA 00 D5 00
         FB 00 C0 00
         ED 00 2F 00
         C1 00 E8 00
         D1 00 F4 00
         B5 00 A5 00
         C6 00 AC 00
         BB 00 FA 00
         2F 00 C4 00
         A3 00 D7 00
         E9 00 D7 00
         CA 00 C1 00
         CF 00 2F 00
         BA 00 EC 00
         CD 00 E2 00
         B2 00 E2 00
         CE 00 C2 00
         C4 00 A3 00
         D7 00 E9 00
         2F 00 44 00
         65 00 6D 00
         6F 00 5F 00
         43 00 6F 00
         64 00 65 00
         2F 00 54 00
         4E 00 52 00
         46 00 44 00
         5F 00 44 00
         65 00 6D 00
         6F 00 32 00
         2F 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008C7C                    	.code
0000005E                    	.debug
0000005E 2E 00 73 00        		.dw '.stabs "E:/µ/245Æ/254»/372Õ/373À/355/Á/350Ñ/364µ/245Æ/254»/372/Ä/243×/351×/312Á/317/º/354Í/342²/342Î/302Ä/243×/351/Demo_Code/TNRFD_Demo2/PlayData.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 3A 00
         2F 00 B5 00
         2F 00 32 00
         34 00 35 00
         C6 00 2F 00
         32 00 35 00
         34 00 BB 00
         2F 00 33 00
         37 00 32 00
         D5 00 2F 00
         33 00 37 00
         33 00 C0 00
         2F 00 33 00
         35 00 35 00
         2F 00 C1 00
         2F 00 33 00
         35 00 30 00
         D1 00 2F 00
         33 00 36 00
         34 00 B5 00
         2F 00 32 00
         34 00 35 00
         C6 00 2F 00
         32 00 35 00
         34 00 BB 00
         2F 00 33 00
         37 00 32 00
         2F 00 C4 00
         2F 00 32 00
         34 00 33 00
         D7 00 2F 00
         33 00 35 00
         31 00 D7 00
         2F 00 33 00
         31 00 32 00
         C1 00 2F 00
         33 00 31 00
         37 00 2F 00
         BA 00 2F 00
         33 00 35 00
         34 00 CD 00
         2F 00 33 00
         34 00 32 00
         B2 00 2F 00
         33 00 34 00
         32 00 CE 00
         2F 00 33 00
         30 00 32 00
         C4 00 2F 00
         32 00 34 00
         33 00 D7 00
         2F 00 33 00
         35 00 31 00
         2F 00 44 00
         65 00 6D 00
         6F 00 5F 00
         43 00 6F 00
         64 00 65 00
         2F 00 54 00
         4E 00 52 00
         46 00 44 00
         5F 00 44 00
         65 00 6D 00
         6F 00 32 00
         2F 00 50 00
         6C 00 61 00
         79 00 44 00
         61 00 74 00
         61 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008C7C                    	.code
00008C7C                    	.code
                            	Ltext0:
00000102                    	.debug
00000102 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
0000012E                    	.debug
0000012E 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
00000154                    	.debug
00000154 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008C7C                    	.CODE
0000018F                    	.debug
0000018F 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
000001BF                    	.debug
000001BF 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
000001F9                    	.debug
000001F9 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
00000239                    	.debug
00000239 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008C7C                    	.CODE
00000278                    	.debug
00000278 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
000002AA                    	.debug
000002AA 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
000002E0                    	.debug
000002E0 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
00000316                    	.debug
00000316 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008C7C                    	.CODE
00000349                    	.debug
00000349 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
0000036F                    	.debug
0000036F 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008C7C                    	.CODE
00000396                    	.debug
00000396 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
000003C2                    	.debug
000003C2 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008C7C                    	.CODE
00000403                    	.debug
00000403 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008C7C                    	.CODE
00000432                    	.debug
00000432 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
00000462                    	.debug
00000462 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008C7C                    	.CODE
00000497                    	.debug
00000497 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008C7C                    	.CODE
00008C7C                    	.code
000004B7                    	.debug
000004B7 2E 00 73 00        		.dw '.stabs "PlaySnd_Auto:F19",36,0,0,',0,0,offset _PlaySnd_Auto,seg _PlaySnd_Auto,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         53 00 6E 00
         64 00 5F 00
         41 00 75 00
         74 00 6F 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008C7C                    	.CODE
                            	.public _PlaySnd_Auto
                            	_PlaySnd_Auto:	.proc
000004DE                    	.debug
000004DE 2E 00 73 00        		.dw '.stabn 0x44,0,18,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         2C 00 00 00
         00 00      
000004F1 00 00 00 00        		.dd LM1-_PlaySnd_Auto
000004F3 0D 00 0A 00        		.dw 0x0d,0x0a
00008C7C                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000004F5                    	.debug
000004F5 2E 00 73 00        		.dw '.stabn 0xa6,0,0,1',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
00008C7C                    	.code
00008C7C 88 DA              		PUSH BP to [SP]
00008C7D 41 20              		SP-=1
00008C7E 08 0B 01 00        		BP=SP+1
                            	
00008C80 0D 03 04 00        		R1=BP+4
00008C82 C5 D2              		[BP]=R1	// QImode move
00000508                    	.debug
00000508 2E 00 73 00        		.dw '.stabn 0x44,0,19,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         2C 00 00 00
         00 00      
0000051B 07 00 00 00        		.dd LM2-_PlaySnd_Auto
0000051D 0D 00 0A 00        		.dw 0x0d,0x0a
00008C83                    	.code
                            	LM2:
00008C83 41 92              		R1=1	// QImode move
00008C84 C8 D2              		[SP--]=R1	// QImode move
00008C85 40 F0 A4 80        		CALL _SACM_S480_Initial	// call with return value
00008C87 41 00              		SP = SP + 1	//SP
0000051F                    	.debug
0000051F 2E 00 73 00        		.dw '.stabn 0x44,0,20,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         2C 00 00 00
         00 00      
00000532 0C 00 00 00        		.dd LM3-_PlaySnd_Auto
00000534 0D 00 0A 00        		.dw 0x0d,0x0a
00008C88                    	.code
                            	LM3:
00008C88 43 92              		R1=3	// QImode move
00008C89 C8 D2              		[SP--]=R1	// QImode move
00008C8A 43 92              		R1=3	// QImode move
00008C8B C8 D2              		[SP--]=R1	// QImode move
00008C8C C5 94              		R2=[BP]	// QImode move
00008C8D C2 92              		R1=[R2]	// QImode move
00008C8E C8 D2              		[SP--]=R1	// QImode move
00008C8F 40 F0 DB 80        		CALL _SACM_S480_Play	// call without return value
00008C91 43 00              		SP = SP + 3	//SP
00000536                    	.debug
00000536 2E 00 73 00        		.dw '.stabn 0x44,0,21,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         2C 00 00 00
         00 00      
00000549 16 00 00 00        		.dd LM4-_PlaySnd_Auto
0000054B 0D 00 0A 00        		.dw 0x0d,0x0a
00008C92                    	.code
                            	LM4:
                            	L3:
00008C92 40 F0 BD 81        		CALL _SACM_S480_Status	// call with return value
00008C94 09 B5 01 00        		R2=R1&1
00008C96 40 44              		CMP R2,0	// QImode test
00008C97 04 4E 01 EE        		NSJNZ L5	//QImode NE
         00 EE      
00008C9A 0F 9F A3 8C        		PC=L4	// jump
                            	L5:
0000054D                    	.debug
0000054D 2E 00 73 00        		.dw '.stabn 0x44,0,23,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         2C 00 00 00
         00 00      
00000560 20 00 00 00        		.dd LM5-_PlaySnd_Auto
00000562 0D 00 0A 00        		.dw 0x0d,0x0a
00008C9C                    	.code
                            	LM5:
00008C9C 40 F0 14 82        		CALL _SACM_S480_ServiceLoop	// call without return value
00000564                    	.debug
00000564 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
00000577 22 00 00 00        		.dd LM6-_PlaySnd_Auto
00000579 0D 00 0A 00        		.dw 0x0d,0x0a
00008C9E                    	.code
                            	LM6:
00008C9E 41 92              		R1=1	// QImode move
00008C9F 19 D3 12 70        		[28690]=R1	// QImode move
0000057B                    	.debug
0000057B 2E 00 73 00        		.dw '.stabn 0x44,0,25,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         2C 00 00 00
         00 00      
0000058E 25 00 00 00        		.dd LM7-_PlaySnd_Auto
00000590 0D 00 0A 00        		.dw 0x0d,0x0a
00008CA1                    	.code
                            	LM7:
00008CA1 0F 9F 92 8C        		PC=L3	// jump
                            	L4:
00000592                    	.debug
00000592 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
000005A5 27 00 00 00        		.dd LM8-_PlaySnd_Auto
000005A7 0D 00 0A 00        		.dw 0x0d,0x0a
00008CA3                    	.code
                            	LM8:
00008CA3 40 F0 73 81        		CALL _SACM_S480_Stop	// call without return value
000005A9                    	.debug
000005A9 2E 00 73 00        		.dw '.stabn 0x44,0,27,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         2C 00 00 00
         00 00      
000005BC 29 00 00 00        		.dd LM9-_PlaySnd_Auto
000005BE 0D 00 0A 00        		.dw 0x0d,0x0a
00008CA5                    	.code
                            	LM9:
000005C0                    	.debug
000005C0 2E 00 73 00        		.dw '.stabn 0x44,0,27,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         2C 00 00 00
         00 00      
000005D3 29 00 00 00        		.dd LM10-_PlaySnd_Auto
000005D5 0D 00 0A 00        		.dw 0x0d,0x0a
00008CA5                    	.code
                            	LM10:
                            	L2:
                            	
00008CA5 41 00              		SP+=1
00008CA6 88 98              		POP BP from [SP]
00008CA7 90 9A              		RETF
                            		.endp	// end of PlaySnd_Auto
                            	
000005D7                    	.debug
000005D7 2E 00 73 00        		.dw '.stabs "uiSndIndex:p4",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         53 00 6E 00
         64 00 49 00
         6E 00 64 00
         65 00 78 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
00008CA8                    	.CODE
000005F9                    	.debug
000005F9 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000602 2C 00 00 00        		.dd LME1-_PlaySnd_Auto
00000604 0D 00 0A 00        		.dw 0x0d,0x0a
00008CA8                    	.code
                            	LME1:
00008CA8                    	.code
00000606                    	.debug
00000606 2E 00 73 00        		.dw '.stabs "F_TempplayAndShow:F19",36,0,0,',0,0,offset _F_TempplayAndShow,seg _F_TempplayAndShow,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 5F 00
         54 00 65 00
         6D 00 70 00
         70 00 6C 00
         61 00 79 00
         41 00 6E 00
         64 00 53 00
         68 00 6F 00
         77 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         2C 00 00 00
         0D 00 0A 00
00008CA8                    	.CODE
                            	.public _F_TempplayAndShow
                            	_F_TempplayAndShow:	.proc
00000632                    	.debug
00000632 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
00000645 00 00 00 00        		.dd LM11-_F_TempplayAndShow
00000647 0D 00 0A 00        		.dw 0x0d,0x0a
00008CA8                    	.code
                            	LM11:
                            		// total=16, vars=16
                            		// frame_pointer_needed: 1
00000649                    	.debug
00000649 2E 00 73 00        		.dw '.stabn 0xa6,0,0,16',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 36 00
         0D 00 0A 00
00008CA8                    	.code
00008CA8 88 DA              		PUSH BP to [SP]
00008CA9 50 20              		SP-=16
00008CAA 08 0B 01 00        		BP=SP+1
                            	
00008CAC 0D 03 13 00        		R1=BP+19
00008CAE 06 D2              		[BP+6]=R1	// QImode move
                            	LBB2:
0000065D                    	.debug
0000065D 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
00000670 07 00 00 00        		.dd LM12-_F_TempplayAndShow
00000672 0D 00 0A 00        		.dw 0x0d,0x0a
00008CAF                    	.code
                            	LM12:
00008CAF 06 96              		R3=[BP+6]	// QImode move
00008CB0 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008CB1 CB 94              		R2=[R3--]
00008CB2 40 96              		R3=0	// HFmode immediate to register move
00008CB3 0C 99 C8 42        		R4=17096
00008CB5 90 D8              		PUSH R3,R4 to [SP]	// pushhf
00008CB6 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008CB7 40 F0 01 8F        		CALL __mulf2	// call with return value
00008CB9 44 00              		SP = SP + 4	//SP
00008CBA 06 96              		R3=[BP+6]	// QImode move
00008CBB D3 D2              		[R3++]=R1	// [RD]=RS HFmode, RD!=RS+1
00008CBC CB D4              		[R3--]=R2
00000674                    	.debug
00000674 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
00000687 15 00 00 00        		.dd LM13-_F_TempplayAndShow
00000689 0D 00 0A 00        		.dw 0x0d,0x0a
00008CBD                    	.code
                            	LM13:
00008CBD 05 93              		R1=BP	// QImode move
00008CBE 0D 03 05 00        		R1=BP+5
00008CC0 07 D2              		[BP+7]=R1	// QImode move
00008CC1 06 96              		R3=[BP+6]	// QImode move
00008CC2 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008CC3 CB 94              		R2=[R3--]
00008CC4 0B 97 00 40        		R3=16384	// HFmode immediate to register move
00008CC6 0C 99 1C 46        		R4=17948
00008CC8 90 D8              		PUSH R3,R4 to [SP]	// pushhf
00008CC9 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008CCA 40 F0 62 91        		CALL __divf2	// call with return value
00008CCC 44 00              		SP = SP + 4	//SP
00008CCD 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008CCE 40 F0 9B 93        		CALL __cvf2i1	// call with return value
00008CD0 42 00              		SP = SP + 2	//SP
00008CD1 07 94              		R2=[BP+7]	// QImode move
00008CD2 C2 D2              		[R2]=R1	// QImode move
0000068B                    	.debug
0000068B 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
0000069E 2B 00 00 00        		.dd LM14-_F_TempplayAndShow
000006A0 0D 00 0A 00        		.dw 0x0d,0x0a
00008CD3                    	.code
                            	LM14:
00008CD3 05 93              		R1=BP	// QImode move
00008CD4 0D 07 04 00        		R3=BP+4
00008CD6 08 D6              		[BP+8]=R3	// QImode move
00008CD7 06 96              		R3=[BP+6]	// QImode move
00008CD8 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008CD9 CB 94              		R2=[R3--]
00008CDA 40 96              		R3=0	// HFmode immediate to register move
00008CDB 0C 99 7A 44        		R4=17530
00008CDD 90 D8              		PUSH R3,R4 to [SP]	// pushhf
00008CDE 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008CDF 40 F0 62 91        		CALL __divf2	// call with return value
00008CE1 44 00              		SP = SP + 4	//SP
00008CE2 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008CE3 40 F0 9B 93        		CALL __cvf2i1	// call with return value
00008CE5 42 00              		SP = SP + 2	//SP
00008CE6 08 94              		R2=[BP+8]	// QImode move
00008CE7 C2 D2              		[R2]=R1	// QImode move
000006A2                    	.debug
000006A2 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
000006B5 40 00 00 00        		.dd LM15-_F_TempplayAndShow
000006B7 0D 00 0A 00        		.dw 0x0d,0x0a
00008CE8                    	.code
                            	LM15:
00008CE8 05 93              		R1=BP	// QImode move
00008CE9 0D 07 04 00        		R3=BP+4
00008CEB 09 D6              		[BP+9]=R3	// QImode move
00008CEC 05 93              		R1=BP	// QImode move
00008CED 0D 05 04 00        		R2=BP+4
00008CEF 02 97              		R3=R2	// QImode move
00008CF0 C3 92              		R1=[R3]	// QImode move
00008CF1 4A 94              		R2=10	// QImode move
00008CF2 C8 D4              		[SP--]=R2	// QImode move
00008CF3 C8 D2              		[SP--]=R1	// QImode move
00008CF4 40 F0 C1 93        		CALL __modi1	// call with return value
00008CF6 42 00              		SP = SP + 2	//SP
00008CF7 09 94              		R2=[BP+9]	// QImode move
00008CF8 C2 D2              		[R2]=R1	// QImode move
000006B9                    	.debug
000006B9 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
000006CC 51 00 00 00        		.dd LM16-_F_TempplayAndShow
000006CE 0D 00 0A 00        		.dw 0x0d,0x0a
00008CF9                    	.code
                            	LM16:
00008CF9 05 93              		R1=BP	// QImode move
00008CFA 0D 07 03 00        		R3=BP+3
00008CFC 0A D6              		[BP+10]=R3	// QImode move
00008CFD 06 96              		R3=[BP+6]	// QImode move
00008CFE D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008CFF CB 94              		R2=[R3--]
00008D00 40 96              		R3=0	// HFmode immediate to register move
00008D01 0C 99 C8 42        		R4=17096
00008D03 90 D8              		PUSH R3,R4 to [SP]	// pushhf
00008D04 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008D05 40 F0 62 91        		CALL __divf2	// call with return value
00008D07 44 00              		SP = SP + 4	//SP
00008D08 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008D09 40 F0 9B 93        		CALL __cvf2i1	// call with return value
00008D0B 42 00              		SP = SP + 2	//SP
00008D0C 0A 94              		R2=[BP+10]	// QImode move
00008D0D C2 D2              		[R2]=R1	// QImode move
000006D0                    	.debug
000006D0 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
000006E3 66 00 00 00        		.dd LM17-_F_TempplayAndShow
000006E5 0D 00 0A 00        		.dw 0x0d,0x0a
00008D0E                    	.code
                            	LM17:
00008D0E 05 93              		R1=BP	// QImode move
00008D0F 0D 07 03 00        		R3=BP+3
00008D11 0B D6              		[BP+11]=R3	// QImode move
00008D12 05 93              		R1=BP	// QImode move
00008D13 0D 05 03 00        		R2=BP+3
00008D15 02 97              		R3=R2	// QImode move
00008D16 C3 92              		R1=[R3]	// QImode move
00008D17 4A 94              		R2=10	// QImode move
00008D18 C8 D4              		[SP--]=R2	// QImode move
00008D19 C8 D2              		[SP--]=R1	// QImode move
00008D1A 40 F0 C1 93        		CALL __modi1	// call with return value
00008D1C 42 00              		SP = SP + 2	//SP
00008D1D 0B 94              		R2=[BP+11]	// QImode move
00008D1E C2 D2              		[R2]=R1	// QImode move
000006E7                    	.debug
000006E7 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
000006FA 77 00 00 00        		.dd LM18-_F_TempplayAndShow
000006FC 0D 00 0A 00        		.dw 0x0d,0x0a
00008D1F                    	.code
                            	LM18:
00008D1F 05 93              		R1=BP	// QImode move
00008D20 0D 07 02 00        		R3=BP+2
00008D22 0C D6              		[BP+12]=R3	// QImode move
00008D23 06 96              		R3=[BP+6]	// QImode move
00008D24 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008D25 CB 94              		R2=[R3--]
00008D26 40 96              		R3=0	// HFmode immediate to register move
00008D27 0C 99 20 41        		R4=16672
00008D29 90 D8              		PUSH R3,R4 to [SP]	// pushhf
00008D2A 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008D2B 40 F0 62 91        		CALL __divf2	// call with return value
00008D2D 44 00              		SP = SP + 4	//SP
00008D2E 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008D2F 40 F0 9B 93        		CALL __cvf2i1	// call with return value
00008D31 42 00              		SP = SP + 2	//SP
00008D32 0C 94              		R2=[BP+12]	// QImode move
00008D33 C2 D2              		[R2]=R1	// QImode move
000006FE                    	.debug
000006FE 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
00000711 8C 00 00 00        		.dd LM19-_F_TempplayAndShow
00000713 0D 00 0A 00        		.dw 0x0d,0x0a
00008D34                    	.code
                            	LM19:
00008D34 05 93              		R1=BP	// QImode move
00008D35 0D 07 02 00        		R3=BP+2
00008D37 0D D6              		[BP+13]=R3	// QImode move
00008D38 05 93              		R1=BP	// QImode move
00008D39 0D 05 02 00        		R2=BP+2
00008D3B 02 97              		R3=R2	// QImode move
00008D3C C3 92              		R1=[R3]	// QImode move
00008D3D 4A 94              		R2=10	// QImode move
00008D3E C8 D4              		[SP--]=R2	// QImode move
00008D3F C8 D2              		[SP--]=R1	// QImode move
00008D40 40 F0 C1 93        		CALL __modi1	// call with return value
00008D42 42 00              		SP = SP + 2	//SP
00008D43 0D 94              		R2=[BP+13]	// QImode move
00008D44 C2 D2              		[R2]=R1	// QImode move
00000715                    	.debug
00000715 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
00000728 9D 00 00 00        		.dd LM20-_F_TempplayAndShow
0000072A 0D 00 0A 00        		.dw 0x0d,0x0a
00008D45                    	.code
                            	LM20:
00008D45 05 93              		R1=BP	// QImode move
00008D46 0D 07 01 00        		R3=BP+1
00008D48 0E D6              		[BP+14]=R3	// QImode move
00008D49 06 96              		R3=[BP+6]	// QImode move
00008D4A D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008D4B CB 94              		R2=[R3--]
00008D4C 90 D4              		PUSH R1,R2 to [SP]	// pushhf
00008D4D 40 F0 9B 93        		CALL __cvf2i1	// call with return value
00008D4F 42 00              		SP = SP + 2	//SP
00008D50 0E 94              		R2=[BP+14]	// QImode move
00008D51 C2 D2              		[R2]=R1	// QImode move
0000072C                    	.debug
0000072C 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
0000073F AA 00 00 00        		.dd LM21-_F_TempplayAndShow
00000741 0D 00 0A 00        		.dw 0x0d,0x0a
00008D52                    	.code
                            	LM21:
00008D52 05 93              		R1=BP	// QImode move
00008D53 0D 07 01 00        		R3=BP+1
00008D55 0F D6              		[BP+15]=R3	// QImode move
00008D56 05 93              		R1=BP	// QImode move
00008D57 0D 05 01 00        		R2=BP+1
00008D59 02 97              		R3=R2	// QImode move
00008D5A C3 92              		R1=[R3]	// QImode move
00008D5B 4A 94              		R2=10	// QImode move
00008D5C C8 D4              		[SP--]=R2	// QImode move
00008D5D C8 D2              		[SP--]=R1	// QImode move
00008D5E 40 F0 C1 93        		CALL __modi1	// call with return value
00008D60 42 00              		SP = SP + 2	//SP
00008D61 0F 94              		R2=[BP+15]	// QImode move
00008D62 C2 D2              		[R2]=R1	// QImode move
00000743                    	.debug
00000743 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
00000756 BB 00 00 00        		.dd LM22-_F_TempplayAndShow
00000758 0D 00 0A 00        		.dw 0x0d,0x0a
00008D63                    	.code
                            	LM22:
00008D63 05 93              		R1=BP	// QImode move
00008D64 0D 05 05 00        		R2=BP+5
00008D66 02 97              		R3=R2	// QImode move
00008D67 C3 92              		R1=[R3]	// QImode move
00008D68 40 42              		CMP R1,0	// QImode test
00008D69 10 5E 01 EE        		NSJZ L8	//QImode EQ
         00 EE      
0000075A                    	.debug
0000075A 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
0000076D C4 00 00 00        		.dd LM23-_F_TempplayAndShow
0000076F 0D 00 0A 00        		.dw 0x0d,0x0a
00008D6C                    	.code
                            	LM23:
00008D6C 05 93              		R1=BP	// QImode move
00008D6D 0D 05 05 00        		R2=BP+5
00008D6F 02 97              		R3=R2	// QImode move
00008D70 C3 92              		R1=[R3]	// QImode move
00008D71 C8 D2              		[SP--]=R1	// QImode move
00008D72 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008D74 41 00              		SP = SP + 1	//SP
00000771                    	.debug
00000771 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
00000784 CD 00 00 00        		.dd LM24-_F_TempplayAndShow
00000786 0D 00 0A 00        		.dw 0x0d,0x0a
00008D75                    	.code
                            	LM24:
00008D75 4A 92              		R1=10	// QImode move
00008D76 C8 D2              		[SP--]=R1	// QImode move
00008D77 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008D79 41 00              		SP = SP + 1	//SP
                            	L8:
00000788                    	.debug
00000788 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
0000079B D2 00 00 00        		.dd LM25-_F_TempplayAndShow
0000079D 0D 00 0A 00        		.dw 0x0d,0x0a
00008D7A                    	.code
                            	LM25:
00008D7A 05 93              		R1=BP	// QImode move
00008D7B 0D 05 05 00        		R2=BP+5
00008D7D 02 97              		R3=R2	// QImode move
00008D7E C3 92              		R1=[R3]	// QImode move
00008D7F 40 42              		CMP R1,0	// QImode test
00008D80 1D 5E 01 EE        		NSJZ L9	//QImode EQ
         00 EE      
00008D83 05 93              		R1=BP	// QImode move
00008D84 0D 05 04 00        		R2=BP+4
00008D86 02 97              		R3=R2	// QImode move
00008D87 C3 92              		R1=[R3]	// QImode move
00008D88 40 42              		CMP R1,0	// QImode test
00008D89 14 4E 01 EE        		NSJNZ L9	//QImode NE
         00 EE      
00008D8C 05 93              		R1=BP	// QImode move
00008D8D 0D 05 03 00        		R2=BP+3
00008D8F 02 97              		R3=R2	// QImode move
00008D90 C3 92              		R1=[R3]	// QImode move
00008D91 40 42              		CMP R1,0	// QImode test
00008D92 0B 5E 01 EE        		NSJZ L9	//QImode EQ
         00 EE      
0000079F                    	.debug
0000079F 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
000007B2 ED 00 00 00        		.dd LM26-_F_TempplayAndShow
000007B4 0D 00 0A 00        		.dw 0x0d,0x0a
00008D95                    	.code
                            	LM26:
00008D95 05 93              		R1=BP	// QImode move
00008D96 0D 05 04 00        		R2=BP+4
00008D98 02 97              		R3=R2	// QImode move
00008D99 C3 92              		R1=[R3]	// QImode move
00008D9A C8 D2              		[SP--]=R1	// QImode move
00008D9B 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008D9D 41 00              		SP = SP + 1	//SP
                            	L9:
000007B6                    	.debug
000007B6 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
000007C9 F6 00 00 00        		.dd LM27-_F_TempplayAndShow
000007CB 0D 00 0A 00        		.dw 0x0d,0x0a
00008D9E                    	.code
                            	LM27:
00008D9E 05 93              		R1=BP	// QImode move
00008D9F 0D 05 04 00        		R2=BP+4
00008DA1 02 97              		R3=R2	// QImode move
00008DA2 C3 92              		R1=[R3]	// QImode move
00008DA3 40 42              		CMP R1,0	// QImode test
00008DA4 10 5E 01 EE        		NSJZ L10	//QImode EQ
         00 EE      
000007CD                    	.debug
000007CD 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
000007E0 FF 00 00 00        		.dd LM28-_F_TempplayAndShow
000007E2 0D 00 0A 00        		.dw 0x0d,0x0a
00008DA7                    	.code
                            	LM28:
00008DA7 05 93              		R1=BP	// QImode move
00008DA8 0D 05 04 00        		R2=BP+4
00008DAA 02 97              		R3=R2	// QImode move
00008DAB C3 92              		R1=[R3]	// QImode move
00008DAC C8 D2              		[SP--]=R1	// QImode move
00008DAD 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008DAF 41 00              		SP = SP + 1	//SP
000007E4                    	.debug
000007E4 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
000007F7 08 01 00 00        		.dd LM29-_F_TempplayAndShow
000007F9 0D 00 0A 00        		.dw 0x0d,0x0a
00008DB0                    	.code
                            	LM29:
00008DB0 4B 92              		R1=11	// QImode move
00008DB1 C8 D2              		[SP--]=R1	// QImode move
00008DB2 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008DB4 41 00              		SP = SP + 1	//SP
                            	L10:
000007FB                    	.debug
000007FB 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
0000080E 0D 01 00 00        		.dd LM30-_F_TempplayAndShow
00000810 0D 00 0A 00        		.dw 0x0d,0x0a
00008DB5                    	.code
                            	LM30:
00008DB5 05 93              		R1=BP	// QImode move
00008DB6 0D 05 04 00        		R2=BP+4
00008DB8 02 97              		R3=R2	// QImode move
00008DB9 C3 92              		R1=[R3]	// QImode move
00008DBA 40 42              		CMP R1,0	// QImode test
00008DBB 1D 4E 01 EE        		NSJNZ L11	//QImode NE
         00 EE      
00008DBE 05 93              		R1=BP	// QImode move
00008DBF 0D 05 05 00        		R2=BP+5
00008DC1 02 97              		R3=R2	// QImode move
00008DC2 C3 92              		R1=[R3]	// QImode move
00008DC3 40 42              		CMP R1,0	// QImode test
00008DC4 14 4E 01 EE        		NSJNZ L11	//QImode NE
         00 EE      
00008DC7 05 93              		R1=BP	// QImode move
00008DC8 0D 05 03 00        		R2=BP+3
00008DCA 02 97              		R3=R2	// QImode move
00008DCB C3 92              		R1=[R3]	// QImode move
00008DCC 40 42              		CMP R1,0	// QImode test
00008DCD 0B 4E 01 EE        		NSJNZ L11	//QImode NE
         00 EE      
00000812                    	.debug
00000812 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
00000825 28 01 00 00        		.dd LM31-_F_TempplayAndShow
00000827 0D 00 0A 00        		.dw 0x0d,0x0a
00008DD0                    	.code
                            	LM31:
00008DD0 05 93              		R1=BP	// QImode move
00008DD1 0D 05 03 00        		R2=BP+3
00008DD3 02 97              		R3=R2	// QImode move
00008DD4 C3 92              		R1=[R3]	// QImode move
00008DD5 C8 D2              		[SP--]=R1	// QImode move
00008DD6 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008DD8 41 00              		SP = SP + 1	//SP
                            	L11:
00000829                    	.debug
00000829 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
0000083C 31 01 00 00        		.dd LM32-_F_TempplayAndShow
0000083E 0D 00 0A 00        		.dw 0x0d,0x0a
00008DD9                    	.code
                            	LM32:
00008DD9 05 93              		R1=BP	// QImode move
00008DDA 0D 05 03 00        		R2=BP+3
00008DDC 02 97              		R3=R2	// QImode move
00008DDD C3 92              		R1=[R3]	// QImode move
00008DDE 40 42              		CMP R1,0	// QImode test
00008DDF 0B 5E 01 EE        		NSJZ L12	//QImode EQ
         00 EE      
00000840                    	.debug
00000840 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
00000853 3A 01 00 00        		.dd LM33-_F_TempplayAndShow
00000855 0D 00 0A 00        		.dw 0x0d,0x0a
00008DE2                    	.code
                            	LM33:
00008DE2 05 93              		R1=BP	// QImode move
00008DE3 0D 05 03 00        		R2=BP+3
00008DE5 02 97              		R3=R2	// QImode move
00008DE6 C3 92              		R1=[R3]	// QImode move
00008DE7 C8 D2              		[SP--]=R1	// QImode move
00008DE8 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008DEA 41 00              		SP = SP + 1	//SP
                            	L12:
00000857                    	.debug
00000857 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
0000086A 43 01 00 00        		.dd LM34-_F_TempplayAndShow
0000086C 0D 00 0A 00        		.dw 0x0d,0x0a
00008DEB                    	.code
                            	LM34:
00008DEB 4C 92              		R1=12	// QImode move
00008DEC C8 D2              		[SP--]=R1	// QImode move
00008DED 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008DEF 41 00              		SP = SP + 1	//SP
0000086E                    	.debug
0000086E 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00000881 48 01 00 00        		.dd LM35-_F_TempplayAndShow
00000883 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF0                    	.code
                            	LM35:
00008DF0 05 93              		R1=BP	// QImode move
00008DF1 0D 05 02 00        		R2=BP+2
00008DF3 02 97              		R3=R2	// QImode move
00008DF4 C3 92              		R1=[R3]	// QImode move
00008DF5 C8 D2              		[SP--]=R1	// QImode move
00008DF6 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008DF8 41 00              		SP = SP + 1	//SP
00000885                    	.debug
00000885 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00000898 51 01 00 00        		.dd LM36-_F_TempplayAndShow
0000089A 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF9                    	.code
                            	LM36:
00008DF9 05 93              		R1=BP	// QImode move
00008DFA 0D 05 01 00        		R2=BP+1
00008DFC 02 97              		R3=R2	// QImode move
00008DFD C3 92              		R1=[R3]	// QImode move
00008DFE C8 D2              		[SP--]=R1	// QImode move
00008DFF 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008E01 41 00              		SP = SP + 1	//SP
0000089C                    	.debug
0000089C 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
000008AF 5A 01 00 00        		.dd LM37-_F_TempplayAndShow
000008B1 0D 00 0A 00        		.dw 0x0d,0x0a
00008E02                    	.code
                            	LM37:
00008E02 4D 92              		R1=13	// QImode move
00008E03 C8 D2              		[SP--]=R1	// QImode move
00008E04 40 F0 7C 8C        		CALL _PlaySnd_Auto	// call without return value
00008E06 41 00              		SP = SP + 1	//SP
000008B3                    	.debug
000008B3 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
000008C6 5F 01 00 00        		.dd LM38-_F_TempplayAndShow
000008C8 0D 00 0A 00        		.dw 0x0d,0x0a
00008E07                    	.code
                            	LM38:
00008E07 41 92              		R1=1	// QImode move
00008E08 19 D3 12 70        		[28690]=R1	// QImode move
000008CA                    	.debug
000008CA 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
000008DD 62 01 00 00        		.dd LM39-_F_TempplayAndShow
000008DF 0D 00 0A 00        		.dw 0x0d,0x0a
00008E0A                    	.code
                            	LM39:
                            	LBE2:
000008E1                    	.debug
000008E1 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
000008F4 62 01 00 00        		.dd LM40-_F_TempplayAndShow
000008F6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E0A                    	.code
                            	LM40:
                            	L7:
                            	
00008E0A 50 00              		SP+=16
00008E0B 88 98              		POP BP from [SP]
00008E0C 90 9A              		RETF
                            		.endp	// end of F_TempplayAndShow
                            	
000008F8                    	.debug
000008F8 2E 00 73 00        		.dw '.stabs "temp:p12",160,0,0,19',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 65 00
         6D 00 70 00
         3A 00 70 00
         31 00 32 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 39 00
         0D 00 0A 00
00008E0D                    	.CODE
00000916                    	.debug
00000916 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000928 07 00 00 00        		.dd LBB2-_F_TempplayAndShow
0000092A 0D 00 0A 00        		.dw 0x0d,0x0a
00008E0D                    	.code
0000092C                    	.debug
0000092C 2E 00 73 00        		.dw '.stabs "iShow:20=ar1;0;5;1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 53 00
         68 00 6F 00
         77 00 3A 00
         32 00 30 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 35 00
         3B 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008E0D                    	.CODE
00000953                    	.debug
00000953 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000965 62 01 00 00        		.dd LBE2-_F_TempplayAndShow
00000967 0D 00 0A 00        		.dw 0x0d,0x0a
00008E0D                    	.code
00000969                    	.debug
00000969 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000972 65 01 00 00        		.dd LME2-_F_TempplayAndShow
00000974 0D 00 0A 00        		.dw 0x0d,0x0a
00008E0D                    	.code
                            	LME2:
                            	.external _SACM_S480_Stop
                            	.external _SACM_S480_ServiceLoop
                            	.external _SACM_S480_Status
                            	.external _SACM_S480_Play
                            	.external _SACM_S480_Initial
                            	.external __modi1
                            	.external __cvf2i1
                            	.external __divf2
                            	.external __mulf2
                            		.end
0 error(s), 0 warning(s).





































































































