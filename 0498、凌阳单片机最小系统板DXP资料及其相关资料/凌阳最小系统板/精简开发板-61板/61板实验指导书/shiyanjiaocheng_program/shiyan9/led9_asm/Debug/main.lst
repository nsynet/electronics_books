Sunplus u'nSP Assembler - Ver. 1.10.0
              Listing File Has Been Relocated
                            	//======================================================
                            	//  The information contained herein is the exclusive property of
                            	//  Sunnnorth Technology Co. And shall not be distributed, reproduced,
                            	//  or disclosed in whole in part without prior written permission.
                            	//           (C) COPYRIGHT 2003  SUNNORTH TECHNOLOGY CO.
                            	//                     ALL RIGHTS RESERVED
                            	//  The entire notice above must be reproduced on all authorized copies.
                            	//=======================================================
                            	
                            	//============================================================
                            	//  工程名称： led9_asm.scs
                            	//  功能描述:  用汇编实现发光二极管循回点亮并数码管计数
                            	//  文件来源：《61板实验教程》"实验九 发光二极管循回点亮并数码管计数“
                            	//  硬件连接： IOA低8位接至SEG接口控制LED的导通
                            	//             IOB低8位连至DIG通过ULN2003A控制8个LED的共阴极电平状态和数码管驱动
                            	//  IDE环境：   SUNPLUS u'nSPTM  IDE 1.8.0
                            	//
                            	//  涉及的库：
                            	//  组成文件:
                            	//    	main.asm
                            	//
                            	//  日期:  2004/8/19
                            	//===============================================
                            	
                            	//*****************************************************************************/
                            	// 文件名称： main.asm
                            	// 实现功能： 用汇编实现发光二极管循回点亮并数码管计数
                            	//            LED巡回闪烁，同时数码管从左至右显示0~8，全部显示完成后，LED停止闪烁，数码管全亮
                            	// 日期： 2004/8/19
                            	//*****************************************************************************/
                            	        .define P_IOA_Data			0x7000
                            			.define P_IOA_Dir			0x7002
                            			.define P_IOA_Attrib		0x7003
                            			.define P_IOB_Data			0x7005
                            			.define P_IOB_Dir			0x7007
                            			.define P_IOB_Attrib		0x7008
                            	        .define P_Watchdog_Clear 	0x7012
0000808C                    			.data
                            	//显示段码存放区
0000808C 3F 00 06 00        	DispTbl:.DW 0x003F,0x0006,0x005B,0x004F,0x0066				//0，1，2，3，4
         5B 00 4F 00
         66 00      
00008091 6D 00 7D 00        			.DW 0x006D,0x007D,0x0007,0x007F,0x00FF				//5，6，7，8，全亮								       
         07 00 7F 00
         FF 00      
00000000                    	        .ram 
00000000 00 00              	        .var R_Led = 0x0000           //存储数码管位驱动信息
00008026                    			.code
                            			.public _main
                            	//============================================================= 
                            	// 函数名称:    _main  
                            	// 日期：		20040819	
                            	// 功能描述:    发光二极管循回点亮并数码管计数
                            	//              LED巡回闪烁，同时数码管从左至右显示0~8，全部显示完成后，LED停止闪烁，数码管全亮
                            	// 语法格式:    _main 
                            	// 入口参数:    无
                            	// 出口参数:    无
                            	// 注意事项:    仅为用户模型
                            	//=============================================================
                            	_main:
00008026 09 93 FF 00        			r1 = 0x00FF						//设置A0~A7口为同相低电平输出
00008028 19 D3 02 70        			[P_IOA_Dir] = r1						  
0000802A 19 D3 03 70        			[P_IOA_Attrib] = r1	
0000802C 19 D3 07 70        			[P_IOB_Dir]=r1	                //设置B0~B7口为同相低电平输出
0000802E 19 D3 08 70        			[P_IOB_Attrib] = r1
00008030 40 92              			r1 = 0x0000						
00008031 19 D3 00 70        			[P_IOA_Data] = r1	
00008033 19 D3 05 70        			[P_IOB_Data] = r1				
00008035 41 96              			r3 = 0x0001                    //从第一个数码管开始
00008036 1B D7 00 00        			[R_Led] = r3                   //数码管位驱动
                            	L_Loop:		
00008038 40 94              	        r2 = 0x0000                     //防止误显示
00008039 1A D5 00 70        	        [P_IOA_Data] = r2;      
0000803B 11 93 00 00        	        r1 = [R_Led]                   //得到数码管位驱动
0000803D 19 D3 05 70        	        [P_IOB_Data] = r1;            
0000803F 0D 9B 8C 80        	        BP = DispTbl
00008041 C5 94              	        r2 = [BP]
00008042 1A D5 00 70        		    [P_IOA_Data] = r2;              //数码管显示0
00008044 40 F0 5F 80        		    call F_Delay
00008046 40 F0 69 80        		    call F_LedDisp                  //发光二极管循回点亮并数码管计数
00008048 11 93 00 00        		    r1 = [R_Led]                    //下一次的数码管位驱动
0000804A 41 93              		    r1 = r1 LSL 0x0001
0000804B 19 D3 00 00        	        [R_Led] = r1 
0000804D 41 06              		    r3 += 0x0001   
0000804E 47 46              	        cmp r3,0x0007
0000804F 58 4E              			jne	L_Loop					    //数码管未全部显示完成，跳转到L_Loop循环
00008050 40 94              			r2 = 0x0000                     //防止误显示
00008051 1A D5 00 70        	        [P_IOA_Data] = r2; 
00008053 7F 94              	        r2 = 0x003f;                    //数码管全亮
00008054 1A D5 05 70        	        [P_IOB_Data] = r2;       
00008056 0D 9B 8C 80        	        BP = DispTbl                    
00008058 49 0A              		    BP += 9 
00008059 C5 94              	        r2 = [BP]
0000805A 1A D5 00 70        		    [P_IOA_Data] = r2;   
                            	L_MainLoop:
0000805C 40 F0 5F 80        	        call  F_Delay
0000805E 43 EE              	        jmp   L_MainLoop
                            	
                            	//============================================================= 
                            	.public F_Delay;
0000805F                    	.code
                            	//============================================================= 
                            	// 函数名称:    void F_Delay()  
                            	// 日期：		20040819		
                            	// 功能描述:    延时并清看门狗
                            	//=============================================================
                            	F_Delay:
0000805F 90 D6              	          push r2,r3 to [SP]
00008060 0B 97 00 80        	          r3 = 0x8000
                            	L_Delay:  
00008062 41 94              	          r2 = 0x0001
00008063 1A D5 12 70        	          [P_Watchdog_Clear] = r2
00008065 41 26              	          r3 -= 0x0001
00008066 45 4E              	          jnz L_Delay
00008067 90 92              	          pop r2,r3 from [SP]
00008068 90 9A              	          retf
                            	//============================================================= 
                            	
                            	.public F_LedDisp;
00008069                    	.code
                            	//============================================================= 
                            	// 函数名称:    void F_LedDisp()  
                            	// 日期：		20040819		
                            	// 功能描述:    发光二极管点亮并数码管计数
                            	//=============================================================
                            	F_LedDisp:
00008069 88 D6              	          push r3,r3 to [sp]   
0000806A 41 92              	          r1 = 0x0001               
0000806B 01 97              	          r3 = r1                   //发光二极管状态      
                            	L_Led:                              //发光二极管一次循环点亮                
0000806C 40 94              		      r2 = 0x0000               //防止显示错误
0000806D 1A D5 00 70        		      [P_IOA_Data] = r2      
0000806F 0A 95 40 00        		      r2 = 0x0040               //LED点亮位驱动
00008071 1A D5 05 70        		      [P_IOB_Data] = r2           
00008073 1B D7 00 70        	          [P_IOA_Data] = r3         //LED新状态                                   
00008075 43 97              	          r3 = r3 LSL 1             //下一次LED状态
00008076 40 F0 5F 80        	          call F_Delay 
00008078 40 94              	          r2 = 0x0000               //防止显示错误
00008079 1A D5 00 70        		      [P_IOA_Data] = r2     
0000807B 12 95 00 00        	          r2 = [R_Led]              //LED点亮位驱动
0000807D 1A D5 05 70        	          [P_IOB_Data] = r2 
0000807F 0D 9B 8C 80        		      BP = DispTbl              //对应数字显示在数码管上
00008081 01 0B              		      BP += r1
00008082 C5 94              	          r2 = [BP]
00008083 1A D5 00 70        		      [P_IOA_Data] = r2;  
00008085 40 F0 5F 80        	          call F_Delay
00008087 41 02              		      r1 += 0x0001
00008088 49 42              		      cmp r1,0x0009
00008089 5E 4E              			  jne L_Led					 //LED未全部显示完成，跳转到L_Led循环  
0000808A 88 94              			  pop r3, r3 from [sp]  
0000808B 90 9A              	          retf
                            	//============================================================= 
                            	//main.asm 结束
                            	//=============================================================
0 error(s), 0 warning(s).

