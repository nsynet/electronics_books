Sunplus u'nSP Assembler - Ver. 1.8.0
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.10
                            	// Command: E:\PROGRA~1\Sunplus\UNSPID~3\IDE180\cc1.exe C:\DOCUME~1\Àî»ªÀö.DOMAIN\LOCALS~1\Temp\ccIxaaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -gstabs -o .\Debug/main.asm
                            	// gcc2_compiled.:
                            	
00009919                    	.code
                            	Ltext0:
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
0000002C                    	.debug
0000002C 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
00000052                    	.debug
00000052 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009919                    	.CODE
0000008D                    	.debug
0000008D 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
000000BD                    	.debug
000000BD 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
000000F7                    	.debug
000000F7 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
00000137                    	.debug
00000137 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009919                    	.CODE
00000176                    	.debug
00000176 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
000001A8                    	.debug
000001A8 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
000001DE                    	.debug
000001DE 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
00000214                    	.debug
00000214 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009919                    	.CODE
00000247                    	.debug
00000247 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
0000026D                    	.debug
0000026D 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009919                    	.CODE
00000294                    	.debug
00000294 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
000002C0                    	.debug
000002C0 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009919                    	.CODE
00000301                    	.debug
00000301 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009919                    	.CODE
00000330                    	.debug
00000330 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
00000360                    	.debug
00000360 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009919                    	.CODE
00000395                    	.debug
00000395 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
000003B5                    	.debug
000003B5 2E 00 73 00        		.dw '.stabs "BaseType:T20=eUartOpen:0,UartClose:1,;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 61 00
         73 00 65 00
         54 00 79 00
         70 00 65 00
         3A 00 54 00
         32 00 30 00
         3D 00 65 00
         55 00 61 00
         72 00 74 00
         4F 00 70 00
         65 00 6E 00
         3A 00 30 00
         2C 00 55 00
         61 00 72 00
         74 00 43 00
         6C 00 6F 00
         73 00 65 00
         3A 00 31 00
         2C 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009919                    	.CODE
000003F0                    	.debug
000003F0 2E 00 73 00        		.dw '.stabs "SubStatus:T21=eStop:0,Record:1,Play:2,\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 75 00
         62 00 53 00
         74 00 61 00
         74 00 75 00
         73 00 3A 00
         54 00 32 00
         31 00 3D 00
         65 00 53 00
         74 00 6F 00
         70 00 3A 00
         30 00 2C 00
         52 00 65 00
         63 00 6F 00
         72 00 64 00
         3A 00 31 00
         2C 00 50 00
         6C 00 61 00
         79 00 3A 00
         32 00 2C 00
         5C 00 5C 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000042D 2E 00 73 00        		.DW '.stabs "Download:3,Upload:4,Receive_data:5,\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 6F 00
         77 00 6E 00
         6C 00 6F 00
         61 00 64 00
         3A 00 33 00
         2C 00 55 00
         70 00 6C 00
         6F 00 61 00
         64 00 3A 00
         34 00 2C 00
         52 00 65 00
         63 00 65 00
         69 00 76 00
         65 00 5F 00
         64 00 61 00
         74 00 61 00
         3A 00 35 00
         2C 00 5C 00
         5C 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00000467 2E 00 73 00        		.DW '.stabs "RePlay_All:6,RePlay:7,;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         50 00 6C 00
         61 00 79 00
         5F 00 41 00
         6C 00 6C 00
         3A 00 36 00
         2C 00 52 00
         65 00 50 00
         6C 00 61 00
         79 00 3A 00
         37 00 2C 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009919                    	.CODE
00009919                    	.code
00000493                    	.debug
00000493 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00009919                    	.CODE
                            	.public _main
                            	_main:	.proc
000004B1                    	.debug
000004B1 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
000004C4 00 00 00 00        		.dd LM1-_main
000004C6 0D 00 0A 00        		.dw 0x0d,0x0a
00009919                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009919 88 DA              		push bp to [sp]
0000991A 41 20              		sp-=1
0000991B 08 0B 01 00        		bp=sp+1
                            	
0000991D 0D 03 04 00        		R1=BP+4
0000991F C5 D2              		[BP]=R1	// QImode move
000004C8                    	.debug
000004C8 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
000004DB 07 00 00 00        		.dd LM2-_main
000004DD 0D 00 0A 00        		.dw 0x0d,0x0a
00009920                    	.code
                            	LM2:
                            	LBB2:
00009920 41 92              		R1=1	// QImode move
00009921 19 D3 13 06        		[_BaseType]=R1	// QImode move
000004DF                    	.debug
000004DF 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
000004F2 0A 00 00 00        		.dd LM3-_main
000004F4 0D 00 0A 00        		.dw 0x0d,0x0a
00009923                    	.code
                            	LM3:
00009923 40 92              		R1=0	// QImode move
00009924 19 D3 14 06        		[_SubStatus]=R1	// QImode move
000004F6                    	.debug
000004F6 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
00000509 0D 00 00 00        		.dd LM4-_main
0000050B 0D 00 0A 00        		.dw 0x0d,0x0a
00009926                    	.code
                            	LM4:
00009926 41 92              		R1=1	// QImode move
00009927 19 D3 11 06        		[_Segment]=R1	// QImode move
0000050D                    	.debug
0000050D 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
00000520 10 00 00 00        		.dd LM5-_main
00000522 0D 00 0A 00        		.dw 0x0d,0x0a
00009929                    	.code
                            	LM5:
00009929 40 92              		R1=0	// HImode immediate to register move
0000992A 40 94              		R2=0
0000992B 19 D3 15 06        		[_Addr]=R1	// HImode [Label]=RS
0000992D 1A D5 16 06        		[_Addr+1]=R2
00000524                    	.debug
00000524 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
00000537 16 00 00 00        		.dd LM6-_main
00000539 0D 00 0A 00        		.dw 0x0d,0x0a
0000992F                    	.code
                            	LM6:
0000992F 09 93 FF 00        		R1=255	// QImode move
00009931 19 D3 0E 06        		[_Keycode]=R1	// QImode move
0000053B                    	.debug
0000053B 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
0000054E 1A 00 00 00        		.dd LM7-_main
00000550 0D 00 0A 00        		.dw 0x0d,0x0a
00009933                    	.code
                            	LM7:
00009933 40 92              		R1=0	// QImode move
00009934 19 D3 10 06        		[_i]=R1	// QImode move
00009936 09 63 00 10        		R1=(-4096)	// QImode move
00009938 19 D3 12 06        		[_internal_addr]=R1	// QImode move
                            	L3:
0000993A 11 93 10 06        		R1=[_i]	// QImode move
0000993C 54 42              		CMP R1,20	// QImode compare
0000993D 02 9E              		JA L10	// QImode LEU
0000993E 0F 9F 42 99        		PC=L6
                            	L10:
00009940 0F 9F 63 99        		pc=L4	// jump
                            	L6:
00000552                    	.debug
00000552 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
00000565 29 00 00 00        		.dd LM8-_main
00000567 0D 00 0A 00        		.dw 0x0d,0x0a
00009942                    	.code
                            	LM8:
00009942 11 93 12 06        		R1=[_internal_addr]	// QImode move
00009944 C8 D2              		[SP--]=R1	// QImode move
00009945 40 F0 34 80        		call _SP_ReadWord	// call with return value
00009947 41 00              		SP=SP+1
00009948 12 95 10 06        		R2=[_i]	// QImode move
0000994A 02 97              		R3=R2	// QImode move
0000994B 43 95              		R2=R3 lsl 1
0000994C 0C 99 1D 06        		R4=_Buffer	// QImode move
0000994E 04 97              		R3=R4	// QImode move
0000994F 02 07              		R3+=R2	// addqi3_r0r
00009950 40 94              		R2=0	// sign extend
00009951 01 93              		R1=R1
00009952 01 6E              		jpl 1
00009953 41 64              		R2=-1
00009954 03 99              		R4=R3	// QImode move
00009955 D4 D2              		[R4++]=R1	// [RD]=RS HImode, RD!=RS+1
00009956 CC D4              		[R4--]=R2
00000569                    	.debug
00000569 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
0000057C 3E 00 00 00        		.dd LM9-_main
0000057E 0D 00 0A 00        		.dw 0x0d,0x0a
00009957                    	.code
                            	LM9:
                            	L5:
00009957 11 93 10 06        		R1=[_i]	// QImode move
00009959 41 94              		R2=1	// QImode move
0000995A 19 05 10 06        		[_i]=R1+R2
0000995C 11 93 12 06        		R1=[_internal_addr]	// QImode move
0000995E 41 94              		R2=1	// QImode move
0000995F 19 05 12 06        		[_internal_addr]=R1+R2
00009961 0F 9F 3A 99        		pc=L3	// jump
                            	L4:
00000580                    	.debug
00000580 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00000593 4A 00 00 00        		.dd LM10-_main
00000595 0D 00 0A 00        		.dw 0x0d,0x0a
00009963                    	.code
                            	LM10:
00009963 40 F0 C8 A4        		call _System_Initial	// call with return value
00000597                    	.debug
00000597 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
000005AA 4C 00 00 00        		.dd LM11-_main
000005AC 0D 00 0A 00        		.dw 0x0d,0x0a
00009965                    	.code
                            	LM11:
00009965 40 92              		R1=0	// QImode move
00009966 C8 D2              		[SP--]=R1	// QImode move
00009967 40 F0 9A 80        		call _SACM_DVR_Initial	// call with return value
00009969 41 00              		SP=SP+1
000005AE                    	.debug
000005AE 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
000005C1 51 00 00 00        		.dd LM12-_main
000005C3 0D 00 0A 00        		.dw 0x0d,0x0a
0000996A                    	.code
                            	LM12:
                            	L7:
0000996A 0F 9F 6E 99        		pc=L9	// jump
0000996C 0F 9F 78 99        		pc=L8	// jump
                            	L9:
000005C5                    	.debug
000005C5 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
000005D8 55 00 00 00        		.dd LM13-_main
000005DA 0D 00 0A 00        		.dw 0x0d,0x0a
0000996E                    	.code
                            	LM13:
                            	LBB3:
0000996E 40 F0 0F A4        		call _F_Key_Scan	// call with return value
00009970 19 D3 0E 06        		[_Keycode]=R1	// QImode move
000005DC                    	.debug
000005DC 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
000005EF 59 00 00 00        		.dd LM14-_main
000005F1 0D 00 0A 00        		.dw 0x0d,0x0a
00009972                    	.code
                            	LM14:
00009972 40 F0 0B 9B        		call _According_to_Keycode	// call without return value
000005F3                    	.debug
000005F3 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
00000606 5B 00 00 00        		.dd LM15-_main
00000608 0D 00 0A 00        		.dw 0x0d,0x0a
00009974                    	.code
                            	LM15:
00009974 40 F0 C8 9C        		call _According_to_SubStatus	// call without return value
0000060A                    	.debug
0000060A 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
0000061D 5D 00 00 00        		.dd LM16-_main
0000061F 0D 00 0A 00        		.dw 0x0d,0x0a
00009976                    	.code
                            	LM16:
                            	LBE3:
00009976 0F 9F 6A 99        		pc=L7	// jump
                            	L8:
00000621                    	.debug
00000621 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
00000634 5F 00 00 00        		.dd LM17-_main
00000636 0D 00 0A 00        		.dw 0x0d,0x0a
00009978                    	.code
                            	LM17:
00009978 40 92              		R1=0	// QImode move
00009979 0F 9F 7B 99        		pc=L2	// jump
00000638                    	.debug
00000638 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
0000064B 62 00 00 00        		.dd LM18-_main
0000064D 0D 00 0A 00        		.dw 0x0d,0x0a
0000997B                    	.code
                            	LM18:
                            	LBE2:
0000064F                    	.debug
0000064F 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
00000662 62 00 00 00        		.dd LM19-_main
00000664 0D 00 0A 00        		.dw 0x0d,0x0a
0000997B                    	.code
                            	LM19:
                            	L2:
                            	
0000997B 41 00              		sp+=1
0000997C 88 98              		pop bp from [sp]
0000997D 90 9A              		retf
                            		.endp	// end of main
                            	
00000666                    	.debug
00000666 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000678 07 00 00 00        		.dd LBB2-_main
0000067A 0D 00 0A 00        		.dw 0x0d,0x0a
0000997E                    	.code
0000067C                    	.debug
0000067C 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000068E 55 00 00 00        		.dd LBB3-_main
00000690 0D 00 0A 00        		.dw 0x0d,0x0a
0000997E                    	.code
00000692                    	.debug
00000692 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000006A4 5D 00 00 00        		.dd LBE3-_main
000006A6 0D 00 0A 00        		.dw 0x0d,0x0a
0000997E                    	.code
000006A8                    	.debug
000006A8 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000006BA 62 00 00 00        		.dd LBE2-_main
000006BC 0D 00 0A 00        		.dw 0x0d,0x0a
0000997E                    	.code
000006BE                    	.debug
000006BE 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000006C7 65 00 00 00        		.dd LME1-_main
000006C9 0D 00 0A 00        		.dw 0x0d,0x0a
0000997E                    	.code
                            	LME1:
0000997E                    	.code
000006CB                    	.debug
000006CB 2E 00 73 00        		.dw '.stabs "Modify_Index:F19",36,0,0,',0,0,offset _Modify_Index,seg _Modify_Index,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6F 00
         64 00 69 00
         66 00 79 00
         5F 00 49 00
         6E 00 64 00
         65 00 78 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 65 00
         00 00 0D 00
         0A 00      
0000997E                    	.CODE
                            	.public _Modify_Index
                            	_Modify_Index:	.proc
000006F2                    	.debug
000006F2 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
00000705 00 00 00 00        		.dd LM20-_Modify_Index
00000707 0D 00 0A 00        		.dw 0x0d,0x0a
0000997E                    	.code
                            	LM20:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000997E 88 DA              		push bp to [sp]
0000997F 41 20              		sp-=1
00009980 08 0B 01 00        		bp=sp+1
                            	
00009982 0D 03 04 00        		R1=BP+4
00009984 C5 D2              		[BP]=R1	// QImode move
00000709                    	.debug
00000709 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
0000071C 07 00 00 00        		.dd LM21-_Modify_Index
0000071E 0D 00 0A 00        		.dw 0x0d,0x0a
00009985                    	.code
                            	LM21:
00009985 40 92              		R1=0	// QImode move
00009986 19 D3 10 06        		[_i]=R1	// QImode move
00009988 09 63 00 10        		R1=(-4096)	// QImode move
0000998A 19 D3 12 06        		[_internal_addr]=R1	// QImode move
                            	L12:
0000998C 11 93 10 06        		R1=[_i]	// QImode move
0000998E 54 42              		CMP R1,20	// QImode compare
0000998F 02 9E              		JA L25	// QImode LEU
00009990 0F 9F 94 99        		PC=L15
                            	L25:
00009992 0F 9F B5 99        		pc=L13	// jump
                            	L15:
00000720                    	.debug
00000720 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00000733 16 00 00 00        		.dd LM22-_Modify_Index
00000735 0D 00 0A 00        		.dw 0x0d,0x0a
00009994                    	.code
                            	LM22:
00009994 11 93 12 06        		R1=[_internal_addr]	// QImode move
00009996 C8 D2              		[SP--]=R1	// QImode move
00009997 40 F0 34 80        		call _SP_ReadWord	// call with return value
00009999 41 00              		SP=SP+1
0000999A 12 95 10 06        		R2=[_i]	// QImode move
0000999C 02 97              		R3=R2	// QImode move
0000999D 43 95              		R2=R3 lsl 1
0000999E 0C 99 1D 06        		R4=_Buffer	// QImode move
000099A0 04 97              		R3=R4	// QImode move
000099A1 02 07              		R3+=R2	// addqi3_r0r
000099A2 40 94              		R2=0	// sign extend
000099A3 01 93              		R1=R1
000099A4 01 6E              		jpl 1
000099A5 41 64              		R2=-1
000099A6 03 99              		R4=R3	// QImode move
000099A7 D4 D2              		[R4++]=R1	// [RD]=RS HImode, RD!=RS+1
000099A8 CC D4              		[R4--]=R2
00000737                    	.debug
00000737 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
0000074A 2B 00 00 00        		.dd LM23-_Modify_Index
0000074C 0D 00 0A 00        		.dw 0x0d,0x0a
000099A9                    	.code
                            	LM23:
                            	L14:
000099A9 11 93 10 06        		R1=[_i]	// QImode move
000099AB 41 94              		R2=1	// QImode move
000099AC 19 05 10 06        		[_i]=R1+R2
000099AE 11 93 12 06        		R1=[_internal_addr]	// QImode move
000099B0 41 94              		R2=1	// QImode move
000099B1 19 05 12 06        		[_internal_addr]=R1+R2
000099B3 0F 9F 8C 99        		pc=L12	// jump
                            	L13:
0000074E                    	.debug
0000074E 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
00000761 37 00 00 00        		.dd LM24-_Modify_Index
00000763 0D 00 0A 00        		.dw 0x0d,0x0a
000099B5                    	.code
                            	LM24:
000099B5 11 93 1D 06        		R1=[_Buffer]	// HImode RD=[Label]
000099B7 12 95 1E 06        		R2=[_Buffer+1]
000099B9 09 07 01 00        		R3=R1+1	// HImode RD=RS+#IMM16
000099BB 0A 19 00 00        		R4=R2+0, Carry
000099BD 1B D7 1D 06        		[_Buffer]=R3	// HImode [Label]=RS
000099BF 1C D9 1E 06        		[_Buffer+1]=R4
00000765                    	.debug
00000765 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
00000778 43 00 00 00        		.dd LM25-_Modify_Index
0000077A 0D 00 0A 00        		.dw 0x0d,0x0a
000099C1                    	.code
                            	LM25:
000099C1 13 97 1D 06        		R3=[_Buffer]	// HImode RD=[Label]
000099C3 14 99 1E 06        		R4=[_Buffer+1]
000099C5 03 93              		R1=R3	// HImode register to register move
000099C6 04 95              		R2=R4
000099C7 41 96              		R3=1	// QImode move
000099C8 C8 D6              		[SP--]=R3	// QImode move
000099C9 90 D4              		push R1,R2 to [sp]	// pushhi
000099CA 40 F0 FD A4        		call __lshiu2	// call with return value
000099CC 43 00              		SP=SP+3
000099CD 01 97              		R3=R1	// QImode move
000099CE 1B D7 0F 06        		[_Ret]=R3	// QImode move
0000077C                    	.debug
0000077C 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
0000078F 52 00 00 00        		.dd LM26-_Modify_Index
00000791 0D 00 0A 00        		.dw 0x0d,0x0a
000099D0                    	.code
                            	LM26:
000099D0 11 93 0F 06        		R1=[_Ret]	// QImode move
000099D2 01 95              		R2=R1	// QImode move
000099D3 42 93              		R1=R2 lsl 1
000099D4 0B 97 1D 06        		R3=_Buffer	// QImode move
000099D6 03 95              		R2=R3	// QImode move
000099D7 01 05              		R2+=R1	// addqi3_r0r
000099D8 13 97 15 06        		R3=[_Addr]	// HImode RD=[Label]
000099DA 14 99 16 06        		R4=[_Addr+1]
000099DC 02 93              		R1=R2	// QImode move
000099DD D1 D6              		[R1++]=R3	// [RD]=RS HImode, RD!=RS+1
000099DE C9 D8              		[R1--]=R4
00000793                    	.debug
00000793 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
000007A6 61 00 00 00        		.dd LM27-_Modify_Index
000007A8 0D 00 0A 00        		.dw 0x0d,0x0a
000099DF                    	.code
                            	LM27:
000099DF 40 92              		R1=0	// HImode immediate to register move
000099E0 40 94              		R2=0
000099E1 19 D3 1B 06        		[_Tem]=R1	// HImode [Label]=RS
000099E3 1A D5 1C 06        		[_Tem+1]=R2
000007AA                    	.debug
000007AA 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
000007BD 67 00 00 00        		.dd LM28-_Modify_Index
000007BF 0D 00 0A 00        		.dw 0x0d,0x0a
000099E5                    	.code
                            	LM28:
000099E5 41 92              		R1=1	// QImode move
000099E6 19 D3 10 06        		[_i]=R1	// QImode move
                            	L16:
000099E8 11 93 10 06        		R1=[_i]	// QImode move
000099EA 09 43 FF 00        		CMP R1,255	// QImode compare
000099EC 02 8E              		JNA L26	// QImode GTU
000099ED 0F 9F 0E 9A        		PC=L20
                            	L26:
000099EF 11 93 1B 06        		R1=[_Tem]	// HImode RD=[Label]
000099F1 12 95 1C 06        		R2=[_Tem+1]
000099F3 13 97 15 06        		R3=[_Addr]	// HImode RD=[Label]
000099F5 14 99 16 06        		R4=[_Addr+1]
000099F7 04 45              		CMP R2,R4	// HImode compare
000099F8 03 0E              		JB  L27	// HImode LTU
000099F9 04 4E              		JNZ L28
000099FA 03 43              		CMP R1,R3
000099FB 02 1E              		JNB L28
                            	L27:
000099FC 0F 9F 10 9A        		PC=L19
                            	L28:
000099FE 11 93 1B 06        		R1=[_Tem]	// HImode RD=[Label]
00009A00 12 95 1C 06        		R2=[_Tem+1]
00009A02 13 97 15 06        		R3=[_Addr]	// HImode RD=[Label]
00009A04 14 99 16 06        		R4=[_Addr+1]
00009A06 04 45              		CMP R2,R4	// HImode compare
00009A07 04 4E              		JNZ L30	// HImode EQ
00009A08 03 43              		CMP R1,R3
00009A09 02 4E              		JNZ L30
00009A0A 0F 9F 10 9A        		PC=L19
                            	L30:
00009A0C 0F 9F 0E 9A        		pc=L20	// jump
                            	L20:
00009A0E 0F 9F 22 9A        		pc=L17	// jump
                            	L19:
000007C1                    	.debug
000007C1 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
000007D4 92 00 00 00        		.dd LM29-_Modify_Index
000007D6 0D 00 0A 00        		.dw 0x0d,0x0a
00009A10                    	.code
                            	LM29:
00009A10 11 93 10 06        		R1=[_i]	// QImode move
00009A12 0A 95 00 08        		R2=2048	// QImode move
00009A14 0A F3              		mr=R1*R2	// r3=R1*R2 16bit=16bit*16bit
00009A15 03 93              		R1=R3
00009A16 40 94              		R2=0
00009A17 19 D3 1B 06        		[_Tem]=R1	// HImode [Label]=RS
00009A19 1A D5 1C 06        		[_Tem+1]=R2
000007D8                    	.debug
000007D8 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
000007EB 9D 00 00 00        		.dd LM30-_Modify_Index
000007ED 0D 00 0A 00        		.dw 0x0d,0x0a
00009A1B                    	.code
                            	LM30:
                            	L18:
00009A1B 11 93 10 06        		R1=[_i]	// QImode move
00009A1D 41 94              		R2=1	// QImode move
00009A1E 19 05 10 06        		[_i]=R1+R2
00009A20 0F 9F E8 99        		pc=L16	// jump
                            	L17:
000007EF                    	.debug
000007EF 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
00000802 A4 00 00 00        		.dd LM31-_Modify_Index
00000804 0D 00 0A 00        		.dw 0x0d,0x0a
00009A22                    	.code
                            	LM31:
00009A22 12 95 0F 06        		R2=[_Ret]	// QImode move
00009A24 0A 03 01 00        		R1=R2+1
00009A26 01 95              		R2=R1	// QImode move
00009A27 42 93              		R1=R2 lsl 1
00009A28 0B 97 1D 06        		R3=_Buffer	// QImode move
00009A2A 03 95              		R2=R3	// QImode move
00009A2B 01 05              		R2+=R1	// addqi3_r0r
00009A2C 13 97 1B 06        		R3=[_Tem]	// HImode RD=[Label]
00009A2E 14 99 1C 06        		R4=[_Tem+1]
00009A30 02 93              		R1=R2	// QImode move
00009A31 D1 D6              		[R1++]=R3	// [RD]=RS HImode, RD!=RS+1
00009A32 C9 D8              		[R1--]=R4
00000806                    	.debug
00000806 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00000819 B5 00 00 00        		.dd LM32-_Modify_Index
0000081B 0D 00 0A 00        		.dw 0x0d,0x0a
00009A33                    	.code
                            	LM32:
00009A33 09 63 00 10        		R1=(-4096)	// QImode move
00009A35 C8 D2              		[SP--]=R1	// QImode move
00009A36 40 F0 09 80        		call _SP_PageErase	// call with return value
00009A38 41 00              		SP=SP+1
0000081D                    	.debug
0000081D 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000830 BB 00 00 00        		.dd LM33-_Modify_Index
00000832 0D 00 0A 00        		.dw 0x0d,0x0a
00009A39                    	.code
                            	LM33:
00009A39 40 92              		R1=0	// QImode move
00009A3A 19 D3 10 06        		[_i]=R1	// QImode move
00009A3C 09 63 00 10        		R1=(-4096)	// QImode move
00009A3E 19 D3 12 06        		[_internal_addr]=R1	// QImode move
                            	L21:
00009A40 11 93 10 06        		R1=[_i]	// QImode move
00009A42 54 42              		CMP R1,20	// QImode compare
00009A43 02 9E              		JA L31	// QImode LEU
00009A44 0F 9F 48 9A        		PC=L24
                            	L31:
00009A46 0F 9F 66 9A        		pc=L22	// jump
                            	L24:
00000834                    	.debug
00000834 2E 00 73 00        		.dw '.stabn 0x44,0,82,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 32 00
         2C 00 00 00
         00 00      
00000847 CA 00 00 00        		.dd LM34-_Modify_Index
00000849 0D 00 0A 00        		.dw 0x0d,0x0a
00009A48                    	.code
                            	LM34:
00009A48 11 93 10 06        		R1=[_i]	// QImode move
00009A4A 01 95              		R2=R1	// QImode move
00009A4B 42 93              		R1=R2 lsl 1
00009A4C 0B 97 1D 06        		R3=_Buffer	// QImode move
00009A4E 03 95              		R2=R3	// QImode move
00009A4F 01 05              		R2+=R1	// addqi3_r0r
00009A50 02 93              		R1=R2	// QImode move
00009A51 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009A52 C9 98              		R4=[R1--]
00009A53 90 D8              		push R3,R4 to [sp]	// pushhi
00009A54 11 93 12 06        		R1=[_internal_addr]	// QImode move
00009A56 C8 D2              		[SP--]=R1	// QImode move
00009A57 40 F0 1E 80        		call _SP_WriteWord	// call with return value
00009A59 43 00              		SP=SP+3
0000084B                    	.debug
0000084B 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
0000085E DC 00 00 00        		.dd LM35-_Modify_Index
00000860 0D 00 0A 00        		.dw 0x0d,0x0a
00009A5A                    	.code
                            	LM35:
                            	L23:
00009A5A 11 93 10 06        		R1=[_i]	// QImode move
00009A5C 41 94              		R2=1	// QImode move
00009A5D 19 05 10 06        		[_i]=R1+R2
00009A5F 11 93 12 06        		R1=[_internal_addr]	// QImode move
00009A61 41 94              		R2=1	// QImode move
00009A62 19 05 12 06        		[_internal_addr]=R1+R2
00009A64 0F 9F 40 9A        		pc=L21	// jump
                            	L22:
00000862                    	.debug
00000862 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
00000875 E8 00 00 00        		.dd LM36-_Modify_Index
00000877 0D 00 0A 00        		.dw 0x0d,0x0a
00009A66                    	.code
                            	LM36:
00000879                    	.debug
00000879 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
0000088C E8 00 00 00        		.dd LM37-_Modify_Index
0000088E 0D 00 0A 00        		.dw 0x0d,0x0a
00009A66                    	.code
                            	LM37:
                            	L11:
                            	
00009A66 41 00              		sp+=1
00009A67 88 98              		pop bp from [sp]
00009A68 90 9A              		retf
                            		.endp	// end of Modify_Index
                            	
00000890                    	.debug
00000890 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000899 EB 00 00 00        		.dd LME2-_Modify_Index
0000089B 0D 00 0A 00        		.dw 0x0d,0x0a
00009A69                    	.code
                            	LME2:
00009A69                    	.code
0000089D                    	.debug
0000089D 2E 00 73 00        		.dw '.stabs "DVR_Stop:F19",36,0,0,',0,0,offset _DVR_Stop,seg _DVR_Stop,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 56 00
         52 00 5F 00
         53 00 74 00
         6F 00 70 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 50 01
         00 00 0D 00
         0A 00      
00009A69                    	.CODE
                            	.public _DVR_Stop
                            	_DVR_Stop:	.proc
000008C0                    	.debug
000008C0 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
000008D3 00 00 00 00        		.dd LM38-_DVR_Stop
000008D5 0D 00 0A 00        		.dw 0x0d,0x0a
00009A69                    	.code
                            	LM38:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009A69 88 DA              		push bp to [sp]
00009A6A 41 20              		sp-=1
00009A6B 08 0B 01 00        		bp=sp+1
                            	
00009A6D 0D 03 04 00        		R1=BP+4
00009A6F C5 D2              		[BP]=R1	// QImode move
000008D7                    	.debug
000008D7 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
000008EA 07 00 00 00        		.dd LM39-_DVR_Stop
000008EC 0D 00 0A 00        		.dw 0x0d,0x0a
00009A70                    	.code
                            	LM39:
                            	LBB4:
00009A70 40 F0 57 81        		call _SACM_DVR_Stop	// call without return value
000008EE                    	.debug
000008EE 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000901 09 00 00 00        		.dd LM40-_DVR_Stop
00000903 0D 00 0A 00        		.dw 0x0d,0x0a
00009A72                    	.code
                            	LM40:
00009A72 40 F0 81 9F        		call _SP_RampUpDAC1	// call with return value
00000905                    	.debug
00000905 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
00000918 0B 00 00 00        		.dd LM41-_DVR_Stop
0000091A 0D 00 0A 00        		.dw 0x0d,0x0a
00009A74                    	.code
                            	LM41:
00009A74 40 F0 B7 9F        		call _SP_RampUpDAC2	// call with return value
0000091C                    	.debug
0000091C 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
0000092F 0D 00 00 00        		.dd LM42-_DVR_Stop
00000931 0D 00 0A 00        		.dw 0x0d,0x0a
00009A76                    	.code
                            	LM42:
                            	LBE4:
00000933                    	.debug
00000933 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00000946 0D 00 00 00        		.dd LM43-_DVR_Stop
00000948 0D 00 0A 00        		.dw 0x0d,0x0a
00009A76                    	.code
                            	LM43:
                            	L32:
                            	
00009A76 41 00              		sp+=1
00009A77 88 98              		pop bp from [sp]
00009A78 90 9A              		retf
                            		.endp	// end of DVR_Stop
                            	
0000094A                    	.debug
0000094A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000095C 07 00 00 00        		.dd LBB4-_DVR_Stop
0000095E 0D 00 0A 00        		.dw 0x0d,0x0a
00009A79                    	.code
00000960                    	.debug
00000960 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000972 0D 00 00 00        		.dd LBE4-_DVR_Stop
00000974 0D 00 0A 00        		.dw 0x0d,0x0a
00009A79                    	.code
00000976                    	.debug
00000976 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000097F 10 00 00 00        		.dd LME3-_DVR_Stop
00000981 0D 00 0A 00        		.dw 0x0d,0x0a
00009A79                    	.code
                            	LME3:
00009A79                    	.code
00000983                    	.debug
00000983 2E 00 73 00        		.dw '.stabs "Send_QueueData_to_Sflash:F19",36,0,0,',0,0,offset _Send_QueueData_to_Sflash,seg _Send_QueueData_to_Sflash,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 65 00
         6E 00 64 00
         5F 00 51 00
         75 00 65 00
         75 00 65 00
         44 00 61 00
         74 00 61 00
         5F 00 74 00
         6F 00 5F 00
         53 00 66 00
         6C 00 61 00
         73 00 68 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 60 01
         00 00 0D 00
         0A 00      
00009A79                    	.CODE
                            	.public _Send_QueueData_to_Sflash
                            	_Send_QueueData_to_Sflash:	.proc
000009B6                    	.debug
000009B6 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
000009CA 00 00 00 00        		.dd LM44-_Send_QueueData_to_Sflash
000009CC 0D 00 0A 00        		.dw 0x0d,0x0a
00009A79                    	.code
                            	LM44:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009A79 88 DA              		push bp to [sp]
00009A7A 41 20              		sp-=1
00009A7B 08 0B 01 00        		bp=sp+1
                            	
00009A7D 0D 03 04 00        		R1=BP+4
00009A7F C5 D2              		[BP]=R1	// QImode move
000009CE                    	.debug
000009CE 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
000009E2 07 00 00 00        		.dd LM45-_Send_QueueData_to_Sflash
000009E4 0D 00 0A 00        		.dw 0x0d,0x0a
00009A80                    	.code
                            	LM45:
                            	L34:
00009A80 40 F0 84 81        		call _SACM_DVR_TestQueue	// call with return value
00009A82 42 42              		CMP R1,2	// QImode compare
00009A83 02 5E              		JZ L37	// QImode NE
00009A84 0F 9F 88 9A        		PC=L36
                            	L37:
00009A86 0F 9F A5 9A        		pc=L35	// jump
                            	L36:
000009E6                    	.debug
000009E6 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
000009FA 0F 00 00 00        		.dd LM46-_Send_QueueData_to_Sflash
000009FC 0D 00 0A 00        		.dw 0x0d,0x0a
00009A88                    	.code
                            	LM46:
00009A88 40 F0 70 81        		call _SACM_DVR_FetchQueue	// call with return value
00009A8A 19 D3 0F 06        		[_Ret]=R1	// QImode move
000009FE                    	.debug
000009FE 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000A12 13 00 00 00        		.dd LM47-_Send_QueueData_to_Sflash
00000A14 0D 00 0A 00        		.dw 0x0d,0x0a
00009A8C                    	.code
                            	LM47:
00009A8C 11 93 0F 06        		R1=[_Ret]	// QImode move
00009A8E C8 D2              		[SP--]=R1	// QImode move
00009A8F 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009A91 12 95 16 06        		R2=[_Addr+1]
00009A93 90 D4              		push R1,R2 to [sp]	// pushhi
00009A94 40 F0 80 A0        		call _SP_SIOSendAWord	// call with return value
00009A96 43 00              		SP=SP+3
00000A16                    	.debug
00000A16 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00000A2A 1E 00 00 00        		.dd LM48-_Send_QueueData_to_Sflash
00000A2C 0D 00 0A 00        		.dw 0x0d,0x0a
00009A97                    	.code
                            	LM48:
00009A97 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009A99 12 95 16 06        		R2=[_Addr+1]
00009A9B 09 07 02 00        		R3=R1+2	// HImode RD=RS+#IMM16
00009A9D 0A 19 00 00        		R4=R2+0, Carry
00009A9F 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009AA1 1C D9 16 06        		[_Addr+1]=R4
00000A2E                    	.debug
00000A2E 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000A42 2A 00 00 00        		.dd LM49-_Send_QueueData_to_Sflash
00000A44 0D 00 0A 00        		.dw 0x0d,0x0a
00009AA3                    	.code
                            	LM49:
00009AA3 0F 9F 80 9A        		pc=L34	// jump
                            	L35:
00000A46                    	.debug
00000A46 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000A5A 2C 00 00 00        		.dd LM50-_Send_QueueData_to_Sflash
00000A5C 0D 00 0A 00        		.dw 0x0d,0x0a
00009AA5                    	.code
                            	LM50:
00000A5E                    	.debug
00000A5E 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000A72 2C 00 00 00        		.dd LM51-_Send_QueueData_to_Sflash
00000A74 0D 00 0A 00        		.dw 0x0d,0x0a
00009AA5                    	.code
                            	LM51:
                            	L33:
                            	
00009AA5 41 00              		sp+=1
00009AA6 88 98              		pop bp from [sp]
00009AA7 90 9A              		retf
                            		.endp	// end of Send_QueueData_to_Sflash
                            	
00000A76                    	.debug
00000A76 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000A7F 2F 00 00 00        		.dd LME4-_Send_QueueData_to_Sflash
00000A81 0D 00 0A 00        		.dw 0x0d,0x0a
00009AA8                    	.code
                            	LME4:
00009AA8                    	.code
00000A83                    	.debug
00000A83 2E 00 73 00        		.dw '.stabs "Play_Initial:F19",36,0,0,',0,0,offset _Play_Initial,seg _Play_Initial,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         5F 00 49 00
         6E 00 69 00
         74 00 69 00
         61 00 6C 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 8F 01
         00 00 0D 00
         0A 00      
00009AA8                    	.CODE
                            	.public _Play_Initial
                            	_Play_Initial:	.proc
00000AAA                    	.debug
00000AAA 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
00000ABE 00 00 00 00        		.dd LM52-_Play_Initial
00000AC0 0D 00 0A 00        		.dw 0x0d,0x0a
00009AA8                    	.code
                            	LM52:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009AA8 88 DA              		push bp to [sp]
00009AA9 41 20              		sp-=1
00009AAA 08 0B 01 00        		bp=sp+1
                            	
00009AAC 0D 03 04 00        		R1=BP+4
00009AAE C5 D2              		[BP]=R1	// QImode move
00000AC2                    	.debug
00000AC2 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000AD6 07 00 00 00        		.dd LM53-_Play_Initial
00000AD8 0D 00 0A 00        		.dw 0x0d,0x0a
00009AAF                    	.code
                            	LM53:
00009AAF 40 F0 6B 81        		call _SACM_DVR_InitQueue	// call without return value
00000ADA                    	.debug
00000ADA 2E 00 73 00        		.dw '.stabn 0x44,0,132,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         32 00 2C 00
         00 00 00 00
00000AEE 09 00 00 00        		.dd LM54-_Play_Initial
00000AF0 0D 00 0A 00        		.dw 0x0d,0x0a
00009AB1                    	.code
                            	LM54:
                            	L39:
00009AB1 40 F0 84 81        		call _SACM_DVR_TestQueue	// call with return value
00009AB3 41 42              		CMP R1,1	// QImode compare
00009AB4 02 5E              		JZ L42	// QImode NE
00009AB5 0F 9F B9 9A        		PC=L41
                            	L42:
00009AB7 0F 9F D7 9A        		pc=L40	// jump
                            	L41:
00000AF2                    	.debug
00000AF2 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00000B06 11 00 00 00        		.dd LM55-_Play_Initial
00000B08 0D 00 0A 00        		.dw 0x0d,0x0a
00009AB9                    	.code
                            	LM55:
00009AB9 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009ABB 12 95 16 06        		R2=[_Addr+1]
00009ABD 90 D4              		push R1,R2 to [sp]	// pushhi
00009ABE 40 F0 C2 A0        		call _SP_SIOReadAWord	// call with return value
00009AC0 42 00              		SP=SP+2
00009AC1 19 D3 0F 06        		[_Ret]=R1	// QImode move
00000B0A                    	.debug
00000B0A 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000B1E 1B 00 00 00        		.dd LM56-_Play_Initial
00000B20 0D 00 0A 00        		.dw 0x0d,0x0a
00009AC3                    	.code
                            	LM56:
00009AC3 11 93 0F 06        		R1=[_Ret]	// QImode move
00009AC5 C8 D2              		[SP--]=R1	// QImode move
00009AC6 40 F0 7A 81        		call _SACM_DVR_FillQueue	// call without return value
00009AC8 41 00              		SP=SP+1
00000B22                    	.debug
00000B22 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
00000B36 21 00 00 00        		.dd LM57-_Play_Initial
00000B38 0D 00 0A 00        		.dw 0x0d,0x0a
00009AC9                    	.code
                            	LM57:
00009AC9 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009ACB 12 95 16 06        		R2=[_Addr+1]
00009ACD 09 07 02 00        		R3=R1+2	// HImode RD=RS+#IMM16
00009ACF 0A 19 00 00        		R4=R2+0, Carry
00009AD1 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009AD3 1C D9 16 06        		[_Addr+1]=R4
00000B3A                    	.debug
00000B3A 2E 00 73 00        		.dw '.stabn 0x44,0,137,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         37 00 2C 00
         00 00 00 00
00000B4E 2D 00 00 00        		.dd LM58-_Play_Initial
00000B50 0D 00 0A 00        		.dw 0x0d,0x0a
00009AD5                    	.code
                            	LM58:
00009AD5 0F 9F B1 9A        		pc=L39	// jump
                            	L40:
00000B52                    	.debug
00000B52 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00000B66 2F 00 00 00        		.dd LM59-_Play_Initial
00000B68 0D 00 0A 00        		.dw 0x0d,0x0a
00009AD7                    	.code
                            	LM59:
00009AD7 43 92              		R1=3	// QImode move
00009AD8 C8 D2              		[SP--]=R1	// QImode move
00009AD9 40 F0 1C 81        		call _SACM_DVR_InitDecoder	// call without return value
00009ADB 41 00              		SP=SP+1
00000B6A                    	.debug
00000B6A 2E 00 73 00        		.dw '.stabn 0x44,0,139,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         39 00 2C 00
         00 00 00 00
00000B7E 34 00 00 00        		.dd LM60-_Play_Initial
00000B80 0D 00 0A 00        		.dw 0x0d,0x0a
00009ADC                    	.code
                            	LM60:
00000B82                    	.debug
00000B82 2E 00 73 00        		.dw '.stabn 0x44,0,139,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         39 00 2C 00
         00 00 00 00
00000B96 34 00 00 00        		.dd LM61-_Play_Initial
00000B98 0D 00 0A 00        		.dw 0x0d,0x0a
00009ADC                    	.code
                            	LM61:
                            	L38:
                            	
00009ADC 41 00              		sp+=1
00009ADD 88 98              		pop bp from [sp]
00009ADE 90 9A              		retf
                            		.endp	// end of Play_Initial
                            	
00000B9A                    	.debug
00000B9A 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000BA3 37 00 00 00        		.dd LME5-_Play_Initial
00000BA5 0D 00 0A 00        		.dw 0x0d,0x0a
00009ADF                    	.code
                            	LME5:
00009ADF                    	.code
00000BA7                    	.debug
00000BA7 2E 00 73 00        		.dw '.stabs "Fill_A_Word_To_Queue:F19",36,0,0,',0,0,offset _Fill_A_Word_To_Queue,seg _Fill_A_Word_To_Queue,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 69 00
         6C 00 6C 00
         5F 00 41 00
         5F 00 57 00
         6F 00 72 00
         64 00 5F 00
         54 00 6F 00
         5F 00 51 00
         75 00 65 00
         75 00 65 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 C6 01
         00 00 0D 00
         0A 00      
00009ADF                    	.CODE
                            	.public _Fill_A_Word_To_Queue
                            	_Fill_A_Word_To_Queue:	.proc
00000BD6                    	.debug
00000BD6 2E 00 73 00        		.dw '.stabn 0x44,0,151,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         31 00 2C 00
         00 00 00 00
00000BEA 00 00 00 00        		.dd LM62-_Fill_A_Word_To_Queue
00000BEC 0D 00 0A 00        		.dw 0x0d,0x0a
00009ADF                    	.code
                            	LM62:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009ADF 88 DA              		push bp to [sp]
00009AE0 41 20              		sp-=1
00009AE1 08 0B 01 00        		bp=sp+1
                            	
00009AE3 0D 03 04 00        		R1=BP+4
00009AE5 C5 D2              		[BP]=R1	// QImode move
00000BEE                    	.debug
00000BEE 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
00000C02 07 00 00 00        		.dd LM63-_Fill_A_Word_To_Queue
00000C04 0D 00 0A 00        		.dw 0x0d,0x0a
00009AE6                    	.code
                            	LM63:
00009AE6 40 F0 84 81        		call _SACM_DVR_TestQueue	// call with return value
00009AE8 41 42              		CMP R1,1	// QImode compare
00009AE9 02 4E              		JNZ L45	// QImode EQ
00009AEA 0F 9F 08 9B        		PC=L44
                            	L45:
00000C06                    	.debug
00000C06 2E 00 73 00        		.dw '.stabn 0x44,0,154,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         34 00 2C 00
         00 00 00 00
00000C1A 0D 00 00 00        		.dd LM64-_Fill_A_Word_To_Queue
00000C1C 0D 00 0A 00        		.dw 0x0d,0x0a
00009AEC                    	.code
                            	LM64:
00009AEC 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009AEE 12 95 16 06        		R2=[_Addr+1]
00009AF0 90 D4              		push R1,R2 to [sp]	// pushhi
00009AF1 40 F0 C2 A0        		call _SP_SIOReadAWord	// call with return value
00009AF3 42 00              		SP=SP+2
00009AF4 19 D3 0F 06        		[_Ret]=R1	// QImode move
00000C1E                    	.debug
00000C1E 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
00000C32 17 00 00 00        		.dd LM65-_Fill_A_Word_To_Queue
00000C34 0D 00 0A 00        		.dw 0x0d,0x0a
00009AF6                    	.code
                            	LM65:
00009AF6 11 93 0F 06        		R1=[_Ret]	// QImode move
00009AF8 C8 D2              		[SP--]=R1	// QImode move
00009AF9 40 F0 7A 81        		call _SACM_DVR_FillQueue	// call without return value
00009AFB 41 00              		SP=SP+1
00000C36                    	.debug
00000C36 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
00000C4A 1D 00 00 00        		.dd LM66-_Fill_A_Word_To_Queue
00000C4C 0D 00 0A 00        		.dw 0x0d,0x0a
00009AFC                    	.code
                            	LM66:
00009AFC 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009AFE 12 95 16 06        		R2=[_Addr+1]
00009B00 09 07 02 00        		R3=R1+2	// HImode RD=RS+#IMM16
00009B02 0A 19 00 00        		R4=R2+0, Carry
00009B04 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009B06 1C D9 16 06        		[_Addr+1]=R4
                            	L44:
00000C4E                    	.debug
00000C4E 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
00000C62 29 00 00 00        		.dd LM67-_Fill_A_Word_To_Queue
00000C64 0D 00 0A 00        		.dw 0x0d,0x0a
00009B08                    	.code
                            	LM67:
00000C66                    	.debug
00000C66 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
00000C7A 29 00 00 00        		.dd LM68-_Fill_A_Word_To_Queue
00000C7C 0D 00 0A 00        		.dw 0x0d,0x0a
00009B08                    	.code
                            	LM68:
                            	L43:
                            	
00009B08 41 00              		sp+=1
00009B09 88 98              		pop bp from [sp]
00009B0A 90 9A              		retf
                            		.endp	// end of Fill_A_Word_To_Queue
                            	
00000C7E                    	.debug
00000C7E 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000C87 2C 00 00 00        		.dd LME6-_Fill_A_Word_To_Queue
00000C89 0D 00 0A 00        		.dw 0x0d,0x0a
00009B0B                    	.code
                            	LME6:
00009B0B                    	.code
00000C8B                    	.debug
00000C8B 2E 00 73 00        		.dw '.stabs "According_to_Keycode:F19",36,0,0,',0,0,offset _According_to_Keycode,seg _According_to_Keycode,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 63 00
         63 00 6F 00
         72 00 64 00
         69 00 6E 00
         67 00 5F 00
         74 00 6F 00
         5F 00 4B 00
         65 00 79 00
         63 00 6F 00
         64 00 65 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 F2 01
         00 00 0D 00
         0A 00      
00009B0B                    	.CODE
                            	.public _According_to_Keycode
                            	_According_to_Keycode:	.proc
00000CBA                    	.debug
00000CBA 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
00000CCE 00 00 00 00        		.dd LM69-_According_to_Keycode
00000CD0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B0B                    	.code
                            	LM69:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009B0B 88 DA              		push bp to [sp]
00009B0C 41 20              		sp-=1
00009B0D 08 0B 01 00        		bp=sp+1
                            	
00009B0F 0D 03 04 00        		R1=BP+4
00009B11 C5 D2              		[BP]=R1	// QImode move
00000CD2                    	.debug
00000CD2 2E 00 73 00        		.dw '.stabn 0x44,0,171,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         31 00 2C 00
         00 00 00 00
00000CE6 07 00 00 00        		.dd LM70-_According_to_Keycode
00000CE8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B12                    	.code
                            	LM70:
                            	LBB5:
00009B12 11 93 13 06        		R1=[_BaseType]	// QImode move
00009B14 41 42              		CMP R1,1	// QImode compare
00009B15 02 5E              		JZ L78	// QImode NE
00009B16 0F 9F 52 9C        		PC=L47
                            	L78:
00000CEA                    	.debug
00000CEA 2E 00 73 00        		.dw '.stabn 0x44,0,173,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         33 00 2C 00
         00 00 00 00
00000CFE 0D 00 00 00        		.dd LM71-_According_to_Keycode
00000D00 0D 00 0A 00        		.dw 0x0d,0x0a
00009B18                    	.code
                            	LM71:
00009B18 11 93 0E 06        		R1=[_Keycode]	// QImode move
00009B1A 09 43 FF 00        		CMP R1,255	// QImode compare
00009B1C 02 4E              		JNZ L79	// QImode EQ
00009B1D 0F 9F 50 9C        		PC=L48
                            	L79:
00000D02                    	.debug
00000D02 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
00000D16 14 00 00 00        		.dd LM72-_According_to_Keycode
00000D18 0D 00 0A 00        		.dw 0x0d,0x0a
00009B1F                    	.code
                            	LM72:
00009B1F 40 F0 69 9A        		call _DVR_Stop	// call without return value
00000D1A                    	.debug
00000D1A 2E 00 73 00        		.dw '.stabn 0x44,0,176,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         36 00 2C 00
         00 00 00 00
00000D2E 16 00 00 00        		.dd LM73-_According_to_Keycode
00000D30 0D 00 0A 00        		.dw 0x0d,0x0a
00009B21                    	.code
                            	LM73:
00009B21 11 93 14 06        		R1=[_SubStatus]	// QImode move
00009B23 41 42              		CMP R1,1	// QImode compare
00009B24 02 5E              		JZ L80	// QImode NE
00009B25 0F 9F 2B 9B        		PC=L49
                            	L80:
00000D32                    	.debug
00000D32 2E 00 73 00        		.dw '.stabn 0x44,0,178,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         38 00 2C 00
         00 00 00 00
00000D46 1C 00 00 00        		.dd LM74-_According_to_Keycode
00000D48 0D 00 0A 00        		.dw 0x0d,0x0a
00009B27                    	.code
                            	LM74:
00009B27 40 F0 79 9A        		call _Send_QueueData_to_Sflash	// call without return value
00000D4A                    	.debug
00000D4A 2E 00 73 00        		.dw '.stabn 0x44,0,179,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         39 00 2C 00
         00 00 00 00
00000D5E 1E 00 00 00        		.dd LM75-_According_to_Keycode
00000D60 0D 00 0A 00        		.dw 0x0d,0x0a
00009B29                    	.code
                            	LM75:
00009B29 40 F0 7E 99        		call _Modify_Index	// call without return value
                            	L49:
00000D62                    	.debug
00000D62 2E 00 73 00        		.dw '.stabn 0x44,0,182,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         32 00 2C 00
         00 00 00 00
00000D76 20 00 00 00        		.dd LM76-_According_to_Keycode
00000D78 0D 00 0A 00        		.dw 0x0d,0x0a
00009B2B                    	.code
                            	LM76:
00009B2B 11 93 0E 06        		R1=[_Keycode]	// QImode move
00009B2D 4F 42              		CMP R1,15	// QImode compare
00009B2E 02 8E              		JNA L81	// QImode GTU
00009B2F 0F 9F 4E 9C        		PC=L63
                            	L81:
00009B31 11 93 0E 06        		R1=[_Keycode]	// QImode move
00009B33 01 95              		R2=R1	// QImode move
00009B34 02 93              		R1=R2	// QImode move
00009B35 09 03 65 80        		R1=R1+L64
00009B37 01 97              		R3=R1	// QImode move
00009B38 C3 94              		R2=[R3]	// QImode move
00009B39 02 9F              		pc=R2	// tablejump
00008065                    	.text
                            	L64:
00008065 3A 9B              		.dw L51
00008066 54 9B              		.dw L52
00008067 A8 9B              		.dw L55
00008068 E2 9B              		.dw L58
00008069 E7 9B              		.dw L59
0000806A 01 9C              		.dw L60
0000806B 4E 9C              		.dw L63
0000806C 1B 9C              		.dw L61
0000806D 4E 9C              		.dw L63
0000806E 4E 9C              		.dw L63
0000806F 4E 9C              		.dw L63
00008070 4E 9C              		.dw L63
00008071 4E 9C              		.dw L63
00008072 4E 9C              		.dw L63
00008073 4E 9C              		.dw L63
00008074 42 9C              		.dw L62
00009B3A                    	.code
00000D7A                    	.debug
00000D7A 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
00000D8E 2F 00 00 00        		.dd LM77-_According_to_Keycode
00000D90 0D 00 0A 00        		.dw 0x0d,0x0a
00009B3A                    	.code
                            	LM77:
                            	LBB6:
                            	L51:
00000D92                    	.debug
00000D92 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00000DA6 2F 00 00 00        		.dd LM78-_According_to_Keycode
00000DA8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B3A                    	.code
                            	LM78:
00009B3A 11 93 11 06        		R1=[_Segment]	// QImode move
00009B3C 01 95              		R2=R1	// QImode move
00009B3D 42 93              		R1=R2 lsl 1
00009B3E 09 05 FF FF        		R2=R1+(-1)
00009B40 02 97              		R3=R2	// QImode move
00009B41 43 93              		R1=R3 lsl 1
00009B42 0B 97 1D 06        		R3=_Buffer	// QImode move
00009B44 03 95              		R2=R3	// QImode move
00009B45 01 05              		R2+=R1	// addqi3_r0r
00009B46 02 93              		R1=R2	// QImode move
00009B47 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009B48 C9 98              		R4=[R1--]
00009B49 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009B4B 1C D9 16 06        		[_Addr+1]=R4
00000DAA                    	.debug
00000DAA 2E 00 73 00        		.dw '.stabn 0x44,0,186,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         36 00 2C 00
         00 00 00 00
00000DBE 42 00 00 00        		.dd LM79-_According_to_Keycode
00000DC0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B4D                    	.code
                            	LM79:
00009B4D 40 F0 A8 9A        		call _Play_Initial	// call without return value
00000DC2                    	.debug
00000DC2 2E 00 73 00        		.dw '.stabn 0x44,0,187,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         37 00 2C 00
         00 00 00 00
00000DD6 44 00 00 00        		.dd LM80-_According_to_Keycode
00000DD8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B4F                    	.code
                            	LM80:
00009B4F 42 92              		R1=2	// QImode move
00009B50 19 D3 14 06        		[_SubStatus]=R1	// QImode move
00000DDA                    	.debug
00000DDA 2E 00 73 00        		.dw '.stabn 0x44,0,188,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         38 00 2C 00
         00 00 00 00
00000DEE 47 00 00 00        		.dd LM81-_According_to_Keycode
00000DF0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B52                    	.code
                            	LM81:
00009B52 0F 9F 50 9C        		pc=L48	// jump
                            	L52:
00000DF2                    	.debug
00000DF2 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
00000E06 49 00 00 00        		.dd LM82-_According_to_Keycode
00000E08 0D 00 0A 00        		.dw 0x0d,0x0a
00009B54                    	.code
                            	LM82:
00009B54 11 93 11 06        		R1=[_Segment]	// QImode move
00009B56 41 42              		CMP R1,1	// QImode compare
00009B57 02 9E              		JA L82	// QImode LEU
00009B58 0F 9F 82 9B        		PC=L53
                            	L82:
00009B5A 11 93 11 06        		R1=[_Segment]
00009B5C 40 94              		R2=0
00009B5D 13 97 1D 06        		R3=[_Buffer]	// HImode RD=[Label]
00009B5F 14 99 1E 06        		R4=[_Buffer+1]
00009B61 04 45              		CMP R2,R4	// HImode compare
00009B62 03 9E              		JA  L83	// HImode GTU
00009B63 04 4E              		JNZ L84
00009B64 03 43              		CMP R1,R3
00009B65 02 8E              		JNA L84
                            	L83:
00009B66 0F 9F 82 9B        		PC=L53
                            	L84:
00000E0A                    	.debug
00000E0A 2E 00 73 00        		.dw '.stabn 0x44,0,192,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         32 00 2C 00
         00 00 00 00
00000E1E 5D 00 00 00        		.dd LM83-_According_to_Keycode
00000E20 0D 00 0A 00        		.dw 0x0d,0x0a
00009B68                    	.code
                            	LM83:
00009B68 11 93 11 06        		R1=[_Segment]	// QImode move
00009B6A 41 64              		R2=(-1)	// QImode move
00009B6B 19 05 11 06        		[_Segment]=R1+R2
00000E22                    	.debug
00000E22 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
00000E36 62 00 00 00        		.dd LM84-_According_to_Keycode
00000E38 0D 00 0A 00        		.dw 0x0d,0x0a
00009B6D                    	.code
                            	LM84:
00009B6D 11 93 11 06        		R1=[_Segment]	// QImode move
00009B6F 01 95              		R2=R1	// QImode move
00009B70 42 93              		R1=R2 lsl 1
00009B71 09 05 FF FF        		R2=R1+(-1)
00009B73 02 97              		R3=R2	// QImode move
00009B74 43 93              		R1=R3 lsl 1
00009B75 0B 97 1D 06        		R3=_Buffer	// QImode move
00009B77 03 95              		R2=R3	// QImode move
00009B78 01 05              		R2+=R1	// addqi3_r0r
00009B79 02 93              		R1=R2	// QImode move
00009B7A D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009B7B C9 98              		R4=[R1--]
00009B7C 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009B7E 1C D9 16 06        		[_Addr+1]=R4
00000E3A                    	.debug
00000E3A 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
00000E4E 75 00 00 00        		.dd LM85-_According_to_Keycode
00000E50 0D 00 0A 00        		.dw 0x0d,0x0a
00009B80                    	.code
                            	LM85:
00009B80 0F 9F A1 9B        		pc=L54	// jump
                            	L53:
00000E52                    	.debug
00000E52 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
00000E66 77 00 00 00        		.dd LM86-_According_to_Keycode
00000E68 0D 00 0A 00        		.dw 0x0d,0x0a
00009B82                    	.code
                            	LM86:
00009B82 11 93 1D 06        		R1=[_Buffer]	// QImode move
00009B84 19 D3 11 06        		[_Segment]=R1	// QImode move
00000E6A                    	.debug
00000E6A 2E 00 73 00        		.dw '.stabn 0x44,0,198,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         38 00 2C 00
         00 00 00 00
00000E7E 7B 00 00 00        		.dd LM87-_According_to_Keycode
00000E80 0D 00 0A 00        		.dw 0x0d,0x0a
00009B86                    	.code
                            	LM87:
00009B86 13 97 1D 06        		R3=[_Buffer]	// HImode RD=[Label]
00009B88 14 99 1E 06        		R4=[_Buffer+1]
00009B8A 03 93              		R1=R3	// HImode register to register move
00009B8B 04 95              		R2=R4
00009B8C 41 96              		R3=1	// QImode move
00009B8D C8 D6              		[SP--]=R3	// QImode move
00009B8E 90 D4              		push R1,R2 to [sp]	// pushhi
00009B8F 40 F0 FD A4        		call __lshiu2	// call with return value
00009B91 43 00              		SP=SP+3
00009B92 09 07 FF FF        		R3=R1+(-1)
00009B94 03 95              		R2=R3	// QImode move
00009B95 42 93              		R1=R2 lsl 1
00009B96 0B 97 1D 06        		R3=_Buffer	// QImode move
00009B98 03 95              		R2=R3	// QImode move
00009B99 01 05              		R2+=R1	// addqi3_r0r
00009B9A 02 93              		R1=R2	// QImode move
00009B9B D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009B9C C9 98              		R4=[R1--]
00009B9D 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009B9F 1C D9 16 06        		[_Addr+1]=R4
                            	L54:
00000E82                    	.debug
00000E82 2E 00 73 00        		.dw '.stabn 0x44,0,200,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         30 00 2C 00
         00 00 00 00
00000E96 96 00 00 00        		.dd LM88-_According_to_Keycode
00000E98 0D 00 0A 00        		.dw 0x0d,0x0a
00009BA1                    	.code
                            	LM88:
00009BA1 40 F0 A8 9A        		call _Play_Initial	// call without return value
00000E9A                    	.debug
00000E9A 2E 00 73 00        		.dw '.stabn 0x44,0,201,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         31 00 2C 00
         00 00 00 00
00000EAE 98 00 00 00        		.dd LM89-_According_to_Keycode
00000EB0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BA3                    	.code
                            	LM89:
00009BA3 42 92              		R1=2	// QImode move
00009BA4 19 D3 14 06        		[_SubStatus]=R1	// QImode move
00000EB2                    	.debug
00000EB2 2E 00 73 00        		.dw '.stabn 0x44,0,202,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         32 00 2C 00
         00 00 00 00
00000EC6 9B 00 00 00        		.dd LM90-_According_to_Keycode
00000EC8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BA6                    	.code
                            	LM90:
00009BA6 0F 9F 50 9C        		pc=L48	// jump
                            	L55:
00000ECA                    	.debug
00000ECA 2E 00 73 00        		.dw '.stabn 0x44,0,204,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         34 00 2C 00
         00 00 00 00
00000EDE 9D 00 00 00        		.dd LM91-_According_to_Keycode
00000EE0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BA8                    	.code
                            	LM91:
00009BA8 11 93 11 06        		R1=[_Segment]
00009BAA 40 94              		R2=0
00009BAB 13 97 1D 06        		R3=[_Buffer]	// HImode RD=[Label]
00009BAD 14 99 1E 06        		R4=[_Buffer+1]
00009BAF 04 45              		CMP R2,R4	// HImode compare
00009BB0 05 0E              		JB  L86	// HImode GEU
00009BB1 02 4E              		JNZ L85
00009BB2 03 43              		CMP R1,R3
00009BB3 02 0E              		JB  L86
                            	L85:
00009BB4 0F 9F D0 9B        		PC=L56
                            	L86:
00000EE2                    	.debug
00000EE2 2E 00 73 00        		.dw '.stabn 0x44,0,206,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         36 00 2C 00
         00 00 00 00
00000EF6 AB 00 00 00        		.dd LM92-_According_to_Keycode
00000EF8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BB6                    	.code
                            	LM92:
00009BB6 11 93 11 06        		R1=[_Segment]	// QImode move
00009BB8 41 94              		R2=1	// QImode move
00009BB9 19 05 11 06        		[_Segment]=R1+R2
00000EFA                    	.debug
00000EFA 2E 00 73 00        		.dw '.stabn 0x44,0,207,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         37 00 2C 00
         00 00 00 00
00000F0E B0 00 00 00        		.dd LM93-_According_to_Keycode
00000F10 0D 00 0A 00        		.dw 0x0d,0x0a
00009BBB                    	.code
                            	LM93:
00009BBB 11 93 11 06        		R1=[_Segment]	// QImode move
00009BBD 01 95              		R2=R1	// QImode move
00009BBE 42 93              		R1=R2 lsl 1
00009BBF 09 05 FF FF        		R2=R1+(-1)
00009BC1 02 97              		R3=R2	// QImode move
00009BC2 43 93              		R1=R3 lsl 1
00009BC3 0B 97 1D 06        		R3=_Buffer	// QImode move
00009BC5 03 95              		R2=R3	// QImode move
00009BC6 01 05              		R2+=R1	// addqi3_r0r
00009BC7 02 93              		R1=R2	// QImode move
00009BC8 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009BC9 C9 98              		R4=[R1--]
00009BCA 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009BCC 1C D9 16 06        		[_Addr+1]=R4
00000F12                    	.debug
00000F12 2E 00 73 00        		.dw '.stabn 0x44,0,208,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         38 00 2C 00
         00 00 00 00
00000F26 C3 00 00 00        		.dd LM94-_According_to_Keycode
00000F28 0D 00 0A 00        		.dw 0x0d,0x0a
00009BCE                    	.code
                            	LM94:
00009BCE 0F 9F DB 9B        		pc=L57	// jump
                            	L56:
00000F2A                    	.debug
00000F2A 2E 00 73 00        		.dw '.stabn 0x44,0,211,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         31 00 2C 00
         00 00 00 00
00000F3E C5 00 00 00        		.dd LM95-_According_to_Keycode
00000F40 0D 00 0A 00        		.dw 0x0d,0x0a
00009BD0                    	.code
                            	LM95:
00009BD0 41 92              		R1=1	// QImode move
00009BD1 19 D3 11 06        		[_Segment]=R1	// QImode move
00000F42                    	.debug
00000F42 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
00000F56 C8 00 00 00        		.dd LM96-_According_to_Keycode
00000F58 0D 00 0A 00        		.dw 0x0d,0x0a
00009BD3                    	.code
                            	LM96:
00009BD3 11 93 1F 06        		R1=[_Buffer+2]	// HImode RD=[Label]
00009BD5 12 95 20 06        		R2=[_Buffer+3]
00009BD7 19 D3 15 06        		[_Addr]=R1	// HImode [Label]=RS
00009BD9 1A D5 16 06        		[_Addr+1]=R2
                            	L57:
00000F5A                    	.debug
00000F5A 2E 00 73 00        		.dw '.stabn 0x44,0,214,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         34 00 2C 00
         00 00 00 00
00000F6E D0 00 00 00        		.dd LM97-_According_to_Keycode
00000F70 0D 00 0A 00        		.dw 0x0d,0x0a
00009BDB                    	.code
                            	LM97:
00009BDB 40 F0 A8 9A        		call _Play_Initial	// call without return value
00000F72                    	.debug
00000F72 2E 00 73 00        		.dw '.stabn 0x44,0,215,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         35 00 2C 00
         00 00 00 00
00000F86 D2 00 00 00        		.dd LM98-_According_to_Keycode
00000F88 0D 00 0A 00        		.dw 0x0d,0x0a
00009BDD                    	.code
                            	LM98:
00009BDD 42 92              		R1=2	// QImode move
00009BDE 19 D3 14 06        		[_SubStatus]=R1	// QImode move
00000F8A                    	.debug
00000F8A 2E 00 73 00        		.dw '.stabn 0x44,0,216,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         36 00 2C 00
         00 00 00 00
00000F9E D5 00 00 00        		.dd LM99-_According_to_Keycode
00000FA0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BE0                    	.code
                            	LM99:
00009BE0 0F 9F 50 9C        		pc=L48	// jump
                            	L58:
00000FA2                    	.debug
00000FA2 2E 00 73 00        		.dw '.stabn 0x44,0,218,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         38 00 2C 00
         00 00 00 00
00000FB6 D7 00 00 00        		.dd LM100-_According_to_Keycode
00000FB8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BE2                    	.code
                            	LM100:
00009BE2 40 92              		R1=0	// QImode move
00009BE3 19 D3 14 06        		[_SubStatus]=R1	// QImode move
00000FBA                    	.debug
00000FBA 2E 00 73 00        		.dw '.stabn 0x44,0,219,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         39 00 2C 00
         00 00 00 00
00000FCE DA 00 00 00        		.dd LM101-_According_to_Keycode
00000FD0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BE5                    	.code
                            	LM101:
00009BE5 0F 9F 50 9C        		pc=L48	// jump
                            	L59:
00000FD2                    	.debug
00000FD2 2E 00 73 00        		.dw '.stabn 0x44,0,221,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         31 00 2C 00
         00 00 00 00
00000FE6 DC 00 00 00        		.dd LM102-_According_to_Keycode
00000FE8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BE7                    	.code
                            	LM102:
00009BE7 11 93 11 06        		R1=[_Segment]	// QImode move
00009BE9 01 95              		R2=R1	// QImode move
00009BEA 42 93              		R1=R2 lsl 1
00009BEB 09 05 FF FF        		R2=R1+(-1)
00009BED 02 97              		R3=R2	// QImode move
00009BEE 43 93              		R1=R3 lsl 1
00009BEF 0B 97 1D 06        		R3=_Buffer	// QImode move
00009BF1 03 95              		R2=R3	// QImode move
00009BF2 01 05              		R2+=R1	// addqi3_r0r
00009BF3 02 93              		R1=R2	// QImode move
00009BF4 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009BF5 C9 98              		R4=[R1--]
00009BF6 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009BF8 1C D9 16 06        		[_Addr+1]=R4
00000FEA                    	.debug
00000FEA 2E 00 73 00        		.dw '.stabn 0x44,0,222,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         32 00 2C 00
         00 00 00 00
00000FFE EF 00 00 00        		.dd LM103-_According_to_Keycode
00001000 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFA                    	.code
                            	LM103:
00009BFA 40 F0 A8 9A        		call _Play_Initial	// call without return value
00001002                    	.debug
00001002 2E 00 73 00        		.dw '.stabn 0x44,0,223,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         33 00 2C 00
         00 00 00 00
00001016 F1 00 00 00        		.dd LM104-_According_to_Keycode
00001018 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFC                    	.code
                            	LM104:
00009BFC 46 92              		R1=6	// QImode move
00009BFD 19 D3 14 06        		[_SubStatus]=R1	// QImode move
0000101A                    	.debug
0000101A 2E 00 73 00        		.dw '.stabn 0x44,0,224,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         34 00 2C 00
         00 00 00 00
0000102E F4 00 00 00        		.dd LM105-_According_to_Keycode
00001030 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
                            	LM105:
00009BFF 0F 9F 50 9C        		pc=L48	// jump
                            	L60:
00001032                    	.debug
00001032 2E 00 73 00        		.dw '.stabn 0x44,0,226,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         36 00 2C 00
         00 00 00 00
00001046 F6 00 00 00        		.dd LM106-_According_to_Keycode
00001048 0D 00 0A 00        		.dw 0x0d,0x0a
00009C01                    	.code
                            	LM106:
00009C01 11 93 11 06        		R1=[_Segment]	// QImode move
00009C03 01 95              		R2=R1	// QImode move
00009C04 42 93              		R1=R2 lsl 1
00009C05 09 05 FF FF        		R2=R1+(-1)
00009C07 02 97              		R3=R2	// QImode move
00009C08 43 93              		R1=R3 lsl 1
00009C09 0B 97 1D 06        		R3=_Buffer	// QImode move
00009C0B 03 95              		R2=R3	// QImode move
00009C0C 01 05              		R2+=R1	// addqi3_r0r
00009C0D 02 93              		R1=R2	// QImode move
00009C0E D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009C0F C9 98              		R4=[R1--]
00009C10 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009C12 1C D9 16 06        		[_Addr+1]=R4
0000104A                    	.debug
0000104A 2E 00 73 00        		.dw '.stabn 0x44,0,227,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         37 00 2C 00
         00 00 00 00
0000105E 09 01 00 00        		.dd LM107-_According_to_Keycode
00001060 0D 00 0A 00        		.dw 0x0d,0x0a
00009C14                    	.code
                            	LM107:
00009C14 40 F0 A8 9A        		call _Play_Initial	// call without return value
00001062                    	.debug
00001062 2E 00 73 00        		.dw '.stabn 0x44,0,228,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         38 00 2C 00
         00 00 00 00
00001076 0B 01 00 00        		.dd LM108-_According_to_Keycode
00001078 0D 00 0A 00        		.dw 0x0d,0x0a
00009C16                    	.code
                            	LM108:
00009C16 47 92              		R1=7	// QImode move
00009C17 19 D3 14 06        		[_SubStatus]=R1	// QImode move
0000107A                    	.debug
0000107A 2E 00 73 00        		.dw '.stabn 0x44,0,229,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         39 00 2C 00
         00 00 00 00
0000108E 0E 01 00 00        		.dd LM109-_According_to_Keycode
00001090 0D 00 0A 00        		.dw 0x0d,0x0a
00009C19                    	.code
                            	LM109:
00009C19 0F 9F 50 9C        		pc=L48	// jump
                            	L61:
00001092                    	.debug
00001092 2E 00 73 00        		.dw '.stabn 0x44,0,231,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         31 00 2C 00
         00 00 00 00
000010A6 10 01 00 00        		.dd LM110-_According_to_Keycode
000010A8 0D 00 0A 00        		.dw 0x0d,0x0a
00009C1B                    	.code
                            	LM110:
00009C1B 13 97 1D 06        		R3=[_Buffer]	// HImode RD=[Label]
00009C1D 14 99 1E 06        		R4=[_Buffer+1]
00009C1F 03 93              		R1=R3	// HImode register to register move
00009C20 04 95              		R2=R4
00009C21 41 96              		R3=1	// QImode move
00009C22 C8 D6              		[SP--]=R3	// QImode move
00009C23 90 D4              		push R1,R2 to [sp]	// pushhi
00009C24 40 F0 FD A4        		call __lshiu2	// call with return value
00009C26 43 00              		SP=SP+3
00009C27 09 07 01 00        		R3=R1+1
00009C29 03 95              		R2=R3	// QImode move
00009C2A 42 93              		R1=R2 lsl 1
00009C2B 0B 97 1D 06        		R3=_Buffer	// QImode move
00009C2D 03 95              		R2=R3	// QImode move
00009C2E 01 05              		R2+=R1	// addqi3_r0r
00009C2F 02 93              		R1=R2	// QImode move
00009C30 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009C31 C9 98              		R4=[R1--]
00009C32 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009C34 1C D9 16 06        		[_Addr+1]=R4
000010AA                    	.debug
000010AA 2E 00 73 00        		.dw '.stabn 0x44,0,232,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         32 00 2C 00
         00 00 00 00
000010BE 2B 01 00 00        		.dd LM111-_According_to_Keycode
000010C0 0D 00 0A 00        		.dw 0x0d,0x0a
00009C36                    	.code
                            	LM111:
00009C36 40 F0 6B 81        		call _SACM_DVR_InitQueue	// call without return value
000010C2                    	.debug
000010C2 2E 00 73 00        		.dw '.stabn 0x44,0,233,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         33 00 2C 00
         00 00 00 00
000010D6 2D 01 00 00        		.dd LM112-_According_to_Keycode
000010D8 0D 00 0A 00        		.dw 0x0d,0x0a
00009C38                    	.code
                            	LM112:
00009C38 40 92              		R1=0	// QImode move
00009C39 C8 D2              		[SP--]=R1	// QImode move
00009C3A 40 F0 01 81        		call _SACM_DVR_InitEncoder	// call without return value
00009C3C 41 00              		SP=SP+1
000010DA                    	.debug
000010DA 2E 00 73 00        		.dw '.stabn 0x44,0,234,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         34 00 2C 00
         00 00 00 00
000010EE 32 01 00 00        		.dd LM113-_According_to_Keycode
000010F0 0D 00 0A 00        		.dw 0x0d,0x0a
00009C3D                    	.code
                            	LM113:
00009C3D 41 92              		R1=1	// QImode move
00009C3E 19 D3 14 06        		[_SubStatus]=R1	// QImode move
000010F2                    	.debug
000010F2 2E 00 73 00        		.dw '.stabn 0x44,0,235,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         35 00 2C 00
         00 00 00 00
00001106 35 01 00 00        		.dd LM114-_According_to_Keycode
00001108 0D 00 0A 00        		.dw 0x0d,0x0a
00009C40                    	.code
                            	LM114:
00009C40 0F 9F 50 9C        		pc=L48	// jump
                            	L62:
0000110A                    	.debug
0000110A 2E 00 73 00        		.dw '.stabn 0x44,0,237,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         37 00 2C 00
         00 00 00 00
0000111E 37 01 00 00        		.dd LM115-_According_to_Keycode
00001120 0D 00 0A 00        		.dw 0x0d,0x0a
00009C42                    	.code
                            	LM115:
00009C42 40 F0 FB A4        		call _Close_Interrupt	// call with return value
00001122                    	.debug
00001122 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
00001136 39 01 00 00        		.dd LM116-_According_to_Keycode
00001138 0D 00 0A 00        		.dw 0x0d,0x0a
00009C44                    	.code
                            	LM116:
00009C44 40 F0 9F A3        		call _SP_UART_Init	// call with return value
0000113A                    	.debug
0000113A 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
0000114E 3B 01 00 00        		.dd LM117-_According_to_Keycode
00001150 0D 00 0A 00        		.dw 0x0d,0x0a
00009C46                    	.code
                            	LM117:
00009C46 40 92              		R1=0	// QImode move
00009C47 19 D3 13 06        		[_BaseType]=R1	// QImode move
00001152                    	.debug
00001152 2E 00 73 00        		.dw '.stabn 0x44,0,240,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         30 00 2C 00
         00 00 00 00
00001166 3E 01 00 00        		.dd LM118-_According_to_Keycode
00001168 0D 00 0A 00        		.dw 0x0d,0x0a
00009C49                    	.code
                            	LM118:
00009C49 40 92              		R1=0	// QImode move
00009C4A 19 D3 14 06        		[_SubStatus]=R1	// QImode move
0000116A                    	.debug
0000116A 2E 00 73 00        		.dw '.stabn 0x44,0,241,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         31 00 2C 00
         00 00 00 00
0000117E 41 01 00 00        		.dd LM119-_According_to_Keycode
00001180 0D 00 0A 00        		.dw 0x0d,0x0a
00009C4C                    	.code
                            	LM119:
00009C4C 0F 9F 50 9C        		pc=L48	// jump
                            	L63:
00001182                    	.debug
00001182 2E 00 73 00        		.dw '.stabn 0x44,0,243,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         33 00 2C 00
         00 00 00 00
00001196 43 01 00 00        		.dd LM120-_According_to_Keycode
00001198 0D 00 0A 00        		.dw 0x0d,0x0a
00009C4E                    	.code
                            	LM120:
00009C4E 0F 9F 50 9C        		pc=L48	// jump
0000119A                    	.debug
0000119A 2E 00 73 00        		.dw '.stabn 0x44,0,244,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         34 00 2C 00
         00 00 00 00
000011AE 45 01 00 00        		.dd LM121-_According_to_Keycode
000011B0 0D 00 0A 00        		.dw 0x0d,0x0a
00009C50                    	.code
                            	LM121:
                            	LBE6:
                            	L50:
                            	L48:
000011B2                    	.debug
000011B2 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
000011C6 45 01 00 00        		.dd LM122-_According_to_Keycode
000011C8 0D 00 0A 00        		.dw 0x0d,0x0a
00009C50                    	.code
                            	LM122:
00009C50 0F 9F C5 9C        		pc=L65	// jump
                            	L47:
000011CA                    	.debug
000011CA 2E 00 73 00        		.dw '.stabn 0x44,0,250,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         30 00 2C 00
         00 00 00 00
000011DE 47 01 00 00        		.dd LM123-_According_to_Keycode
000011E0 0D 00 0A 00        		.dw 0x0d,0x0a
00009C52                    	.code
                            	LM123:
00009C52 11 93 0E 06        		R1=[_Keycode]	// QImode move
00009C54 42 42              		CMP R1,2	// QImode compare
00009C55 02 4E              		JNZ L87	// QImode EQ
00009C56 0F 9F 71 9C        		PC=L68
                            	L87:
00009C58 42 42              		CMP R1,2	// QImode compare
00009C59 02 8E              		JNA L88	// QImode GTU
00009C5A 0F 9F 62 9C        		PC=L77
                            	L88:
00009C5C 41 42              		CMP R1,1	// QImode compare
00009C5D 02 4E              		JNZ L89	// QImode EQ
00009C5E 0F 9F 6C 9C        		PC=L67
                            	L89:
00009C60 0F 9F C3 9C        		pc=L75	// jump
                            	L77:
00009C62 43 42              		CMP R1,3	// QImode compare
00009C63 02 4E              		JNZ L90	// QImode EQ
00009C64 0F 9F 76 9C        		PC=L69
                            	L90:
00009C66 4F 42              		CMP R1,15	// QImode compare
00009C67 02 4E              		JNZ L91	// QImode EQ
00009C68 0F 9F B9 9C        		PC=L74
                            	L91:
00009C6A 0F 9F C3 9C        		pc=L75	// jump
                            	L67:
000011E2                    	.debug
000011E2 2E 00 73 00        		.dw '.stabn 0x44,0,253,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         33 00 2C 00
         00 00 00 00
000011F6 61 01 00 00        		.dd LM124-_According_to_Keycode
000011F8 0D 00 0A 00        		.dw 0x0d,0x0a
00009C6C                    	.code
                            	LM124:
00009C6C 44 92              		R1=4	// QImode move
00009C6D 19 D3 14 06        		[_SubStatus]=R1	// QImode move
000011FA                    	.debug
000011FA 2E 00 73 00        		.dw '.stabn 0x44,0,254,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         34 00 2C 00
         00 00 00 00
0000120E 64 01 00 00        		.dd LM125-_According_to_Keycode
00001210 0D 00 0A 00        		.dw 0x0d,0x0a
00009C6F                    	.code
                            	LM125:
00009C6F 0F 9F C5 9C        		pc=L65	// jump
                            	L68:
00001212                    	.debug
00001212 2E 00 73 00        		.dw '.stabn 0x44,0,256,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         36 00 2C 00
         00 00 00 00
00001226 66 01 00 00        		.dd LM126-_According_to_Keycode
00001228 0D 00 0A 00        		.dw 0x0d,0x0a
00009C71                    	.code
                            	LM126:
00009C71 43 92              		R1=3	// QImode move
00009C72 19 D3 14 06        		[_SubStatus]=R1	// QImode move
0000122A                    	.debug
0000122A 2E 00 73 00        		.dw '.stabn 0x44,0,257,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         37 00 2C 00
         00 00 00 00
0000123E 69 01 00 00        		.dd LM127-_According_to_Keycode
00001240 0D 00 0A 00        		.dw 0x0d,0x0a
00009C74                    	.code
                            	LM127:
00009C74 0F 9F C5 9C        		pc=L65	// jump
                            	L69:
00001242                    	.debug
00001242 2E 00 73 00        		.dw '.stabn 0x44,0,259,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         39 00 2C 00
         00 00 00 00
00001256 6B 01 00 00        		.dd LM128-_According_to_Keycode
00001258 0D 00 0A 00        		.dw 0x0d,0x0a
00009C76                    	.code
                            	LM128:
00009C76 40 F0 17 A1        		call _SP_SIOMassErase	// call with return value
0000125A                    	.debug
0000125A 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
0000126E 6D 01 00 00        		.dd LM129-_According_to_Keycode
00001270 0D 00 0A 00        		.dw 0x0d,0x0a
00009C78                    	.code
                            	LM129:
00009C78 09 63 00 10        		R1=(-4096)	// QImode move
00009C7A C8 D2              		[SP--]=R1	// QImode move
00009C7B 40 F0 09 80        		call _SP_PageErase	// call with return value
00009C7D 41 00              		SP=SP+1
00001272                    	.debug
00001272 2E 00 73 00        		.dw '.stabn 0x44,0,261,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         31 00 2C 00
         00 00 00 00
00001286 73 01 00 00        		.dd LM130-_According_to_Keycode
00001288 0D 00 0A 00        		.dw 0x0d,0x0a
00009C7E                    	.code
                            	LM130:
00009C7E 40 92              		R1=0	// QImode move
00009C7F 19 D3 10 06        		[_i]=R1	// QImode move
                            	L70:
00009C81 11 93 10 06        		R1=[_i]	// QImode move
00009C83 54 42              		CMP R1,20	// QImode compare
00009C84 02 9E              		JA L92	// QImode LEU
00009C85 0F 9F 89 9C        		PC=L73
                            	L92:
00009C87 0F 9F A8 9C        		pc=L71	// jump
                            	L73:
0000128A                    	.debug
0000128A 2E 00 73 00        		.dw '.stabn 0x44,0,263,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         33 00 2C 00
         00 00 00 00
0000129E 7E 01 00 00        		.dd LM131-_According_to_Keycode
000012A0 0D 00 0A 00        		.dw 0x0d,0x0a
00009C89                    	.code
                            	LM131:
00009C89 11 93 10 06        		R1=[_i]	// QImode move
00009C8B 01 95              		R2=R1	// QImode move
00009C8C 42 93              		R1=R2 lsl 1
00009C8D 0B 97 1D 06        		R3=_Buffer	// QImode move
00009C8F 03 95              		R2=R3	// QImode move
00009C90 01 05              		R2+=R1	// addqi3_r0r
00009C91 40 96              		R3=0	// HImode immediate to register move
00009C92 40 98              		R4=0
00009C93 02 93              		R1=R2	// QImode move
00009C94 D1 D6              		[R1++]=R3	// [RD]=RS HImode, RD!=RS+1
00009C95 C9 D8              		[R1--]=R4
000012A2                    	.debug
000012A2 2E 00 73 00        		.dw '.stabn 0x44,0,264,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         34 00 2C 00
         00 00 00 00
000012B6 8B 01 00 00        		.dd LM132-_According_to_Keycode
000012B8 0D 00 0A 00        		.dw 0x0d,0x0a
00009C96                    	.code
                            	LM132:
00009C96 40 92              		R1=0	// HImode immediate to register move
00009C97 40 94              		R2=0
00009C98 90 D4              		push R1,R2 to [sp]	// pushhi
00009C99 12 95 10 06        		R2=[_i]	// QImode move
00009C9B 0A 03 00 F0        		R1=R2+(-4096)
00009C9D C8 D2              		[SP--]=R1	// QImode move
00009C9E 40 F0 1E 80        		call _SP_WriteWord	// call with return value
00009CA0 43 00              		SP=SP+3
000012BA                    	.debug
000012BA 2E 00 73 00        		.dw '.stabn 0x44,0,261,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         31 00 2C 00
         00 00 00 00
000012CE 96 01 00 00        		.dd LM133-_According_to_Keycode
000012D0 0D 00 0A 00        		.dw 0x0d,0x0a
00009CA1                    	.code
                            	LM133:
                            	L72:
00009CA1 11 93 10 06        		R1=[_i]	// QImode move
00009CA3 41 94              		R2=1	// QImode move
00009CA4 19 05 10 06        		[_i]=R1+R2
00009CA6 0F 9F 81 9C        		pc=L70	// jump
                            	L71:
000012D2                    	.debug
000012D2 2E 00 73 00        		.dw '.stabn 0x44,0,266,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         36 00 2C 00
         00 00 00 00
000012E6 9D 01 00 00        		.dd LM134-_According_to_Keycode
000012E8 0D 00 0A 00        		.dw 0x0d,0x0a
00009CA8                    	.code
                            	LM134:
00009CA8 41 92              		R1=1	// QImode move
00009CA9 19 D3 11 06        		[_Segment]=R1	// QImode move
000012EA                    	.debug
000012EA 2E 00 73 00        		.dw '.stabn 0x44,0,267,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         37 00 2C 00
         00 00 00 00
000012FE A0 01 00 00        		.dd LM135-_According_to_Keycode
00001300 0D 00 0A 00        		.dw 0x0d,0x0a
00009CAB                    	.code
                            	LM135:
00009CAB 40 92              		R1=0	// HImode immediate to register move
00009CAC 40 94              		R2=0
00009CAD 19 D3 15 06        		[_Addr]=R1	// HImode [Label]=RS
00009CAF 1A D5 16 06        		[_Addr+1]=R2
00001302                    	.debug
00001302 2E 00 73 00        		.dw '.stabn 0x44,0,268,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         38 00 2C 00
         00 00 00 00
00001316 A6 01 00 00        		.dd LM136-_According_to_Keycode
00001318 0D 00 0A 00        		.dw 0x0d,0x0a
00009CB1                    	.code
                            	LM136:
00009CB1 41 92              		R1=1	// QImode move
00009CB2 19 D3 13 06        		[_BaseType]=R1	// QImode move
0000131A                    	.debug
0000131A 2E 00 73 00        		.dw '.stabn 0x44,0,269,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         39 00 2C 00
         00 00 00 00
0000132E A9 01 00 00        		.dd LM137-_According_to_Keycode
00001330 0D 00 0A 00        		.dw 0x0d,0x0a
00009CB4                    	.code
                            	LM137:
00009CB4 40 92              		R1=0	// QImode move
00009CB5 19 D3 14 06        		[_SubStatus]=R1	// QImode move
00001332                    	.debug
00001332 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
00001346 AC 01 00 00        		.dd LM138-_According_to_Keycode
00001348 0D 00 0A 00        		.dw 0x0d,0x0a
00009CB7                    	.code
                            	LM138:
00009CB7 0F 9F C5 9C        		pc=L65	// jump
                            	L74:
0000134A                    	.debug
0000134A 2E 00 73 00        		.dw '.stabn 0x44,0,272,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         32 00 2C 00
         00 00 00 00
0000135E AE 01 00 00        		.dd LM139-_According_to_Keycode
00001360 0D 00 0A 00        		.dw 0x0d,0x0a
00009CB9                    	.code
                            	LM139:
00009CB9 40 F0 F9 A4        		call _Open_Interrupt	// call with return value
00001362                    	.debug
00001362 2E 00 73 00        		.dw '.stabn 0x44,0,273,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         33 00 2C 00
         00 00 00 00
00001376 B0 01 00 00        		.dd LM140-_According_to_Keycode
00001378 0D 00 0A 00        		.dw 0x0d,0x0a
00009CBB                    	.code
                            	LM140:
00009CBB 41 92              		R1=1	// QImode move
00009CBC 19 D3 13 06        		[_BaseType]=R1	// QImode move
0000137A                    	.debug
0000137A 2E 00 73 00        		.dw '.stabn 0x44,0,274,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         34 00 2C 00
         00 00 00 00
0000138E B3 01 00 00        		.dd LM141-_According_to_Keycode
00001390 0D 00 0A 00        		.dw 0x0d,0x0a
00009CBE                    	.code
                            	LM141:
00009CBE 40 92              		R1=0	// QImode move
00009CBF 19 D3 14 06        		[_SubStatus]=R1	// QImode move
00001392                    	.debug
00001392 2E 00 73 00        		.dw '.stabn 0x44,0,275,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         35 00 2C 00
         00 00 00 00
000013A6 B6 01 00 00        		.dd LM142-_According_to_Keycode
000013A8 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC1                    	.code
                            	LM142:
00009CC1 0F 9F C5 9C        		pc=L65	// jump
                            	L75:
000013AA                    	.debug
000013AA 2E 00 73 00        		.dw '.stabn 0x44,0,277,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         37 00 2C 00
         00 00 00 00
000013BE B8 01 00 00        		.dd LM143-_According_to_Keycode
000013C0 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC3                    	.code
                            	LM143:
00009CC3 0F 9F C5 9C        		pc=L65	// jump
                            	L66:
                            	L65:
000013C2                    	.debug
000013C2 2E 00 73 00        		.dw '.stabn 0x44,0,280,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         30 00 2C 00
         00 00 00 00
000013D6 BA 01 00 00        		.dd LM144-_According_to_Keycode
000013D8 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC5                    	.code
                            	LM144:
                            	LBE5:
000013DA                    	.debug
000013DA 2E 00 73 00        		.dw '.stabn 0x44,0,280,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         30 00 2C 00
         00 00 00 00
000013EE BA 01 00 00        		.dd LM145-_According_to_Keycode
000013F0 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC5                    	.code
                            	LM145:
                            	L46:
                            	
00009CC5 41 00              		sp+=1
00009CC6 88 98              		pop bp from [sp]
00009CC7 90 9A              		retf
                            		.endp	// end of According_to_Keycode
                            	
000013F2                    	.debug
000013F2 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001404 07 00 00 00        		.dd LBB5-_According_to_Keycode
00001406 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC8                    	.code
00001408                    	.debug
00001408 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000141A 2F 00 00 00        		.dd LBB6-_According_to_Keycode
0000141C 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC8                    	.code
0000141E                    	.debug
0000141E 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001430 45 01 00 00        		.dd LBE6-_According_to_Keycode
00001432 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC8                    	.code
00001434                    	.debug
00001434 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001446 BA 01 00 00        		.dd LBE5-_According_to_Keycode
00001448 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC8                    	.code
0000144A                    	.debug
0000144A 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001453 BD 01 00 00        		.dd LME7-_According_to_Keycode
00001455 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC8                    	.code
                            	LME7:
00009CC8                    	.code
00001457                    	.debug
00001457 2E 00 73 00        		.dw '.stabs "According_to_SubStatus:F19",36,0,0,',0,0,offset _According_to_SubStatus,seg _According_to_SubStatus,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 63 00
         63 00 6F 00
         72 00 64 00
         69 00 6E 00
         67 00 5F 00
         74 00 6F 00
         5F 00 53 00
         75 00 62 00
         53 00 74 00
         61 00 74 00
         75 00 73 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 AF 03
         00 00 0D 00
         0A 00      
00009CC8                    	.CODE
                            	.public _According_to_SubStatus
                            	_According_to_SubStatus:	.proc
00001488                    	.debug
00001488 2E 00 73 00        		.dw '.stabn 0x44,0,292,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         32 00 2C 00
         00 00 00 00
0000149C 00 00 00 00        		.dd LM146-_According_to_SubStatus
0000149E 0D 00 0A 00        		.dw 0x0d,0x0a
00009CC8                    	.code
                            	LM146:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009CC8 88 DA              		push bp to [sp]
00009CC9 41 20              		sp-=1
00009CCA 08 0B 01 00        		bp=sp+1
                            	
00009CCC 0D 03 04 00        		R1=BP+4
00009CCE C5 D2              		[BP]=R1	// QImode move
000014A0                    	.debug
000014A0 2E 00 73 00        		.dw '.stabn 0x44,0,293,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         33 00 2C 00
         00 00 00 00
000014B4 07 00 00 00        		.dd LM147-_According_to_SubStatus
000014B6 0D 00 0A 00        		.dw 0x0d,0x0a
00009CCF                    	.code
                            	LM147:
                            	LBB7:
00009CCF 11 93 14 06        		R1=[_SubStatus]	// QImode move
00009CD1 47 42              		CMP R1,7	// QImode compare
00009CD2 02 8E              		JNA L124	// QImode GTU
00009CD3 0F 9F 29 9E        		PC=L117
                            	L124:
00009CD5 11 93 14 06        		R1=[_SubStatus]	// QImode move
00009CD7 01 95              		R2=R1	// QImode move
00009CD8 02 93              		R1=R2	// QImode move
00009CD9 09 03 75 80        		R1=R1+L123
00009CDB 01 97              		R3=R1	// QImode move
00009CDC C3 94              		R2=[R3]	// QImode move
00009CDD 02 9F              		pc=R2	// tablejump
00008075                    	.text
                            	L123:
00008075 29 9E              		.dw L117
00008076 DE 9C              		.dw L95
00008077 1A 9D              		.dw L99
00008078 9D 9D              		.dw L110
00008079 C6 9D              		.dw L111
0000807A 29 9E              		.dw L117
0000807B 2F 9D              		.dw L102
0000807C 76 9D              		.dw L107
00009CDE                    	.code
                            	L95:
000014B8                    	.debug
000014B8 2E 00 73 00        		.dw '.stabn 0x44,0,296,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         36 00 2C 00
         00 00 00 00
000014CC 16 00 00 00        		.dd LM148-_According_to_SubStatus
000014CE 0D 00 0A 00        		.dw 0x0d,0x0a
00009CDE                    	.code
                            	LM148:
00009CDE 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009CE0 12 95 16 06        		R2=[_Addr+1]
00009CE2 47 44              		CMP R2,7	// HImode compare
00009CE3 04 9E              		JA  L125	// HImode GTU
00009CE4 05 4E              		JNZ L126
00009CE5 09 43 6B FF        		CMP R1,(-149)
00009CE7 02 8E              		JNA L126
                            	L125:
00009CE8 0F 9F 0F 9D        		PC=L96
                            	L126:
000014D0                    	.debug
000014D0 2E 00 73 00        		.dw '.stabn 0x44,0,298,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         38 00 2C 00
         00 00 00 00
000014E4 22 00 00 00        		.dd LM149-_According_to_SubStatus
000014E6 0D 00 0A 00        		.dw 0x0d,0x0a
00009CEA                    	.code
                            	LM149:
                            	LBB8:
00009CEA 40 F0 FA 80        		call _SACM_DVR_Encode	// call with return value
000014E8                    	.debug
000014E8 2E 00 73 00        		.dw '.stabn 0x44,0,299,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         39 00 2C 00
         00 00 00 00
000014FC 24 00 00 00        		.dd LM150-_According_to_SubStatus
000014FE 0D 00 0A 00        		.dw 0x0d,0x0a
00009CEC                    	.code
                            	LM150:
00009CEC 40 F0 84 81        		call _SACM_DVR_TestQueue	// call with return value
00009CEE 42 42              		CMP R1,2	// QImode compare
00009CEF 02 4E              		JNZ L127	// QImode EQ
00009CF0 0F 9F 0D 9D        		PC=L97
                            	L127:
00001500                    	.debug
00001500 2E 00 73 00        		.dw '.stabn 0x44,0,301,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         31 00 2C 00
         00 00 00 00
00001514 2A 00 00 00        		.dd LM151-_According_to_SubStatus
00001516 0D 00 0A 00        		.dw 0x0d,0x0a
00009CF2                    	.code
                            	LM151:
00009CF2 40 F0 70 81        		call _SACM_DVR_FetchQueue	// call with return value
00009CF4 19 D3 0F 06        		[_Ret]=R1	// QImode move
00001518                    	.debug
00001518 2E 00 73 00        		.dw '.stabn 0x44,0,302,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         32 00 2C 00
         00 00 00 00
0000152C 2E 00 00 00        		.dd LM152-_According_to_SubStatus
0000152E 0D 00 0A 00        		.dw 0x0d,0x0a
00009CF6                    	.code
                            	LM152:
00009CF6 11 93 0F 06        		R1=[_Ret]	// QImode move
00009CF8 C8 D2              		[SP--]=R1	// QImode move
00009CF9 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009CFB 12 95 16 06        		R2=[_Addr+1]
00009CFD 90 D4              		push R1,R2 to [sp]	// pushhi
00009CFE 40 F0 80 A0        		call _SP_SIOSendAWord	// call with return value
00009D00 43 00              		SP=SP+3
00001530                    	.debug
00001530 2E 00 73 00        		.dw '.stabn 0x44,0,303,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         33 00 2C 00
         00 00 00 00
00001544 39 00 00 00        		.dd LM153-_According_to_SubStatus
00001546 0D 00 0A 00        		.dw 0x0d,0x0a
00009D01                    	.code
                            	LM153:
00009D01 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009D03 12 95 16 06        		R2=[_Addr+1]
00009D05 09 07 02 00        		R3=R1+2	// HImode RD=RS+#IMM16
00009D07 0A 19 00 00        		R4=R2+0, Carry
00009D09 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009D0B 1C D9 16 06        		[_Addr+1]=R4
                            	L97:
00001548                    	.debug
00001548 2E 00 73 00        		.dw '.stabn 0x44,0,305,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         35 00 2C 00
         00 00 00 00
0000155C 45 00 00 00        		.dd LM154-_According_to_SubStatus
0000155E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D0D                    	.code
                            	LM154:
                            	LBE8:
00009D0D 0F 9F 18 9D        		pc=L98	// jump
                            	L96:
00001560                    	.debug
00001560 2E 00 73 00        		.dw '.stabn 0x44,0,308,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         38 00 2C 00
         00 00 00 00
00001574 47 00 00 00        		.dd LM155-_According_to_SubStatus
00001576 0D 00 0A 00        		.dw 0x0d,0x0a
00009D0F                    	.code
                            	LM155:
00009D0F 40 F0 69 9A        		call _DVR_Stop	// call without return value
00001578                    	.debug
00001578 2E 00 73 00        		.dw '.stabn 0x44,0,309,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         39 00 2C 00
         00 00 00 00
0000158C 49 00 00 00        		.dd LM156-_According_to_SubStatus
0000158E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D11                    	.code
                            	LM156:
00009D11 40 F0 79 9A        		call _Send_QueueData_to_Sflash	// call without return value
00001590                    	.debug
00001590 2E 00 73 00        		.dw '.stabn 0x44,0,310,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         30 00 2C 00
         00 00 00 00
000015A4 4B 00 00 00        		.dd LM157-_According_to_SubStatus
000015A6 0D 00 0A 00        		.dw 0x0d,0x0a
00009D13                    	.code
                            	LM157:
00009D13 40 F0 7E 99        		call _Modify_Index	// call without return value
000015A8                    	.debug
000015A8 2E 00 73 00        		.dw '.stabn 0x44,0,311,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         31 00 2C 00
         00 00 00 00
000015BC 4D 00 00 00        		.dd LM158-_According_to_SubStatus
000015BE 0D 00 0A 00        		.dw 0x0d,0x0a
00009D15                    	.code
                            	LM158:
00009D15 40 92              		R1=0	// QImode move
00009D16 19 D3 14 06        		[_SubStatus]=R1	// QImode move
                            	L98:
000015C0                    	.debug
000015C0 2E 00 73 00        		.dw '.stabn 0x44,0,313,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         33 00 2C 00
         00 00 00 00
000015D4 50 00 00 00        		.dd LM159-_According_to_SubStatus
000015D6 0D 00 0A 00        		.dw 0x0d,0x0a
00009D18                    	.code
                            	LM159:
00009D18 0F 9F 58 9E        		pc=L94	// jump
                            	L99:
000015D8                    	.debug
000015D8 2E 00 73 00        		.dw '.stabn 0x44,0,315,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         35 00 2C 00
         00 00 00 00
000015EC 52 00 00 00        		.dd LM160-_According_to_SubStatus
000015EE 0D 00 0A 00        		.dw 0x0d,0x0a
00009D1A                    	.code
                            	LM160:
00009D1A 40 F0 68 81        		call _SACM_DVR_Status	// call with return value
00009D1C 09 B5 01 00        		R2=R1&1
00009D1E 40 44              		CMP R2,0	// QImode test
00009D1F 02 4E              		JNZ L128	// QImode EQ
00009D20 0F 9F 28 9D        		PC=L100
                            	L128:
000015F0                    	.debug
000015F0 2E 00 73 00        		.dw '.stabn 0x44,0,317,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         37 00 2C 00
         00 00 00 00
00001604 5A 00 00 00        		.dd LM161-_According_to_SubStatus
00001606 0D 00 0A 00        		.dw 0x0d,0x0a
00009D22                    	.code
                            	LM161:
                            	LBB9:
00009D22 40 F0 DF 9A        		call _Fill_A_Word_To_Queue	// call without return value
00001608                    	.debug
00001608 2E 00 73 00        		.dw '.stabn 0x44,0,318,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         38 00 2C 00
         00 00 00 00
0000161C 5C 00 00 00        		.dd LM162-_According_to_SubStatus
0000161E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D24                    	.code
                            	LM162:
00009D24 40 F0 F5 80        		call _SACM_DVR_Decode	// call with return value
00001620                    	.debug
00001620 2E 00 73 00        		.dw '.stabn 0x44,0,319,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         39 00 2C 00
         00 00 00 00
00001634 5E 00 00 00        		.dd LM163-_According_to_SubStatus
00001636 0D 00 0A 00        		.dw 0x0d,0x0a
00009D26                    	.code
                            	LM163:
                            	LBE9:
00009D26 0F 9F 2D 9D        		pc=L101	// jump
                            	L100:
00001638                    	.debug
00001638 2E 00 73 00        		.dw '.stabn 0x44,0,322,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         32 00 2C 00
         00 00 00 00
0000164C 60 00 00 00        		.dd LM164-_According_to_SubStatus
0000164E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D28                    	.code
                            	LM164:
00009D28 40 F0 69 9A        		call _DVR_Stop	// call without return value
00001650                    	.debug
00001650 2E 00 73 00        		.dw '.stabn 0x44,0,323,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         33 00 2C 00
         00 00 00 00
00001664 62 00 00 00        		.dd LM165-_According_to_SubStatus
00001666 0D 00 0A 00        		.dw 0x0d,0x0a
00009D2A                    	.code
                            	LM165:
00009D2A 40 92              		R1=0	// QImode move
00009D2B 19 D3 14 06        		[_SubStatus]=R1	// QImode move
                            	L101:
00001668                    	.debug
00001668 2E 00 73 00        		.dw '.stabn 0x44,0,325,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         35 00 2C 00
         00 00 00 00
0000167C 65 00 00 00        		.dd LM166-_According_to_SubStatus
0000167E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D2D                    	.code
                            	LM166:
00009D2D 0F 9F 58 9E        		pc=L94	// jump
                            	L102:
00001680                    	.debug
00001680 2E 00 73 00        		.dw '.stabn 0x44,0,328,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         38 00 2C 00
         00 00 00 00
00001694 67 00 00 00        		.dd LM167-_According_to_SubStatus
00001696 0D 00 0A 00        		.dw 0x0d,0x0a
00009D2F                    	.code
                            	LM167:
00009D2F 40 F0 68 81        		call _SACM_DVR_Status	// call with return value
00009D31 09 B5 01 00        		R2=R1&1
00009D33 40 44              		CMP R2,0	// QImode test
00009D34 02 4E              		JNZ L129	// QImode EQ
00009D35 0F 9F 3D 9D        		PC=L103
                            	L129:
00001698                    	.debug
00001698 2E 00 73 00        		.dw '.stabn 0x44,0,330,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         30 00 2C 00
         00 00 00 00
000016AC 6F 00 00 00        		.dd LM168-_According_to_SubStatus
000016AE 0D 00 0A 00        		.dw 0x0d,0x0a
00009D37                    	.code
                            	LM168:
                            	LBB10:
00009D37 40 F0 DF 9A        		call _Fill_A_Word_To_Queue	// call without return value
000016B0                    	.debug
000016B0 2E 00 73 00        		.dw '.stabn 0x44,0,331,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         31 00 2C 00
         00 00 00 00
000016C4 71 00 00 00        		.dd LM169-_According_to_SubStatus
000016C6 0D 00 0A 00        		.dw 0x0d,0x0a
00009D39                    	.code
                            	LM169:
00009D39 40 F0 F5 80        		call _SACM_DVR_Decode	// call with return value
000016C8                    	.debug
000016C8 2E 00 73 00        		.dw '.stabn 0x44,0,332,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         32 00 2C 00
         00 00 00 00
000016DC 73 00 00 00        		.dd LM170-_According_to_SubStatus
000016DE 0D 00 0A 00        		.dw 0x0d,0x0a
00009D3B                    	.code
                            	LM170:
                            	LBE10:
00009D3B 0F 9F 74 9D        		pc=L104	// jump
                            	L103:
000016E0                    	.debug
000016E0 2E 00 73 00        		.dw '.stabn 0x44,0,335,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         35 00 2C 00
         00 00 00 00
000016F4 75 00 00 00        		.dd LM171-_According_to_SubStatus
000016F6 0D 00 0A 00        		.dw 0x0d,0x0a
00009D3D                    	.code
                            	LM171:
00009D3D 40 F0 69 9A        		call _DVR_Stop	// call without return value
000016F8                    	.debug
000016F8 2E 00 73 00        		.dw '.stabn 0x44,0,336,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         36 00 2C 00
         00 00 00 00
0000170C 77 00 00 00        		.dd LM172-_According_to_SubStatus
0000170E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D3F                    	.code
                            	LM172:
00009D3F 11 93 11 06        		R1=[_Segment]
00009D41 40 94              		R2=0
00009D42 13 97 1D 06        		R3=[_Buffer]	// HImode RD=[Label]
00009D44 14 99 1E 06        		R4=[_Buffer+1]
00009D46 04 45              		CMP R2,R4	// HImode compare
00009D47 05 0E              		JB  L131	// HImode GEU
00009D48 02 4E              		JNZ L130
00009D49 03 43              		CMP R1,R3
00009D4A 02 0E              		JB  L131
                            	L130:
00009D4B 0F 9F 67 9D        		PC=L105
                            	L131:
00001710                    	.debug
00001710 2E 00 73 00        		.dw '.stabn 0x44,0,338,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         38 00 2C 00
         00 00 00 00
00001724 85 00 00 00        		.dd LM173-_According_to_SubStatus
00001726 0D 00 0A 00        		.dw 0x0d,0x0a
00009D4D                    	.code
                            	LM173:
00009D4D 11 93 11 06        		R1=[_Segment]	// QImode move
00009D4F 41 94              		R2=1	// QImode move
00009D50 19 05 11 06        		[_Segment]=R1+R2
00001728                    	.debug
00001728 2E 00 73 00        		.dw '.stabn 0x44,0,339,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         39 00 2C 00
         00 00 00 00
0000173C 8A 00 00 00        		.dd LM174-_According_to_SubStatus
0000173E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D52                    	.code
                            	LM174:
00009D52 11 93 11 06        		R1=[_Segment]	// QImode move
00009D54 01 95              		R2=R1	// QImode move
00009D55 42 93              		R1=R2 lsl 1
00009D56 09 05 FF FF        		R2=R1+(-1)
00009D58 02 97              		R3=R2	// QImode move
00009D59 43 93              		R1=R3 lsl 1
00009D5A 0B 97 1D 06        		R3=_Buffer	// QImode move
00009D5C 03 95              		R2=R3	// QImode move
00009D5D 01 05              		R2+=R1	// addqi3_r0r
00009D5E 02 93              		R1=R2	// QImode move
00009D5F D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009D60 C9 98              		R4=[R1--]
00009D61 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009D63 1C D9 16 06        		[_Addr+1]=R4
00001740                    	.debug
00001740 2E 00 73 00        		.dw '.stabn 0x44,0,340,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         30 00 2C 00
         00 00 00 00
00001754 9D 00 00 00        		.dd LM175-_According_to_SubStatus
00001756 0D 00 0A 00        		.dw 0x0d,0x0a
00009D65                    	.code
                            	LM175:
00009D65 0F 9F 72 9D        		pc=L106	// jump
                            	L105:
00001758                    	.debug
00001758 2E 00 73 00        		.dw '.stabn 0x44,0,343,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         33 00 2C 00
         00 00 00 00
0000176C 9F 00 00 00        		.dd LM176-_According_to_SubStatus
0000176E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D67                    	.code
                            	LM176:
00009D67 41 92              		R1=1	// QImode move
00009D68 19 D3 11 06        		[_Segment]=R1	// QImode move
00001770                    	.debug
00001770 2E 00 73 00        		.dw '.stabn 0x44,0,344,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         34 00 2C 00
         00 00 00 00
00001784 A2 00 00 00        		.dd LM177-_According_to_SubStatus
00001786 0D 00 0A 00        		.dw 0x0d,0x0a
00009D6A                    	.code
                            	LM177:
00009D6A 11 93 1F 06        		R1=[_Buffer+2]	// HImode RD=[Label]
00009D6C 12 95 20 06        		R2=[_Buffer+3]
00009D6E 19 D3 15 06        		[_Addr]=R1	// HImode [Label]=RS
00009D70 1A D5 16 06        		[_Addr+1]=R2
                            	L106:
00001788                    	.debug
00001788 2E 00 73 00        		.dw '.stabn 0x44,0,346,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         36 00 2C 00
         00 00 00 00
0000179C AA 00 00 00        		.dd LM178-_According_to_SubStatus
0000179E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D72                    	.code
                            	LM178:
00009D72 40 F0 A8 9A        		call _Play_Initial	// call without return value
                            	L104:
000017A0                    	.debug
000017A0 2E 00 73 00        		.dw '.stabn 0x44,0,348,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         38 00 2C 00
         00 00 00 00
000017B4 AC 00 00 00        		.dd LM179-_According_to_SubStatus
000017B6 0D 00 0A 00        		.dw 0x0d,0x0a
00009D74                    	.code
                            	LM179:
00009D74 0F 9F 58 9E        		pc=L94	// jump
                            	L107:
000017B8                    	.debug
000017B8 2E 00 73 00        		.dw '.stabn 0x44,0,350,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         30 00 2C 00
         00 00 00 00
000017CC AE 00 00 00        		.dd LM180-_According_to_SubStatus
000017CE 0D 00 0A 00        		.dw 0x0d,0x0a
00009D76                    	.code
                            	LM180:
00009D76 40 F0 68 81        		call _SACM_DVR_Status	// call with return value
00009D78 09 B5 01 00        		R2=R1&1
00009D7A 40 44              		CMP R2,0	// QImode test
00009D7B 02 4E              		JNZ L132	// QImode EQ
00009D7C 0F 9F 84 9D        		PC=L108
                            	L132:
000017D0                    	.debug
000017D0 2E 00 73 00        		.dw '.stabn 0x44,0,352,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         32 00 2C 00
         00 00 00 00
000017E4 B6 00 00 00        		.dd LM181-_According_to_SubStatus
000017E6 0D 00 0A 00        		.dw 0x0d,0x0a
00009D7E                    	.code
                            	LM181:
                            	LBB11:
00009D7E 40 F0 DF 9A        		call _Fill_A_Word_To_Queue	// call without return value
000017E8                    	.debug
000017E8 2E 00 73 00        		.dw '.stabn 0x44,0,353,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         33 00 2C 00
         00 00 00 00
000017FC B8 00 00 00        		.dd LM182-_According_to_SubStatus
000017FE 0D 00 0A 00        		.dw 0x0d,0x0a
00009D80                    	.code
                            	LM182:
00009D80 40 F0 F5 80        		call _SACM_DVR_Decode	// call with return value
00001800                    	.debug
00001800 2E 00 73 00        		.dw '.stabn 0x44,0,354,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         34 00 2C 00
         00 00 00 00
00001814 BA 00 00 00        		.dd LM183-_According_to_SubStatus
00001816 0D 00 0A 00        		.dw 0x0d,0x0a
00009D82                    	.code
                            	LM183:
                            	LBE11:
00009D82 0F 9F 9B 9D        		pc=L109	// jump
                            	L108:
00001818                    	.debug
00001818 2E 00 73 00        		.dw '.stabn 0x44,0,357,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         37 00 2C 00
         00 00 00 00
0000182C BC 00 00 00        		.dd LM184-_According_to_SubStatus
0000182E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D84                    	.code
                            	LM184:
00009D84 40 F0 69 9A        		call _DVR_Stop	// call without return value
00001830                    	.debug
00001830 2E 00 73 00        		.dw '.stabn 0x44,0,358,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         38 00 2C 00
         00 00 00 00
00001844 BE 00 00 00        		.dd LM185-_According_to_SubStatus
00001846 0D 00 0A 00        		.dw 0x0d,0x0a
00009D86                    	.code
                            	LM185:
00009D86 11 93 11 06        		R1=[_Segment]	// QImode move
00009D88 01 95              		R2=R1	// QImode move
00009D89 42 93              		R1=R2 lsl 1
00009D8A 09 05 FF FF        		R2=R1+(-1)
00009D8C 02 97              		R3=R2	// QImode move
00009D8D 43 93              		R1=R3 lsl 1
00009D8E 0B 97 1D 06        		R3=_Buffer	// QImode move
00009D90 03 95              		R2=R3	// QImode move
00009D91 01 05              		R2+=R1	// addqi3_r0r
00009D92 02 93              		R1=R2	// QImode move
00009D93 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009D94 C9 98              		R4=[R1--]
00009D95 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009D97 1C D9 16 06        		[_Addr+1]=R4
00001848                    	.debug
00001848 2E 00 73 00        		.dw '.stabn 0x44,0,359,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         39 00 2C 00
         00 00 00 00
0000185C D1 00 00 00        		.dd LM186-_According_to_SubStatus
0000185E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D99                    	.code
                            	LM186:
00009D99 40 F0 A8 9A        		call _Play_Initial	// call without return value
                            	L109:
00001860                    	.debug
00001860 2E 00 73 00        		.dw '.stabn 0x44,0,361,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         31 00 2C 00
         00 00 00 00
00001874 D3 00 00 00        		.dd LM187-_According_to_SubStatus
00001876 0D 00 0A 00        		.dw 0x0d,0x0a
00009D9B                    	.code
                            	LM187:
00009D9B 0F 9F 58 9E        		pc=L94	// jump
                            	L110:
00001878                    	.debug
00001878 2E 00 73 00        		.dw '.stabn 0x44,0,363,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         33 00 2C 00
         00 00 00 00
0000188C D5 00 00 00        		.dd LM188-_According_to_SubStatus
0000188E 0D 00 0A 00        		.dw 0x0d,0x0a
00009D9D                    	.code
                            	LM188:
00009D9D 13 97 1D 06        		R3=[_Buffer]	// HImode RD=[Label]
00009D9F 14 99 1E 06        		R4=[_Buffer+1]
00009DA1 03 93              		R1=R3	// HImode register to register move
00009DA2 04 95              		R2=R4
00009DA3 41 96              		R3=1	// QImode move
00009DA4 C8 D6              		[SP--]=R3	// QImode move
00009DA5 90 D4              		push R1,R2 to [sp]	// pushhi
00009DA6 40 F0 FD A4        		call __lshiu2	// call with return value
00009DA8 43 00              		SP=SP+3
00009DA9 09 07 01 00        		R3=R1+1
00009DAB 03 95              		R2=R3	// QImode move
00009DAC 42 93              		R1=R2 lsl 1
00009DAD 0B 97 1D 06        		R3=_Buffer	// QImode move
00009DAF 03 95              		R2=R3	// QImode move
00009DB0 01 05              		R2+=R1	// addqi3_r0r
00009DB1 02 93              		R1=R2	// QImode move
00009DB2 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009DB3 C9 98              		R4=[R1--]
00009DB4 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009DB6 1C D9 16 06        		[_Addr+1]=R4
00001890                    	.debug
00001890 2E 00 73 00        		.dw '.stabn 0x44,0,364,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         34 00 2C 00
         00 00 00 00
000018A4 F0 00 00 00        		.dd LM189-_According_to_SubStatus
000018A6 0D 00 0A 00        		.dw 0x0d,0x0a
00009DB8                    	.code
                            	LM189:
00009DB8 40 F0 DF A3        		call _UART_Download	// call with return value
000018A8                    	.debug
000018A8 2E 00 73 00        		.dw '.stabn 0x44,0,365,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         35 00 2C 00
         00 00 00 00
000018BC F2 00 00 00        		.dd LM190-_According_to_SubStatus
000018BE 0D 00 0A 00        		.dw 0x0d,0x0a
00009DBA                    	.code
                            	LM190:
00009DBA 40 F0 7E 99        		call _Modify_Index	// call without return value
000018C0                    	.debug
000018C0 2E 00 73 00        		.dw '.stabn 0x44,0,366,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         36 00 2C 00
         00 00 00 00
000018D4 F4 00 00 00        		.dd LM191-_According_to_SubStatus
000018D6 0D 00 0A 00        		.dw 0x0d,0x0a
00009DBC                    	.code
                            	LM191:
00009DBC 41 92              		R1=1	// QImode move
00009DBD 19 D3 13 06        		[_BaseType]=R1	// QImode move
000018D8                    	.debug
000018D8 2E 00 73 00        		.dw '.stabn 0x44,0,367,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         37 00 2C 00
         00 00 00 00
000018EC F7 00 00 00        		.dd LM192-_According_to_SubStatus
000018EE 0D 00 0A 00        		.dw 0x0d,0x0a
00009DBF                    	.code
                            	LM192:
00009DBF 40 92              		R1=0	// QImode move
00009DC0 19 D3 14 06        		[_SubStatus]=R1	// QImode move
000018F0                    	.debug
000018F0 2E 00 73 00        		.dw '.stabn 0x44,0,368,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         38 00 2C 00
         00 00 00 00
00001904 FA 00 00 00        		.dd LM193-_According_to_SubStatus
00001906 0D 00 0A 00        		.dw 0x0d,0x0a
00009DC2                    	.code
                            	LM193:
00009DC2 40 F0 F9 A4        		call _Open_Interrupt	// call with return value
00001908                    	.debug
00001908 2E 00 73 00        		.dw '.stabn 0x44,0,369,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         39 00 2C 00
         00 00 00 00
0000191C FC 00 00 00        		.dd LM194-_According_to_SubStatus
0000191E 0D 00 0A 00        		.dw 0x0d,0x0a
00009DC4                    	.code
                            	LM194:
00009DC4 0F 9F 58 9E        		pc=L94	// jump
                            	L111:
00001920                    	.debug
00001920 2E 00 73 00        		.dw '.stabn 0x44,0,371,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         31 00 2C 00
         00 00 00 00
00001934 FE 00 00 00        		.dd LM195-_According_to_SubStatus
00001936 0D 00 0A 00        		.dw 0x0d,0x0a
00009DC6                    	.code
                            	LM195:
00009DC6 11 93 11 06        		R1=[_Segment]	// QImode move
00009DC8 01 95              		R2=R1	// QImode move
00009DC9 42 93              		R1=R2 lsl 1
00009DCA 09 05 FF FF        		R2=R1+(-1)
00009DCC 02 97              		R3=R2	// QImode move
00009DCD 43 93              		R1=R3 lsl 1
00009DCE 0B 97 1D 06        		R3=_Buffer	// QImode move
00009DD0 03 95              		R2=R3	// QImode move
00009DD1 01 05              		R2+=R1	// addqi3_r0r
00009DD2 02 93              		R1=R2	// QImode move
00009DD3 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009DD4 C9 98              		R4=[R1--]
00009DD5 1B D7 17 06        		[_Addr0]=R3	// HImode [Label]=RS
00009DD7 1C D9 18 06        		[_Addr0+1]=R4
00001938                    	.debug
00001938 2E 00 73 00        		.dw '.stabn 0x44,0,372,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         32 00 2C 00
         00 00 00 00
0000194C 11 01 00 00        		.dd LM196-_According_to_SubStatus
0000194E 0D 00 0A 00        		.dw 0x0d,0x0a
00009DD9                    	.code
                            	LM196:
00009DD9 11 93 11 06        		R1=[_Segment]	// QImode move
00009DDB 01 95              		R2=R1	// QImode move
00009DDC 4A 93              		R1=R2 lsl 2
00009DDD 0B 97 1D 06        		R3=_Buffer	// QImode move
00009DDF 03 95              		R2=R3	// QImode move
00009DE0 01 05              		R2+=R1	// addqi3_r0r
00009DE1 02 93              		R1=R2	// QImode move
00009DE2 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00009DE3 C9 98              		R4=[R1--]
00009DE4 1B D7 19 06        		[_Addr1]=R3	// HImode [Label]=RS
00009DE6 1C D9 1A 06        		[_Addr1+1]=R4
00001950                    	.debug
00001950 2E 00 73 00        		.dw '.stabn 0x44,0,373,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         33 00 2C 00
         00 00 00 00
00001964 20 01 00 00        		.dd LM197-_According_to_SubStatus
00001966 0D 00 0A 00        		.dw 0x0d,0x0a
00009DE8                    	.code
                            	LM197:
00009DE8 11 93 17 06        		R1=[_Addr0]	// HImode RD=[Label]
00009DEA 12 95 18 06        		R2=[_Addr0+1]
00009DEC 19 D3 15 06        		[_Addr]=R1	// HImode [Label]=RS
00009DEE 1A D5 16 06        		[_Addr+1]=R2
                            	L112:
00009DF0 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009DF2 12 95 16 06        		R2=[_Addr+1]
00009DF4 13 97 19 06        		R3=[_Addr1]	// HImode RD=[Label]
00009DF6 14 99 1A 06        		R4=[_Addr1+1]
00009DF8 04 45              		CMP R2,R4	// HImode compare
00009DF9 05 9E              		JA  L134	// HImode LEU
00009DFA 02 4E              		JNZ L133
00009DFB 03 43              		CMP R1,R3
00009DFC 02 9E              		JA  L134
                            	L133:
00009DFD 0F 9F 01 9E        		PC=L115
                            	L134:
00009DFF 0F 9F 1F 9E        		pc=L113	// jump
                            	L115:
00001968                    	.debug
00001968 2E 00 73 00        		.dw '.stabn 0x44,0,375,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         35 00 2C 00
         00 00 00 00
0000197C 39 01 00 00        		.dd LM198-_According_to_SubStatus
0000197E 0D 00 0A 00        		.dw 0x0d,0x0a
00009E01                    	.code
                            	LM198:
                            	LBB12:
00009E01 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009E03 12 95 16 06        		R2=[_Addr+1]
00009E05 90 D4              		push R1,R2 to [sp]	// pushhi
00009E06 40 F0 5A A0        		call _SP_SIOReadAByte	// call with return value
00009E08 42 00              		SP=SP+2
00009E09 19 D3 0F 06        		[_Ret]=R1	// QImode move
00001980                    	.debug
00001980 2E 00 73 00        		.dw '.stabn 0x44,0,376,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         36 00 2C 00
         00 00 00 00
00001994 43 01 00 00        		.dd LM199-_According_to_SubStatus
00001996 0D 00 0A 00        		.dw 0x0d,0x0a
00009E0B                    	.code
                            	LM199:
00009E0B 11 93 0F 06        		R1=[_Ret]	// QImode move
00009E0D C8 D2              		[SP--]=R1	// QImode move
00009E0E 40 F0 C0 A3        		call _SP_UartSentByte	// call with return value
00009E10 41 00              		SP=SP+1
00001998                    	.debug
00001998 2E 00 73 00        		.dw '.stabn 0x44,0,377,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         37 00 2C 00
         00 00 00 00
000019AC 49 01 00 00        		.dd LM200-_According_to_SubStatus
000019AE 0D 00 0A 00        		.dw 0x0d,0x0a
00009E11                    	.code
                            	LM200:
                            	LBE12:
000019B0                    	.debug
000019B0 2E 00 73 00        		.dw '.stabn 0x44,0,373,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         33 00 2C 00
         00 00 00 00
000019C4 49 01 00 00        		.dd LM201-_According_to_SubStatus
000019C6 0D 00 0A 00        		.dw 0x0d,0x0a
00009E11                    	.code
                            	LM201:
                            	L114:
00009E11 11 93 15 06        		R1=[_Addr]	// HImode RD=[Label]
00009E13 12 95 16 06        		R2=[_Addr+1]
00009E15 09 07 01 00        		R3=R1+1	// HImode RD=RS+#IMM16
00009E17 0A 19 00 00        		R4=R2+0, Carry
00009E19 1B D7 15 06        		[_Addr]=R3	// HImode [Label]=RS
00009E1B 1C D9 16 06        		[_Addr+1]=R4
00009E1D 0F 9F F0 9D        		pc=L112	// jump
                            	L113:
000019C8                    	.debug
000019C8 2E 00 73 00        		.dw '.stabn 0x44,0,378,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         38 00 2C 00
         00 00 00 00
000019DC 57 01 00 00        		.dd LM202-_According_to_SubStatus
000019DE 0D 00 0A 00        		.dw 0x0d,0x0a
00009E1F                    	.code
                            	LM202:
00009E1F 41 92              		R1=1	// QImode move
00009E20 19 D3 13 06        		[_BaseType]=R1	// QImode move
000019E0                    	.debug
000019E0 2E 00 73 00        		.dw '.stabn 0x44,0,379,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         39 00 2C 00
         00 00 00 00
000019F4 5A 01 00 00        		.dd LM203-_According_to_SubStatus
000019F6 0D 00 0A 00        		.dw 0x0d,0x0a
00009E22                    	.code
                            	LM203:
00009E22 40 92              		R1=0	// QImode move
00009E23 19 D3 14 06        		[_SubStatus]=R1	// QImode move
000019F8                    	.debug
000019F8 2E 00 73 00        		.dw '.stabn 0x44,0,380,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         30 00 2C 00
         00 00 00 00
00001A0C 5D 01 00 00        		.dd LM204-_According_to_SubStatus
00001A0E 0D 00 0A 00        		.dw 0x0d,0x0a
00009E25                    	.code
                            	LM204:
00009E25 40 F0 F9 A4        		call _Open_Interrupt	// call with return value
00001A10                    	.debug
00001A10 2E 00 73 00        		.dw '.stabn 0x44,0,381,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         31 00 2C 00
         00 00 00 00
00001A24 5F 01 00 00        		.dd LM205-_According_to_SubStatus
00001A26 0D 00 0A 00        		.dw 0x0d,0x0a
00009E27                    	.code
                            	LM205:
00009E27 0F 9F 58 9E        		pc=L94	// jump
                            	L116:
                            	L117:
00001A28                    	.debug
00001A28 2E 00 73 00        		.dw '.stabn 0x44,0,384,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         34 00 2C 00
         00 00 00 00
00001A3C 61 01 00 00        		.dd LM206-_According_to_SubStatus
00001A3E 0D 00 0A 00        		.dw 0x0d,0x0a
00009E29                    	.code
                            	LM206:
00009E29 72 92              		R1=50	// QImode move
00009E2A 19 D3 10 06        		[_i]=R1	// QImode move
00001A40                    	.debug
00001A40 2E 00 73 00        		.dw '.stabn 0x44,0,385,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         35 00 2C 00
         00 00 00 00
00001A54 64 01 00 00        		.dd LM207-_According_to_SubStatus
00001A56 0D 00 0A 00        		.dw 0x0d,0x0a
00009E2C                    	.code
                            	LM207:
                            	L118:
00009E2C 12 95 10 06        		R2=[_i]	// QImode move
00009E2E 0A 03 FF FF        		R1=R2+(-1)
00009E30 01 95              		R2=R1	// QImode move
00009E31 1A D5 10 06        		[_i]=R2	// QImode move
00009E33 0A 45 FF FF        		CMP R2,(-1)	// QImode compare
00009E35 02 5E              		JZ L135	// QImode NE
00009E36 0F 9F 3A 9E        		PC=L120
                            	L135:
00009E38 0F 9F 56 9E        		pc=L119	// jump
                            	L120:
00001A58                    	.debug
00001A58 2E 00 73 00        		.dw '.stabn 0x44,0,387,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         37 00 2C 00
         00 00 00 00
00001A6C 72 01 00 00        		.dd LM208-_According_to_SubStatus
00001A6E 0D 00 0A 00        		.dw 0x0d,0x0a
00009E3A                    	.code
                            	LM208:
                            	LBB13:
00009E3A 11 93 13 06        		R1=[_BaseType]	// QImode move
00009E3C 40 42              		CMP R1,0	// QImode test
00009E3D 02 4E              		JNZ L136	// QImode EQ
00009E3E 0F 9F 4B 9E        		PC=L121
                            	L136:
00001A70                    	.debug
00001A70 2E 00 73 00        		.dw '.stabn 0x44,0,388,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         38 00 2C 00
         00 00 00 00
00001A84 78 01 00 00        		.dd LM209-_According_to_SubStatus
00001A86 0D 00 0A 00        		.dw 0x0d,0x0a
00009E40                    	.code
                            	LM209:
00009E40 09 93 00 3F        		R1=16128	// QImode move
00009E42 C8 D2              		[SP--]=R1	// QImode move
00009E43 09 93 00 70        		R1=28672	// QImode move
00009E45 C8 D2              		[SP--]=R1	// QImode move
00009E46 40 F0 1A A0        		call _SP_Export	// call with return value
00009E48 42 00              		SP=SP+2
00009E49 0F 9F 54 9E        		pc=L122	// jump
                            	L121:
00001A88                    	.debug
00001A88 2E 00 73 00        		.dw '.stabn 0x44,0,390,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         30 00 2C 00
         00 00 00 00
00001A9C 83 01 00 00        		.dd LM210-_According_to_SubStatus
00001A9E 0D 00 0A 00        		.dw 0x0d,0x0a
00009E4B                    	.code
                            	LM210:
00009E4B 09 63 00 04        		R1=(-1024)	// QImode move
00009E4D C8 D2              		[SP--]=R1	// QImode move
00009E4E 09 93 00 70        		R1=28672	// QImode move
00009E50 C8 D2              		[SP--]=R1	// QImode move
00009E51 40 F0 1A A0        		call _SP_Export	// call with return value
00009E53 42 00              		SP=SP+2
                            	L122:
00001AA0                    	.debug
00001AA0 2E 00 73 00        		.dw '.stabn 0x44,0,391,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         31 00 2C 00
         00 00 00 00
00001AB4 8C 01 00 00        		.dd LM211-_According_to_SubStatus
00001AB6 0D 00 0A 00        		.dw 0x0d,0x0a
00009E54                    	.code
                            	LM211:
                            	LBE13:
00009E54 0F 9F 2C 9E        		pc=L118	// jump
                            	L119:
00001AB8                    	.debug
00001AB8 2E 00 73 00        		.dw '.stabn 0x44,0,392,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         32 00 2C 00
         00 00 00 00
00001ACC 8E 01 00 00        		.dd LM212-_According_to_SubStatus
00001ACE 0D 00 0A 00        		.dw 0x0d,0x0a
00009E56                    	.code
                            	LM212:
00009E56 0F 9F 58 9E        		pc=L94	// jump
                            	L94:
00001AD0                    	.debug
00001AD0 2E 00 73 00        		.dw '.stabn 0x44,0,394,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         34 00 2C 00
         00 00 00 00
00001AE4 90 01 00 00        		.dd LM213-_According_to_SubStatus
00001AE6 0D 00 0A 00        		.dw 0x0d,0x0a
00009E58                    	.code
                            	LM213:
                            	LBE7:
00001AE8                    	.debug
00001AE8 2E 00 73 00        		.dw '.stabn 0x44,0,394,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         34 00 2C 00
         00 00 00 00
00001AFC 90 01 00 00        		.dd LM214-_According_to_SubStatus
00001AFE 0D 00 0A 00        		.dw 0x0d,0x0a
00009E58                    	.code
                            	LM214:
                            	L93:
                            	
00009E58 41 00              		sp+=1
00009E59 88 98              		pop bp from [sp]
00009E5A 90 9A              		retf
                            		.endp	// end of According_to_SubStatus
                            	
00001B00                    	.debug
00001B00 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B12 07 00 00 00        		.dd LBB7-_According_to_SubStatus
00001B14 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001B16                    	.debug
00001B16 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B28 22 00 00 00        		.dd LBB8-_According_to_SubStatus
00001B2A 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001B2C                    	.debug
00001B2C 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B3E 45 00 00 00        		.dd LBE8-_According_to_SubStatus
00001B40 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001B42                    	.debug
00001B42 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B54 5A 00 00 00        		.dd LBB9-_According_to_SubStatus
00001B56 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001B58                    	.debug
00001B58 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B6A 5E 00 00 00        		.dd LBE9-_According_to_SubStatus
00001B6C 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001B6E                    	.debug
00001B6E 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B80 6F 00 00 00        		.dd LBB10-_According_to_SubStatus
00001B82 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001B84                    	.debug
00001B84 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B96 73 00 00 00        		.dd LBE10-_According_to_SubStatus
00001B98 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001B9A                    	.debug
00001B9A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001BAC B6 00 00 00        		.dd LBB11-_According_to_SubStatus
00001BAE 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001BB0                    	.debug
00001BB0 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001BC2 BA 00 00 00        		.dd LBE11-_According_to_SubStatus
00001BC4 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001BC6                    	.debug
00001BC6 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001BD8 39 01 00 00        		.dd LBB12-_According_to_SubStatus
00001BDA 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001BDC                    	.debug
00001BDC 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001BEE 49 01 00 00        		.dd LBE12-_According_to_SubStatus
00001BF0 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001BF2                    	.debug
00001BF2 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001C04 72 01 00 00        		.dd LBB13-_According_to_SubStatus
00001C06 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001C08                    	.debug
00001C08 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001C1A 8C 01 00 00        		.dd LBE13-_According_to_SubStatus
00001C1C 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001C1E                    	.debug
00001C1E 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001C30 90 01 00 00        		.dd LBE7-_According_to_SubStatus
00001C32 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
00001C34                    	.debug
00001C34 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001C3D 93 01 00 00        		.dd LME8-_According_to_SubStatus
00001C3F 0D 00 0A 00        		.dw 0x0d,0x0a
00009E5B                    	.code
                            	LME8:
00001C41                    	.debug
00001C41 2E 00 73 00        		.dw '.stabs "Keycode:G4",32,0,0,',0,0,offset _Keycode,seg _Keycode,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 63 00
         6F 00 64 00
         65 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
0000060E                    	.ram
                            	.public _Keycode
                            	_Keycode:
0000060E 00 00              		.dw 0
00001C62                    	.debug
00001C62 2E 00 73 00        		.dw '.stabs "Ret:G4",32,0,0,',0,0,offset _Ret,seg _Ret,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 01 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
0000060F                    	.ram
                            	.public _Ret
                            	_Ret:
0000060F 00 00              		.dw 0
00001C7F                    	.debug
00001C7F 2E 00 73 00        		.dw '.stabs "i:G4",32,0,0,',0,0,offset _i,seg _i,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 02 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
00000610                    	.ram
                            	.public _i
                            	_i:
00000610 00 00              		.dw 0
00001C9A                    	.debug
00001C9A 2E 00 73 00        		.dw '.stabs "Segment:G4",32,0,0,',0,0,offset _Segment,seg _Segment,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 65 00
         67 00 6D 00
         65 00 6E 00
         74 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 03 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
00000611                    	.ram
                            	.public _Segment
                            	_Segment:
00000611 00 00              		.dw 0
00001CBB                    	.debug
00001CBB 2E 00 73 00        		.dw '.stabs "internal_addr:G4",32,0,0,',0,0,offset _internal_addr,seg _internal_addr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 65 00
         72 00 6E 00
         61 00 6C 00
         5F 00 61 00
         64 00 64 00
         72 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 04 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
00000612                    	.ram
                            	.public _internal_addr
                            	_internal_addr:
00000612 00 00              		.dw 0
00001CE2                    	.debug
00001CE2 2E 00 73 00        		.dw '.stabs "BaseType:G4",32,0,0,',0,0,offset _BaseType,seg _BaseType,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 61 00
         73 00 65 00
         54 00 79 00
         70 00 65 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         05 00 00 00
         0D 00 0A 00
00009E5B                    	.CODE
00000613                    	.ram
                            	.public _BaseType
                            	_BaseType:
00000613 00 00              		.dw 0
00001D04                    	.debug
00001D04 2E 00 73 00        		.dw '.stabs "SubStatus:G4",32,0,0,',0,0,offset _SubStatus,seg _SubStatus,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 75 00
         62 00 53 00
         74 00 61 00
         74 00 75 00
         73 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 06 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
00000614                    	.ram
                            	.public _SubStatus
                            	_SubStatus:
00000614 00 00              		.dw 0
00001D27                    	.debug
00001D27 2E 00 73 00        		.dw '.stabs "Addr:G5",32,0,0,',0,0,offset _Addr,seg _Addr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         3A 00 47 00
         35 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         07 00 00 00
         0D 00 0A 00
00009E5B                    	.CODE
00000615                    	.ram
                            	.public _Addr
                            	_Addr:
00000615 00 00 00 00        		.dw 2 dup(0)
00001D45                    	.debug
00001D45 2E 00 73 00        		.dw '.stabs "Addr0:G5",32,0,0,',0,0,offset _Addr0,seg _Addr0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         30 00 3A 00
         47 00 35 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 09 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
00000617                    	.ram
                            	.public _Addr0
                            	_Addr0:
00000617 00 00 00 00        		.dw 2 dup(0)
00001D64                    	.debug
00001D64 2E 00 73 00        		.dw '.stabs "Addr1:G5",32,0,0,',0,0,offset _Addr1,seg _Addr1,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         31 00 3A 00
         47 00 35 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0B 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
00000619                    	.ram
                            	.public _Addr1
                            	_Addr1:
00000619 00 00 00 00        		.dw 2 dup(0)
00001D83                    	.debug
00001D83 2E 00 73 00        		.dw '.stabs "Tem:G5",32,0,0,',0,0,offset _Tem,seg _Tem,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 3A 00
         47 00 35 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0D 00
         00 00 0D 00
         0A 00      
00009E5B                    	.CODE
0000061B                    	.ram
                            	.public _Tem
                            	_Tem:
0000061B 00 00 00 00        		.dw 2 dup(0)
00001DA0                    	.debug
00001DA0 2E 00 73 00        		.dw '.stabs "Buffer:G22=ar1;0;20;5",32,0,0,',0,0,offset _Buffer,seg _Buffer,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 75 00
         66 00 66 00
         65 00 72 00
         3A 00 47 00
         32 00 32 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 32 00
         30 00 3B 00
         35 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         0F 00 00 00
         0D 00 0A 00
00009E5B                    	.CODE
0000061D                    	.ram
                            	.public _Buffer
                            	_Buffer:
0000061D 00 00 00 00        		.dw 42 dup(0)
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
                            	.external _SP_Export
                            	.external _SP_UartSentByte
                            	.external _SP_SIOReadAByte
                            	.external _UART_Download
                            	.external _SACM_DVR_Decode
                            	.external _SACM_DVR_Status
                            	.external _SACM_DVR_Encode
                            	.external _Open_Interrupt
                            	.external _SP_SIOMassErase
                            	.external _SP_UART_Init
                            	.external _Close_Interrupt
                            	.external _SACM_DVR_InitEncoder
                            	.external _SACM_DVR_InitDecoder
                            	.external _SACM_DVR_FillQueue
                            	.external _SP_SIOReadAWord
                            	.external _SACM_DVR_InitQueue
                            	.external _SP_SIOSendAWord
                            	.external _SACM_DVR_FetchQueue
                            	.external _SACM_DVR_TestQueue
                            	.external _SP_RampUpDAC2
                            	.external _SP_RampUpDAC1
                            	.external _SACM_DVR_Stop
                            	.external _SP_WriteWord
                            	.external _SP_PageErase
                            	.external _F_Key_Scan
                            	.external _SACM_DVR_Initial
                            	.external _System_Initial
                            	.external _SP_ReadWord
                            	.external __lshiu2
                            		.end
0 error(s), 0 warning(s).

