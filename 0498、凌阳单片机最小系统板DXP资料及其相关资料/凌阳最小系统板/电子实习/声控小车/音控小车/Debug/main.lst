Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: C:\PROGRA~1\Sunplus\UNSPID~1.0\cc1.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccWabaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -mglobal-var-iram -gstabs -o .\Debug/main.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "F:/NEW ¹âÅÌ×ÊÁÏ/ÁèÑô×îÐ¡ÏµÍ³°å/µç×ÓÊµÏ°/Éù¿ØÐ¡³µ/Òô¿ØÐ¡³µ/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 4E 00
         45 00 57 00
         20 00 B9 00
         E2 00 C5 00
         CC 00 D7 00
         CA 00 C1 00
         CF 00 2F 00
         C1 00 E8 00
         D1 00 F4 00
         D7 00 EE 00
         D0 00 A1 00
         CF 00 B5 00
         CD 00 B3 00
         B0 00 E5 00
         2F 00 B5 00
         E7 00 D7 00
         D3 00 CA 00
         B5 00 CF 00
         B0 00 2F 00
         C9 00 F9 00
         BF 00 D8 00
         D0 00 A1 00
         B3 00 B5 00
         2F 00 D2 00
         F4 00 BF 00
         D8 00 D0 00
         A1 00 B3 00
         B5 00 2F 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
0000B6E8                    	.code
00000053                    	.debug
00000053 2E 00 73 00        		.dw '.stabs "F:/NEW ¹/342Å/314×/312Á/317/Á/350Ñ/364×/356Ð/241Ï/265Í/263°/345/µ/347×/323Ê/265Ï/260/É/371¿/330Ð/241³/265/Ò/364¿/330Ð/241³/265/main.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 4E 00
         45 00 57 00
         20 00 B9 00
         2F 00 33 00
         34 00 32 00
         C5 00 2F 00
         33 00 31 00
         34 00 D7 00
         2F 00 33 00
         31 00 32 00
         C1 00 2F 00
         33 00 31 00
         37 00 2F 00
         C1 00 2F 00
         33 00 35 00
         30 00 D1 00
         2F 00 33 00
         36 00 34 00
         D7 00 2F 00
         33 00 35 00
         36 00 D0 00
         2F 00 32 00
         34 00 31 00
         CF 00 2F 00
         32 00 36 00
         35 00 CD 00
         2F 00 32 00
         36 00 33 00
         B0 00 2F 00
         33 00 34 00
         35 00 2F 00
         B5 00 2F 00
         33 00 34 00
         37 00 D7 00
         2F 00 33 00
         32 00 33 00
         CA 00 2F 00
         32 00 36 00
         35 00 CF 00
         2F 00 32 00
         36 00 30 00
         2F 00 C9 00
         2F 00 33 00
         37 00 31 00
         BF 00 2F 00
         33 00 33 00
         30 00 D0 00
         2F 00 32 00
         34 00 31 00
         B3 00 2F 00
         32 00 36 00
         35 00 2F 00
         D2 00 2F 00
         33 00 36 00
         34 00 BF 00
         2F 00 33 00
         33 00 30 00
         D0 00 2F 00
         32 00 34 00
         31 00 B3 00
         2F 00 32 00
         36 00 35 00
         2F 00 6D 00
         61 00 69 00
         6E 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000B6E8                    	.code
0000B6E8                    	.code
                            	Ltext0:
000000F1                    	.debug
000000F1 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
0000011D                    	.debug
0000011D 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
00000143                    	.debug
00000143 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B6E8                    	.CODE
0000017E                    	.debug
0000017E 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
000001AE                    	.debug
000001AE 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
000001E8                    	.debug
000001E8 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
00000228                    	.debug
00000228 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B6E8                    	.CODE
00000267                    	.debug
00000267 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
00000299                    	.debug
00000299 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
000002CF                    	.debug
000002CF 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
00000305                    	.debug
00000305 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B6E8                    	.CODE
00000338                    	.debug
00000338 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
0000035E                    	.debug
0000035E 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B6E8                    	.CODE
00000385                    	.debug
00000385 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
000003B1                    	.debug
000003B1 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B6E8                    	.CODE
000003F2                    	.debug
000003F2 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B6E8                    	.CODE
00000421                    	.debug
00000421 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
00000451                    	.debug
00000451 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B6E8                    	.CODE
00000486                    	.debug
00000486 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B6E8                    	.CODE
000004A6                    	.debug
000004A6 2E 00 73 00        		.dw '.stabs "commandID:G4",32,0,0,',0,0,offset _commandID,seg _commandID,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 6D 00
         61 00 6E 00
         64 00 49 00
         44 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 09 00
         00 00 0D 00
         0A 00      
0000B6E8                    	.CODE
000004C9                    	.debug
000004C9 2E 00 73 00        		.dw '.stabs "g_Ret:G4",32,0,0,',0,0,offset _g_Ret,seg _g_Ret,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 5F 00
         52 00 65 00
         74 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0A 00
         00 00 0D 00
         0A 00      
0000B6E8                    	.CODE
                            	.public _gActivated
000004F1                    	.iram
                            	_gActivated:
000004F1 00 00              		.dw 0
000004E8                    	.debug
000004E8 2E 00 73 00        		.dw '.stabs "gActivated:G1",32,0,0,',0,0,offset _gActivated,seg _gActivated,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 41 00
         63 00 74 00
         69 00 76 00
         61 00 74 00
         65 00 64 00
         3A 00 47 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000B6E8                    	.CODE
                            	.public _gTriggerRespond
000004F2                    	.iram
                            	_gTriggerRespond:
000004F2 09 00              		.dw 9
000004F3 0A 00              		.dw 10
000004F4 09 00              		.dw 9
0000050C                    	.debug
0000050C 2E 00 73 00        		.dw '.stabs "gTriggerRespond:G20=ar1;0;2;1",32,0,0,',0,0,offset _gTriggerRespond,seg _gTriggerRespond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 54 00
         72 00 69 00
         67 00 67 00
         65 00 72 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         47 00 32 00
         30 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         32 00 3B 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         01 00 00 00
         0D 00 0A 00
0000B6E8                    	.CODE
                            	.public _gComm2Respond
000004F5                    	.iram
                            	_gComm2Respond:
000004F5 0B 00              		.dw 11
000004F6 0C 00              		.dw 12
000004F7 0D 00              		.dw 13
00000540                    	.debug
00000540 2E 00 73 00        		.dw '.stabs "gComm2Respond:G21=ar1;0;2;1",32,0,0,',0,0,offset _gComm2Respond,seg _gComm2Respond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 43 00
         6F 00 6D 00
         6D 00 32 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         47 00 32 00
         31 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         32 00 3B 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         04 00 00 00
         0D 00 0A 00
0000B6E8                    	.CODE
                            	.public _PlayFlag
000004F8                    	.iram
                            	_PlayFlag:
000004F8 00 00              		.dw 0
00000572                    	.debug
00000572 2E 00 73 00        		.dw '.stabs "PlayFlag:G1",32,0,0,',0,0,offset _PlayFlag,seg _PlayFlag,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         46 00 6C 00
         61 00 67 00
         3A 00 47 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         07 00 00 00
         0D 00 0A 00
0000B6E8                    	.CODE
                            	.public _uiSpeed
000004F9                    	.iram
                            	_uiSpeed:
000004F9 00 00              		.dw 0
00000594                    	.debug
00000594 2E 00 73 00        		.dw '.stabs "uiSpeed:G4",32,0,0,',0,0,offset _uiSpeed,seg _uiSpeed,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         53 00 70 00
         65 00 65 00
         64 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 08 00
         00 00 0D 00
         0A 00      
0000B6E8                    	.CODE
0000B6E8                    	.code
000005B5                    	.debug
000005B5 2E 00 73 00        		.dw '.stabs "PlayRespond2:F19",36,0,0,',0,0,offset _PlayRespond2,seg _PlayRespond2,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 32 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
0000B6E8                    	.CODE
                            	.public _PlayRespond2
                            	_PlayRespond2:	.proc
000005DC                    	.debug
000005DC 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
000005EF 00 00 00 00        		.dd LM1-_PlayRespond2
000005F1 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6E8                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000B6E8 88 DA              		push bp to [sp]
0000B6E9 41 20              		sp-=1
0000B6EA 08 0B 01 00        		bp=sp+1
                            	
0000B6EC 0D 03 04 00        		R1=BP+4
0000B6EE C5 D2              		[BP]=R1	// QImode move
000005F3                    	.debug
000005F3 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
00000606 07 00 00 00        		.dd LM2-_PlayRespond2
00000608 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6EF                    	.code
                            	LM2:
                            	LBB2:
0000B6EF 40 F0 72 9B        		call _BSR_StopRecognizer	// call without return value
0000060A                    	.debug
0000060A 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
0000061D 09 00 00 00        		.dd LM3-_PlayRespond2
0000061F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6F1                    	.code
                            	LM3:
0000B6F1 41 92              		R1=1	// QImode move
0000B6F2 C8 D2              		[SP--]=R1	// QImode move
0000B6F3 40 F0 4A C5        		call _SACM_A2000_Initial	// call with return value
0000B6F5 41 00              		SP = SP + 1	//SP
00000621                    	.debug
00000621 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
00000634 0E 00 00 00        		.dd LM4-_PlayRespond2
00000636 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6F6                    	.code
                            	LM4:
0000B6F6 43 92              		R1=3	// QImode move
0000B6F7 C8 D2              		[SP--]=R1	// QImode move
0000B6F8 43 92              		R1=3	// QImode move
0000B6F9 C8 D2              		[SP--]=R1	// QImode move
0000B6FA C5 94              		R2=[BP]	// QImode move
0000B6FB C2 92              		R1=[R2]	// QImode move
0000B6FC C8 D2              		[SP--]=R1	// QImode move
0000B6FD 40 F0 C5 C5        		call _SACM_A2000_Play	// call with return value
0000B6FF 43 00              		SP = SP + 3	//SP
00000638                    	.debug
00000638 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
0000064B 18 00 00 00        		.dd LM5-_PlayRespond2
0000064D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B700                    	.code
                            	LM5:
                            	L3:
0000B700 40 F0 D6 C6        		call _SACM_A2000_Status	// call with return value
0000B702 09 B5 01 00        		R2=R1&1
0000B704 40 44              		CMP R2,0	// QImode test
0000B705 04 4E 01 EE        		NSJNZ L5	//QImode NE
         00 EE      
0000B708 0F 9F 10 B7        		pc=L4	// Indirect jump
                            	L5:
0000064F                    	.debug
0000064F 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
00000662 22 00 00 00        		.dd LM6-_PlayRespond2
00000664 0D 00 0A 00        		.dw 0x0d,0x0a
0000B70A                    	.code
                            	LM6:
                            	LBB3:
0000B70A 40 F0 C2 C7        		call _SACM_A2000_ServiceLoop	// call with return value
00000666                    	.debug
00000666 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
00000679 24 00 00 00        		.dd LM7-_PlayRespond2
0000067B 0D 00 0A 00        		.dw 0x0d,0x0a
0000B70C                    	.code
                            	LM7:
0000B70C 40 F0 53 CD        		call _ClearWatchDog	// call without return value
0000067D                    	.debug
0000067D 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00000690 26 00 00 00        		.dd LM8-_PlayRespond2
00000692 0D 00 0A 00        		.dw 0x0d,0x0a
0000B70E                    	.code
                            	LM8:
                            	LBE3:
0000B70E 0F 9F 00 B7        		pc=L3	// Indirect jump
                            	L4:
00000694                    	.debug
00000694 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
000006A7 28 00 00 00        		.dd LM9-_PlayRespond2
000006A9 0D 00 0A 00        		.dw 0x0d,0x0a
0000B710                    	.code
                            	LM9:
0000B710 40 F0 73 C6        		call _SACM_A2000_Stop	// call with return value
000006AB                    	.debug
000006AB 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
000006BE 2A 00 00 00        		.dd LM10-_PlayRespond2
000006C0 0D 00 0A 00        		.dw 0x0d,0x0a
0000B712                    	.code
                            	LM10:
0000B712 40 92              		R1=0	// QImode move
0000B713 C8 D2              		[SP--]=R1	// QImode move
0000B714 40 F0 7F 9B        		call _BSR_InitRecognizer	// call with return value
0000B716 41 00              		SP = SP + 1	//SP
000006C2                    	.debug
000006C2 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
000006D5 2F 00 00 00        		.dd LM11-_PlayRespond2
000006D7 0D 00 0A 00        		.dw 0x0d,0x0a
0000B717                    	.code
                            	LM11:
0000B717 40 F0 40 9B        		call _BSR_EnableCPUIndicator	// call without return value
000006D9                    	.debug
000006D9 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
000006EC 31 00 00 00        		.dd LM12-_PlayRespond2
000006EE 0D 00 0A 00        		.dw 0x0d,0x0a
0000B719                    	.code
                            	LM12:
                            	LBE2:
000006F0                    	.debug
000006F0 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
00000703 31 00 00 00        		.dd LM13-_PlayRespond2
00000705 0D 00 0A 00        		.dw 0x0d,0x0a
0000B719                    	.code
                            	LM13:
                            	L2:
                            	
0000B719 41 00              		sp+=1
0000B71A 88 98              		pop bp from [sp]
0000B71B 90 9A              		retf
                            		.endp	// end of PlayRespond2
                            	
00000707                    	.debug
00000707 2E 00 73 00        		.dw '.stabs "Result:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 75 00
         6C 00 74 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000B71C                    	.CODE
00000725                    	.debug
00000725 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000737 07 00 00 00        		.dd LBB2-_PlayRespond2
00000739 0D 00 0A 00        		.dw 0x0d,0x0a
0000B71C                    	.code
0000073B                    	.debug
0000073B 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000074D 22 00 00 00        		.dd LBB3-_PlayRespond2
0000074F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B71C                    	.code
00000751                    	.debug
00000751 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000763 26 00 00 00        		.dd LBE3-_PlayRespond2
00000765 0D 00 0A 00        		.dw 0x0d,0x0a
0000B71C                    	.code
00000767                    	.debug
00000767 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000779 31 00 00 00        		.dd LBE2-_PlayRespond2
0000077B 0D 00 0A 00        		.dw 0x0d,0x0a
0000B71C                    	.code
0000077D                    	.debug
0000077D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000786 34 00 00 00        		.dd LME1-_PlayRespond2
00000788 0D 00 0A 00        		.dw 0x0d,0x0a
0000B71C                    	.code
                            	LME1:
0000B71C                    	.code
0000078A                    	.debug
0000078A 2E 00 73 00        		.dw '.stabs "PlayRespond:F19",36,0,0,',0,0,offset _PlayRespond,seg _PlayRespond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         34 00 00 00
         0D 00 0A 00
0000B71C                    	.CODE
                            	.public _PlayRespond
                            	_PlayRespond:	.proc
000007B0                    	.debug
000007B0 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000007C3 00 00 00 00        		.dd LM14-_PlayRespond
000007C5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B71C                    	.code
                            	LM14:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000B71C 88 DA              		push bp to [sp]
0000B71D 41 20              		sp-=1
0000B71E 08 0B 01 00        		bp=sp+1
                            	
0000B720 0D 03 04 00        		R1=BP+4
0000B722 C5 D2              		[BP]=R1	// QImode move
000007C7                    	.debug
000007C7 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
000007DA 07 00 00 00        		.dd LM15-_PlayRespond
000007DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B723                    	.code
                            	LM15:
                            	LBB4:
0000B723 40 F0 72 9B        		call _BSR_StopRecognizer	// call without return value
000007DE                    	.debug
000007DE 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
000007F1 09 00 00 00        		.dd LM16-_PlayRespond
000007F3 0D 00 0A 00        		.dw 0x0d,0x0a
0000B725                    	.code
                            	LM16:
0000B725 41 92              		R1=1	// QImode move
0000B726 C8 D2              		[SP--]=R1	// QImode move
0000B727 40 F0 41 BE        		call _SACM_S480_Initial	// call with return value
0000B729 41 00              		SP = SP + 1	//SP
000007F5                    	.debug
000007F5 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00000808 0E 00 00 00        		.dd LM17-_PlayRespond
0000080A 0D 00 0A 00        		.dw 0x0d,0x0a
0000B72A                    	.code
                            	LM17:
0000B72A 43 92              		R1=3	// QImode move
0000B72B C8 D2              		[SP--]=R1	// QImode move
0000B72C 43 92              		R1=3	// QImode move
0000B72D C8 D2              		[SP--]=R1	// QImode move
0000B72E C5 94              		R2=[BP]	// QImode move
0000B72F C2 92              		R1=[R2]	// QImode move
0000B730 C8 D2              		[SP--]=R1	// QImode move
0000B731 40 F0 78 BE        		call _SACM_S480_Play	// call with return value
0000B733 43 00              		SP = SP + 3	//SP
0000080C                    	.debug
0000080C 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
0000081F 18 00 00 00        		.dd LM18-_PlayRespond
00000821 0D 00 0A 00        		.dw 0x0d,0x0a
0000B734                    	.code
                            	LM18:
                            	L8:
0000B734 40 F0 5A BF        		call _SACM_S480_Status	// call with return value
0000B736 09 B5 01 00        		R2=R1&1
0000B738 40 44              		CMP R2,0	// QImode test
0000B739 04 4E 01 EE        		NSJNZ L10	//QImode NE
         00 EE      
0000B73C 0F 9F 44 B7        		pc=L9	// Indirect jump
                            	L10:
00000823                    	.debug
00000823 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
00000836 22 00 00 00        		.dd LM19-_PlayRespond
00000838 0D 00 0A 00        		.dw 0x0d,0x0a
0000B73E                    	.code
                            	LM19:
                            	LBB5:
0000B73E 40 F0 B1 BF        		call _SACM_S480_ServiceLoop	// call with return value
0000083A                    	.debug
0000083A 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
0000084D 24 00 00 00        		.dd LM20-_PlayRespond
0000084F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B740                    	.code
                            	LM20:
0000B740 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00000851                    	.debug
00000851 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00000864 26 00 00 00        		.dd LM21-_PlayRespond
00000866 0D 00 0A 00        		.dw 0x0d,0x0a
0000B742                    	.code
                            	LM21:
                            	LBE5:
0000B742 0F 9F 34 B7        		pc=L8	// Indirect jump
                            	L9:
00000868                    	.debug
00000868 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
0000087B 28 00 00 00        		.dd LM22-_PlayRespond
0000087D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B744                    	.code
                            	LM22:
0000B744 40 F0 10 BF        		call _SACM_S480_Stop	// call with return value
0000087F                    	.debug
0000087F 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
00000892 2A 00 00 00        		.dd LM23-_PlayRespond
00000894 0D 00 0A 00        		.dw 0x0d,0x0a
0000B746                    	.code
                            	LM23:
0000B746 40 92              		R1=0	// QImode move
0000B747 C8 D2              		[SP--]=R1	// QImode move
0000B748 40 F0 7F 9B        		call _BSR_InitRecognizer	// call with return value
0000B74A 41 00              		SP = SP + 1	//SP
00000896                    	.debug
00000896 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
000008A9 2F 00 00 00        		.dd LM24-_PlayRespond
000008AB 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74B                    	.code
                            	LM24:
0000B74B 40 F0 40 9B        		call _BSR_EnableCPUIndicator	// call without return value
000008AD                    	.debug
000008AD 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
000008C0 31 00 00 00        		.dd LM25-_PlayRespond
000008C2 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74D                    	.code
                            	LM25:
                            	LBE4:
000008C4                    	.debug
000008C4 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
000008D7 31 00 00 00        		.dd LM26-_PlayRespond
000008D9 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74D                    	.code
                            	LM26:
                            	L7:
                            	
0000B74D 41 00              		sp+=1
0000B74E 88 98              		pop bp from [sp]
0000B74F 90 9A              		retf
                            		.endp	// end of PlayRespond
                            	
000008DB                    	.debug
000008DB 2E 00 73 00        		.dw '.stabs "Result:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 75 00
         6C 00 74 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000B750                    	.CODE
000008F9                    	.debug
000008F9 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000090B 07 00 00 00        		.dd LBB4-_PlayRespond
0000090D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B750                    	.code
0000090F                    	.debug
0000090F 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000921 22 00 00 00        		.dd LBB5-_PlayRespond
00000923 0D 00 0A 00        		.dw 0x0d,0x0a
0000B750                    	.code
00000925                    	.debug
00000925 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000937 26 00 00 00        		.dd LBE5-_PlayRespond
00000939 0D 00 0A 00        		.dw 0x0d,0x0a
0000B750                    	.code
0000093B                    	.debug
0000093B 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000094D 31 00 00 00        		.dd LBE4-_PlayRespond
0000094F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B750                    	.code
00000951                    	.debug
00000951 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000095A 34 00 00 00        		.dd LME2-_PlayRespond
0000095C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B750                    	.code
                            	LME2:
0000B750                    	.code
0000095E                    	.debug
0000095E 2E 00 73 00        		.dw '.stabs "TrainWord:F1",36,0,0,',0,0,offset _TrainWord,seg _TrainWord,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 72 00
         61 00 69 00
         6E 00 57 00
         6F 00 72 00
         64 00 3A 00
         46 00 31 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 68 00
         00 00 0D 00
         0A 00      
0000B750                    	.CODE
                            	.public _TrainWord
                            	_TrainWord:	.proc
00000981                    	.debug
00000981 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
00000994 00 00 00 00        		.dd LM27-_TrainWord
00000996 0D 00 0A 00        		.dw 0x0d,0x0a
0000B750                    	.code
                            	LM27:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
0000B750 88 DA              		push bp to [sp]
0000B751 42 20              		sp-=2
0000B752 08 0B 01 00        		bp=sp+1
                            	
0000B754 0D 03 05 00        		R1=BP+5
0000B756 01 D2              		[bp+1]=R1	// QImode move
00000998                    	.debug
00000998 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
000009AB 07 00 00 00        		.dd LM28-_TrainWord
000009AD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B757                    	.code
                            	LM28:
                            	LBB6:
000009AF                    	.debug
000009AF 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
000009C2 07 00 00 00        		.dd LM29-_TrainWord
000009C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B757                    	.code
                            	LM29:
0000B757 01 92              		R1=[bp+1]	// QImode move
0000B758 01 96              		R3=[bp+1]	// QImode move
0000B759 0B 05 01 00        		R2=R3+1
0000B75B 02 97              		R3=R2	// QImode move
0000B75C C3 92              		R1=[R3]	// QImode move
0000B75D C8 D2              		[SP--]=R1	// QImode move
0000B75E 40 F0 1C B7        		call _PlayRespond	// call without return value
0000B760 41 00              		SP = SP + 1	//SP
000009C6                    	.debug
000009C6 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
000009D9 11 00 00 00        		.dd LM30-_TrainWord
000009DB 0D 00 0A 00        		.dw 0x0d,0x0a
0000B761                    	.code
                            	LM30:
                            	L13:
0000B761 0F 9F 65 B7        		pc=L15	// Indirect jump
0000B763 0F 9F B8 B7        		pc=L14	// Indirect jump
                            	L15:
000009DD                    	.debug
000009DD 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
000009F0 15 00 00 00        		.dd LM31-_TrainWord
000009F2 0D 00 0A 00        		.dw 0x0d,0x0a
0000B765                    	.code
                            	LM31:
0000B765 40 92              		R1=0	// QImode move
0000B766 C8 D2              		[SP--]=R1	// QImode move
0000B767 01 94              		R2=[bp+1]	// QImode move
0000B768 C2 92              		R1=[R2]	// QImode move
0000B769 C8 D2              		[SP--]=R1	// QImode move
0000B76A 40 F0 F1 87        		call _BSR_Train	// call with return value
0000B76C 42 00              		SP = SP + 2	//SP
0000B76D C5 D2              		[BP]=R1	// QImode move
000009F4                    	.debug
000009F4 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
00000A07 1E 00 00 00        		.dd LM32-_TrainWord
00000A09 0D 00 0A 00        		.dw 0x0d,0x0a
0000B76E                    	.code
                            	LM32:
0000B76E C5 92              		R1=[BP]	// QImode move
0000B76F 40 42              		CMP R1,0	// QImode test
0000B770 04 4E 01 EE        		NSJNZ L16	//QImode NE
         00 EE      
0000B773 0F 9F B8 B7        		pc=L14	// Indirect jump
                            	L16:
00000A0B                    	.debug
00000A0B 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000A1E 25 00 00 00        		.dd LM33-_TrainWord
00000A20 0D 00 0A 00        		.dw 0x0d,0x0a
0000B775                    	.code
                            	LM33:
0000B775 C5 94              		R2=[BP]	// QImode move
0000B776 02 93              		R1=R2	// QImode move
0000B777 09 23 FA FF        		R1=R1-(-6)
0000B779 45 42              		CMP R1,5	// QImode compare
0000B77A 3B 9E 01 EE        		NSJA L17	//QImode GTU
         00 EE      
0000B77D 0A 95 94 A6        		R2=L26	// QImode move
0000B77F 02 03              		R1 = R1 + R2	//addqi3
0000B780 01 97              		R3=R1	// QImode move
0000B781 C3 92              		R1=[R3]	// QImode move
0000B782 01 9F              		pc=R1	// tablejump
0000A694                    	.text
                            	L26:
0000A694 B3 B7              		.dw L25
0000A695 9D B7              		.dw L22
0000A696 9A B7              		.dw L21
0000A697 92 B7              		.dw L20
0000A698 8B B7              		.dw L19
0000A699 83 B7              		.dw L18
0000B783                    	.code
                            	L18:
00000A22                    	.debug
00000A22 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
00000A35 33 00 00 00        		.dd LM34-_TrainWord
00000A37 0D 00 0A 00        		.dw 0x0d,0x0a
0000B783                    	.code
                            	LM34:
0000B783 45 92              		R1=5	// QImode move
0000B784 C8 D2              		[SP--]=R1	// QImode move
0000B785 40 F0 1C B7        		call _PlayRespond	// call without return value
0000B787 41 00              		SP = SP + 1	//SP
00000A39                    	.debug
00000A39 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000A4C 38 00 00 00        		.dd LM35-_TrainWord
00000A4E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B788                    	.code
                            	LM35:
0000B788 41 62              		R1=(-1)	// QImode move
0000B789 0F 9F BB B7        		pc=L12	// Indirect jump
                            	L19:
00000A50                    	.debug
00000A50 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
00000A63 3B 00 00 00        		.dd LM36-_TrainWord
00000A65 0D 00 0A 00        		.dw 0x0d,0x0a
0000B78B                    	.code
                            	LM36:
0000B78B 44 92              		R1=4	// QImode move
0000B78C C8 D2              		[SP--]=R1	// QImode move
0000B78D 40 F0 1C B7        		call _PlayRespond	// call without return value
0000B78F 41 00              		SP = SP + 1	//SP
00000A67                    	.debug
00000A67 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00000A7A 40 00 00 00        		.dd LM37-_TrainWord
00000A7C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B790                    	.code
                            	LM37:
0000B790 0F 9F B6 B7        		pc=L17	// Indirect jump
                            	L20:
00000A7E                    	.debug
00000A7E 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000A92 42 00 00 00        		.dd LM38-_TrainWord
00000A94 0D 00 0A 00        		.dw 0x0d,0x0a
0000B792                    	.code
                            	LM38:
0000B792 45 92              		R1=5	// QImode move
0000B793 C8 D2              		[SP--]=R1	// QImode move
0000B794 40 F0 1C B7        		call _PlayRespond	// call without return value
0000B796 41 00              		SP = SP + 1	//SP
00000A96                    	.debug
00000A96 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
00000AAA 47 00 00 00        		.dd LM39-_TrainWord
00000AAC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B797                    	.code
                            	LM39:
0000B797 41 62              		R1=(-1)	// QImode move
0000B798 0F 9F BB B7        		pc=L12	// Indirect jump
                            	L21:
00000AAE                    	.debug
00000AAE 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000AC2 4A 00 00 00        		.dd LM40-_TrainWord
00000AC4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B79A                    	.code
                            	LM40:
0000B79A 41 62              		R1=(-1)	// QImode move
0000B79B 0F 9F BB B7        		pc=L12	// Indirect jump
                            	L22:
00000AC6                    	.debug
00000AC6 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000ADA 4D 00 00 00        		.dd LM41-_TrainWord
00000ADC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B79D                    	.code
                            	LM41:
0000B79D 01 94              		R2=[bp+1]	// QImode move
0000B79E C2 92              		R1=[R2]	// QImode move
0000B79F 09 43 00 01        		CMP R1,256	// QImode compare
0000B7A1 09 4E 01 EE        		NSJNZ L23	//QImode NE
         00 EE      
0000B7A4 45 92              		R1=5	// QImode move
0000B7A5 C8 D2              		[SP--]=R1	// QImode move
0000B7A6 40 F0 1C B7        		call _PlayRespond	// call without return value
0000B7A8 41 00              		SP = SP + 1	//SP
0000B7A9 0F 9F B0 B7        		pc=L24	// Indirect jump
                            	L23:
00000ADE                    	.debug
00000ADE 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000AF2 5B 00 00 00        		.dd LM42-_TrainWord
00000AF4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7AB                    	.code
                            	LM42:
0000B7AB 45 92              		R1=5	// QImode move
0000B7AC C8 D2              		[SP--]=R1	// QImode move
0000B7AD 40 F0 1C B7        		call _PlayRespond	// call without return value
0000B7AF 41 00              		SP = SP + 1	//SP
                            	L24:
00000AF6                    	.debug
00000AF6 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00000B0A 60 00 00 00        		.dd LM43-_TrainWord
00000B0C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7B0                    	.code
                            	LM43:
0000B7B0 41 62              		R1=(-1)	// QImode move
0000B7B1 0F 9F BB B7        		pc=L12	// Indirect jump
                            	L25:
00000B0E                    	.debug
00000B0E 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000B22 63 00 00 00        		.dd LM44-_TrainWord
00000B24 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7B3                    	.code
                            	LM44:
0000B7B3 41 62              		R1=(-1)	// QImode move
0000B7B4 0F 9F BB B7        		pc=L12	// Indirect jump
                            	L27:
                            	L17:
00000B26                    	.debug
00000B26 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000B3A 66 00 00 00        		.dd LM45-_TrainWord
00000B3C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7B6                    	.code
                            	LM45:
0000B7B6 0F 9F 61 B7        		pc=L13	// Indirect jump
                            	L14:
00000B3E                    	.debug
00000B3E 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000B52 68 00 00 00        		.dd LM46-_TrainWord
00000B54 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7B8                    	.code
                            	LM46:
0000B7B8 40 92              		R1=0	// QImode move
0000B7B9 0F 9F BB B7        		pc=L12	// Indirect jump
00000B56                    	.debug
00000B56 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
00000B6A 6B 00 00 00        		.dd LM47-_TrainWord
00000B6C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7BB                    	.code
                            	LM47:
                            	LBE6:
00000B6E                    	.debug
00000B6E 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
00000B82 6B 00 00 00        		.dd LM48-_TrainWord
00000B84 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7BB                    	.code
                            	LM48:
                            	L12:
                            	
0000B7BB 42 00              		sp+=2
0000B7BC 88 98              		pop bp from [sp]
0000B7BD 90 9A              		retf
                            		.endp	// end of TrainWord
                            	
00000B86                    	.debug
00000B86 2E 00 73 00        		.dw '.stabs "WordID:p1",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         57 00 6F 00
         72 00 64 00
         49 00 44 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000B7BE                    	.CODE
00000BA4                    	.debug
00000BA4 2E 00 73 00        		.dw '.stabs "RespondID:p1",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 49 00
         44 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000B7BE                    	.CODE
00000BC5                    	.debug
00000BC5 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000BD7 07 00 00 00        		.dd LBB6-_TrainWord
00000BD9 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7BE                    	.code
00000BDB                    	.debug
00000BDB 2E 00 73 00        		.dw '.stabs "res:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         73 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B7BE                    	.CODE
00000BF5                    	.debug
00000BF5 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000C07 6B 00 00 00        		.dd LBE6-_TrainWord
00000C09 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7BE                    	.code
00000C0B                    	.debug
00000C0B 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000C14 6E 00 00 00        		.dd LME3-_TrainWord
00000C16 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7BE                    	.code
                            	LME3:
0000B7BE                    	.code
00000C18                    	.debug
00000C18 2E 00 73 00        		.dw '.stabs "F_GoAheadCtr:F19",36,0,0,',0,0,offset _F_GoAheadCtr,seg _F_GoAheadCtr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 5F 00
         47 00 6F 00
         41 00 68 00
         65 00 61 00
         64 00 43 00
         74 00 72 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 D6 00
         00 00 0D 00
         0A 00      
0000B7BE                    	.CODE
                            	.public _F_GoAheadCtr
                            	_F_GoAheadCtr:	.proc
00000C3F                    	.debug
00000C3F 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00000C53 00 00 00 00        		.dd LM49-_F_GoAheadCtr
00000C55 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7BE                    	.code
                            	LM49:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
0000B7BE 88 DA              		push bp to [sp]
0000B7BF 43 20              		sp-=3
0000B7C0 08 0B 01 00        		bp=sp+1
                            	
0000B7C2 0D 03 06 00        		R1=BP+6
0000B7C4 02 D2              		[bp+2]=R1	// QImode move
00000C57                    	.debug
00000C57 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000C6B 07 00 00 00        		.dd LM50-_F_GoAheadCtr
00000C6D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7C5                    	.code
                            	LM50:
                            	LBB7:
00000C6F                    	.debug
00000C6F 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000C83 07 00 00 00        		.dd LM51-_F_GoAheadCtr
00000C85 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7C5                    	.code
                            	LM51:
0000B7C5 05 93              		R1=BP	// QImode move
0000B7C6 0D 05 01 00        		R2=BP+1
0000B7C8 40 92              		R1=0	// QImode move
0000B7C9 02 97              		R3=R2	// QImode move
0000B7CA C3 D2              		[R3]=R1	// QImode move
                            	L32:
0000B7CB 05 93              		R1=BP	// QImode move
0000B7CC 0D 05 01 00        		R2=BP+1
0000B7CE 02 99              		R4=R2	// QImode move
0000B7CF C4 92              		R1=[R4]	// QImode move
0000B7D0 02 94              		R2=[bp+2]	// QImode move
0000B7D1 C2 42              		CMP R1,[R2]	// QImode compare
0000B7D2 04 3E 01 EE        		NSJL L35	//QImode LT
         00 EE      
0000B7D5 0F 9F 07 B8        		pc=L33	// Indirect jump
                            	L35:
00000C87                    	.debug
00000C87 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
00000C9B 19 00 00 00        		.dd LM52-_F_GoAheadCtr
00000C9D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7D7                    	.code
                            	LM52:
                            	LBB8:
0000B7D7 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00000C9F                    	.debug
00000C9F 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000CB3 1B 00 00 00        		.dd LM53-_F_GoAheadCtr
00000CB5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7D9                    	.code
                            	LM53:
0000B7D9 C5 96              		R3=[BP]	// QImode move
0000B7DA 0B B7 C0 00        		R3=R3&192
0000B7DC C5 D6              		[BP]=R3	// QImode move
00000CB7                    	.debug
00000CB7 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000CCB 1F 00 00 00        		.dd LM54-_F_GoAheadCtr
00000CCD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7DD                    	.code
                            	LM54:
0000B7DD C5 98              		R4=[BP]	// QImode move
0000B7DE 0C A9 00 28        		R4=R4|10240
0000B7E0 C5 D8              		[BP]=R4	// QImode move
00000CCF                    	.debug
00000CCF 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
00000CE3 23 00 00 00        		.dd LM55-_F_GoAheadCtr
00000CE5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7E1                    	.code
                            	LM55:
0000B7E1 C5 92              		R1=[BP]	// QImode move
0000B7E2 19 D3 05 70        		[28677]=R1	// QImode move
00000CE7                    	.debug
00000CE7 2E 00 73 00        		.dw '.stabn 0x44,0,124,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         34 00 2C 00
         00 00 00 00
00000CFB 26 00 00 00        		.dd LM56-_F_GoAheadCtr
00000CFD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7E4                    	.code
                            	LM56:
0000B7E4 09 93 5A 00        		R1=90	// QImode move
0000B7E6 C8 D2              		[SP--]=R1	// QImode move
0000B7E7 40 F0 76 CD        		call _F_Delay	// call with return value
0000B7E9 41 00              		SP = SP + 1	//SP
00000CFF                    	.debug
00000CFF 2E 00 73 00        		.dw '.stabn 0x44,0,125,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         35 00 2C 00
         00 00 00 00
00000D13 2C 00 00 00        		.dd LM57-_F_GoAheadCtr
00000D15 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7EA                    	.code
                            	LM57:
0000B7EA C5 92              		R1=[BP]	// QImode move
0000B7EB 09 B3 C0 00        		R1=R1&192
0000B7ED C5 D2              		[BP]=R1	// QImode move
00000D17                    	.debug
00000D17 2E 00 73 00        		.dw '.stabn 0x44,0,127,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         37 00 2C 00
         00 00 00 00
00000D2B 30 00 00 00        		.dd LM58-_F_GoAheadCtr
00000D2D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7EE                    	.code
                            	LM58:
0000B7EE C5 92              		R1=[BP]	// QImode move
0000B7EF 19 D3 05 70        		[28677]=R1	// QImode move
00000D2F                    	.debug
00000D2F 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000D43 33 00 00 00        		.dd LM59-_F_GoAheadCtr
00000D45 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7F1                    	.code
                            	LM59:
0000B7F1 7C 92              		R1=60	// QImode move
0000B7F2 C8 D2              		[SP--]=R1	// QImode move
0000B7F3 40 F0 76 CD        		call _F_Delay	// call with return value
0000B7F5 41 00              		SP = SP + 1	//SP
00000D47                    	.debug
00000D47 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
00000D5B 38 00 00 00        		.dd LM60-_F_GoAheadCtr
00000D5D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7F6                    	.code
                            	LM60:
                            	LBE8:
00000D5F                    	.debug
00000D5F 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000D73 38 00 00 00        		.dd LM61-_F_GoAheadCtr
00000D75 0D 00 0A 00        		.dw 0x0d,0x0a
0000B7F6                    	.code
                            	LM61:
                            	L34:
0000B7F6 05 93              		R1=BP	// QImode move
0000B7F7 0D 05 01 00        		R2=BP+1
0000B7F9 05 97              		R3=BP	// QImode move
0000B7FA 0D 03 01 00        		R1=BP+1
0000B7FC 05 95              		R2=BP	// QImode move
0000B7FD 0D 07 01 00        		R3=BP+1
0000B7FF 03 99              		R4=R3	// QImode move
0000B800 C4 94              		R2=[R4]	// QImode move
0000B801 0A 07 01 00        		R3=R2+1
0000B803 01 95              		R2=R1	// QImode move
0000B804 C2 D6              		[R2]=R3	// QImode move
0000B805 0F 9F CB B7        		pc=L32	// Indirect jump
                            	L33:
00000D77                    	.debug
00000D77 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
00000D8B 49 00 00 00        		.dd LM62-_F_GoAheadCtr
00000D8D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B807                    	.code
                            	LM62:
                            	LBE7:
00000D8F                    	.debug
00000D8F 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
00000DA3 49 00 00 00        		.dd LM63-_F_GoAheadCtr
00000DA5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B807                    	.code
                            	LM63:
                            	L31:
                            	
0000B807 43 00              		sp+=3
0000B808 88 98              		pop bp from [sp]
0000B809 90 9A              		retf
                            		.endp	// end of F_GoAheadCtr
                            	
00000DA7                    	.debug
00000DA7 2E 00 73 00        		.dw '.stabs "n:p1",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6E 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000B80A                    	.CODE
00000DC0                    	.debug
00000DC0 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DD2 07 00 00 00        		.dd LBB7-_F_GoAheadCtr
00000DD4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B80A                    	.code
00000DD6                    	.debug
00000DD6 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B80A                    	.CODE
00000DEE                    	.debug
00000DEE 2E 00 73 00        		.dw '.stabs "j:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000B80A                    	.CODE
00000E06                    	.debug
00000E06 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E18 19 00 00 00        		.dd LBB8-_F_GoAheadCtr
00000E1A 0D 00 0A 00        		.dw 0x0d,0x0a
0000B80A                    	.code
00000E1C                    	.debug
00000E1C 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E2E 38 00 00 00        		.dd LBE8-_F_GoAheadCtr
00000E30 0D 00 0A 00        		.dw 0x0d,0x0a
0000B80A                    	.code
00000E32                    	.debug
00000E32 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E44 49 00 00 00        		.dd LBE7-_F_GoAheadCtr
00000E46 0D 00 0A 00        		.dw 0x0d,0x0a
0000B80A                    	.code
00000E48                    	.debug
00000E48 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000E51 4C 00 00 00        		.dd LME4-_F_GoAheadCtr
00000E53 0D 00 0A 00        		.dw 0x0d,0x0a
0000B80A                    	.code
                            	LME4:
0000B80A                    	.code
00000E55                    	.debug
00000E55 2E 00 73 00        		.dw '.stabs "F_BackUpCtr:F19",36,0,0,',0,0,offset _F_BackUpCtr,seg _F_BackUpCtr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 5F 00
         42 00 61 00
         63 00 6B 00
         55 00 70 00
         43 00 74 00
         72 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         22 01 00 00
         0D 00 0A 00
0000B80A                    	.CODE
                            	.public _F_BackUpCtr
                            	_F_BackUpCtr:	.proc
00000E7B                    	.debug
00000E7B 2E 00 73 00        		.dw '.stabn 0x44,0,132,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         32 00 2C 00
         00 00 00 00
00000E8F 00 00 00 00        		.dd LM64-_F_BackUpCtr
00000E91 0D 00 0A 00        		.dw 0x0d,0x0a
0000B80A                    	.code
                            	LM64:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
0000B80A 88 DA              		push bp to [sp]
0000B80B 43 20              		sp-=3
0000B80C 08 0B 01 00        		bp=sp+1
                            	
0000B80E 0D 03 06 00        		R1=BP+6
0000B810 02 D2              		[bp+2]=R1	// QImode move
00000E93                    	.debug
00000E93 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00000EA7 07 00 00 00        		.dd LM65-_F_BackUpCtr
00000EA9 0D 00 0A 00        		.dw 0x0d,0x0a
0000B811                    	.code
                            	LM65:
                            	LBB9:
00000EAB                    	.debug
00000EAB 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000EBF 07 00 00 00        		.dd LM66-_F_BackUpCtr
00000EC1 0D 00 0A 00        		.dw 0x0d,0x0a
0000B811                    	.code
                            	LM66:
0000B811 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00000EC3                    	.debug
00000EC3 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
00000ED7 09 00 00 00        		.dd LM67-_F_BackUpCtr
00000ED9 0D 00 0A 00        		.dw 0x0d,0x0a
0000B813                    	.code
                            	LM67:
0000B813 05 93              		R1=BP	// QImode move
0000B814 0D 05 01 00        		R2=BP+1
0000B816 40 92              		R1=0	// QImode move
0000B817 02 97              		R3=R2	// QImode move
0000B818 C3 D2              		[R3]=R1	// QImode move
                            	L38:
0000B819 05 93              		R1=BP	// QImode move
0000B81A 0D 05 01 00        		R2=BP+1
0000B81C 02 99              		R4=R2	// QImode move
0000B81D C4 92              		R1=[R4]	// QImode move
0000B81E 02 94              		R2=[bp+2]	// QImode move
0000B81F C2 42              		CMP R1,[R2]	// QImode compare
0000B820 04 3E 01 EE        		NSJL L41	//QImode LT
         00 EE      
0000B823 0F 9F 53 B8        		pc=L39	// Indirect jump
                            	L41:
00000EDB                    	.debug
00000EDB 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00000EEF 1B 00 00 00        		.dd LM68-_F_BackUpCtr
00000EF1 0D 00 0A 00        		.dw 0x0d,0x0a
0000B825                    	.code
                            	LM68:
                            	LBB10:
0000B825 C5 96              		R3=[BP]	// QImode move
0000B826 0B B7 C0 00        		R3=R3&192
0000B828 C5 D6              		[BP]=R3	// QImode move
00000EF3                    	.debug
00000EF3 2E 00 73 00        		.dw '.stabn 0x44,0,139,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         39 00 2C 00
         00 00 00 00
00000F07 1F 00 00 00        		.dd LM69-_F_BackUpCtr
00000F09 0D 00 0A 00        		.dw 0x0d,0x0a
0000B829                    	.code
                            	LM69:
0000B829 C5 98              		R4=[BP]	// QImode move
0000B82A 0C A9 00 14        		R4=R4|5120
0000B82C C5 D8              		[BP]=R4	// QImode move
00000F0B                    	.debug
00000F0B 2E 00 73 00        		.dw '.stabn 0x44,0,140,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         30 00 2C 00
         00 00 00 00
00000F1F 23 00 00 00        		.dd LM70-_F_BackUpCtr
00000F21 0D 00 0A 00        		.dw 0x0d,0x0a
0000B82D                    	.code
                            	LM70:
0000B82D C5 92              		R1=[BP]	// QImode move
0000B82E 19 D3 05 70        		[28677]=R1	// QImode move
00000F23                    	.debug
00000F23 2E 00 73 00        		.dw '.stabn 0x44,0,141,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         31 00 2C 00
         00 00 00 00
00000F37 26 00 00 00        		.dd LM71-_F_BackUpCtr
00000F39 0D 00 0A 00        		.dw 0x0d,0x0a
0000B830                    	.code
                            	LM71:
0000B830 09 93 5A 00        		R1=90	// QImode move
0000B832 C8 D2              		[SP--]=R1	// QImode move
0000B833 40 F0 76 CD        		call _F_Delay	// call with return value
0000B835 41 00              		SP = SP + 1	//SP
00000F3B                    	.debug
00000F3B 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
00000F4F 2C 00 00 00        		.dd LM72-_F_BackUpCtr
00000F51 0D 00 0A 00        		.dw 0x0d,0x0a
0000B836                    	.code
                            	LM72:
0000B836 C5 92              		R1=[BP]	// QImode move
0000B837 09 B3 C0 00        		R1=R1&192
0000B839 C5 D2              		[BP]=R1	// QImode move
00000F53                    	.debug
00000F53 2E 00 73 00        		.dw '.stabn 0x44,0,144,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         34 00 2C 00
         00 00 00 00
00000F67 30 00 00 00        		.dd LM73-_F_BackUpCtr
00000F69 0D 00 0A 00        		.dw 0x0d,0x0a
0000B83A                    	.code
                            	LM73:
0000B83A C5 92              		R1=[BP]	// QImode move
0000B83B 19 D3 05 70        		[28677]=R1	// QImode move
00000F6B                    	.debug
00000F6B 2E 00 73 00        		.dw '.stabn 0x44,0,145,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         35 00 2C 00
         00 00 00 00
00000F7F 33 00 00 00        		.dd LM74-_F_BackUpCtr
00000F81 0D 00 0A 00        		.dw 0x0d,0x0a
0000B83D                    	.code
                            	LM74:
0000B83D 7C 92              		R1=60	// QImode move
0000B83E C8 D2              		[SP--]=R1	// QImode move
0000B83F 40 F0 76 CD        		call _F_Delay	// call with return value
0000B841 41 00              		SP = SP + 1	//SP
00000F83                    	.debug
00000F83 2E 00 73 00        		.dw '.stabn 0x44,0,146,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         36 00 2C 00
         00 00 00 00
00000F97 38 00 00 00        		.dd LM75-_F_BackUpCtr
00000F99 0D 00 0A 00        		.dw 0x0d,0x0a
0000B842                    	.code
                            	LM75:
                            	LBE10:
00000F9B                    	.debug
00000F9B 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
00000FAF 38 00 00 00        		.dd LM76-_F_BackUpCtr
00000FB1 0D 00 0A 00        		.dw 0x0d,0x0a
0000B842                    	.code
                            	LM76:
                            	L40:
0000B842 05 93              		R1=BP	// QImode move
0000B843 0D 05 01 00        		R2=BP+1
0000B845 05 97              		R3=BP	// QImode move
0000B846 0D 03 01 00        		R1=BP+1
0000B848 05 95              		R2=BP	// QImode move
0000B849 0D 07 01 00        		R3=BP+1
0000B84B 03 99              		R4=R3	// QImode move
0000B84C C4 94              		R2=[R4]	// QImode move
0000B84D 0A 07 01 00        		R3=R2+1
0000B84F 01 95              		R2=R1	// QImode move
0000B850 C2 D6              		[R2]=R3	// QImode move
0000B851 0F 9F 19 B8        		pc=L38	// Indirect jump
                            	L39:
00000FB3                    	.debug
00000FB3 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
00000FC7 49 00 00 00        		.dd LM77-_F_BackUpCtr
00000FC9 0D 00 0A 00        		.dw 0x0d,0x0a
0000B853                    	.code
                            	LM77:
                            	LBE9:
00000FCB                    	.debug
00000FCB 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
00000FDF 49 00 00 00        		.dd LM78-_F_BackUpCtr
00000FE1 0D 00 0A 00        		.dw 0x0d,0x0a
0000B853                    	.code
                            	LM78:
                            	L37:
                            	
0000B853 43 00              		sp+=3
0000B854 88 98              		pop bp from [sp]
0000B855 90 9A              		retf
                            		.endp	// end of F_BackUpCtr
                            	
00000FE3                    	.debug
00000FE3 2E 00 73 00        		.dw '.stabs "n:p1",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6E 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000B856                    	.CODE
00000FFC                    	.debug
00000FFC 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000100E 07 00 00 00        		.dd LBB9-_F_BackUpCtr
00001010 0D 00 0A 00        		.dw 0x0d,0x0a
0000B856                    	.code
00001012                    	.debug
00001012 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B856                    	.CODE
0000102A                    	.debug
0000102A 2E 00 73 00        		.dw '.stabs "j:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000B856                    	.CODE
00001042                    	.debug
00001042 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001054 1B 00 00 00        		.dd LBB10-_F_BackUpCtr
00001056 0D 00 0A 00        		.dw 0x0d,0x0a
0000B856                    	.code
00001058                    	.debug
00001058 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000106A 38 00 00 00        		.dd LBE10-_F_BackUpCtr
0000106C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B856                    	.code
0000106E                    	.debug
0000106E 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001080 49 00 00 00        		.dd LBE9-_F_BackUpCtr
00001082 0D 00 0A 00        		.dw 0x0d,0x0a
0000B856                    	.code
00001084                    	.debug
00001084 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000108D 4C 00 00 00        		.dd LME5-_F_BackUpCtr
0000108F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B856                    	.code
                            	LME5:
0000B856                    	.code
00001091                    	.debug
00001091 2E 00 73 00        		.dw '.stabs "F_TurnLeftCtr:F19",36,0,0,',0,0,offset _F_TurnLeftCtr,seg _F_TurnLeftCtr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 5F 00
         54 00 75 00
         72 00 6E 00
         4C 00 65 00
         66 00 74 00
         43 00 74 00
         72 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         6E 01 00 00
         0D 00 0A 00
0000B856                    	.CODE
                            	.public _F_TurnLeftCtr
                            	_F_TurnLeftCtr:	.proc
000010B9                    	.debug
000010B9 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
000010CD 00 00 00 00        		.dd LM79-_F_TurnLeftCtr
000010CF 0D 00 0A 00        		.dw 0x0d,0x0a
0000B856                    	.code
                            	LM79:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
0000B856 88 DA              		push bp to [sp]
0000B857 43 20              		sp-=3
0000B858 08 0B 01 00        		bp=sp+1
                            	
0000B85A 0D 03 06 00        		R1=BP+6
0000B85C 02 D2              		[bp+2]=R1	// QImode move
000010D1                    	.debug
000010D1 2E 00 73 00        		.dw '.stabn 0x44,0,151,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         31 00 2C 00
         00 00 00 00
000010E5 07 00 00 00        		.dd LM80-_F_TurnLeftCtr
000010E7 0D 00 0A 00        		.dw 0x0d,0x0a
0000B85D                    	.code
                            	LM80:
                            	LBB11:
000010E9                    	.debug
000010E9 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
000010FD 07 00 00 00        		.dd LM81-_F_TurnLeftCtr
000010FF 0D 00 0A 00        		.dw 0x0d,0x0a
0000B85D                    	.code
                            	LM81:
0000B85D 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00001101                    	.debug
00001101 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
00001115 09 00 00 00        		.dd LM82-_F_TurnLeftCtr
00001117 0D 00 0A 00        		.dw 0x0d,0x0a
0000B85F                    	.code
                            	LM82:
0000B85F 05 93              		R1=BP	// QImode move
0000B860 0D 05 01 00        		R2=BP+1
0000B862 40 92              		R1=0	// QImode move
0000B863 02 97              		R3=R2	// QImode move
0000B864 C3 D2              		[R3]=R1	// QImode move
                            	L44:
0000B865 05 93              		R1=BP	// QImode move
0000B866 0D 05 01 00        		R2=BP+1
0000B868 02 99              		R4=R2	// QImode move
0000B869 C4 92              		R1=[R4]	// QImode move
0000B86A 02 94              		R2=[bp+2]	// QImode move
0000B86B C2 42              		CMP R1,[R2]	// QImode compare
0000B86C 04 3E 01 EE        		NSJL L47	//QImode LT
         00 EE      
0000B86F 0F 9F 9F B8        		pc=L45	// Indirect jump
                            	L47:
00001119                    	.debug
00001119 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
0000112D 1B 00 00 00        		.dd LM83-_F_TurnLeftCtr
0000112F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B871                    	.code
                            	LM83:
                            	LBB12:
0000B871 C5 96              		R3=[BP]	// QImode move
0000B872 0B B7 C0 00        		R3=R3&192
0000B874 C5 D6              		[BP]=R3	// QImode move
00001131                    	.debug
00001131 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
00001145 1F 00 00 00        		.dd LM84-_F_TurnLeftCtr
00001147 0D 00 0A 00        		.dw 0x0d,0x0a
0000B875                    	.code
                            	LM84:
0000B875 C5 98              		R4=[BP]	// QImode move
0000B876 0C A9 00 24        		R4=R4|9216
0000B878 C5 D8              		[BP]=R4	// QImode move
00001149                    	.debug
00001149 2E 00 73 00        		.dw '.stabn 0x44,0,157,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         37 00 2C 00
         00 00 00 00
0000115D 23 00 00 00        		.dd LM85-_F_TurnLeftCtr
0000115F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B879                    	.code
                            	LM85:
0000B879 C5 92              		R1=[BP]	// QImode move
0000B87A 19 D3 05 70        		[28677]=R1	// QImode move
00001161                    	.debug
00001161 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
00001175 26 00 00 00        		.dd LM86-_F_TurnLeftCtr
00001177 0D 00 0A 00        		.dw 0x0d,0x0a
0000B87C                    	.code
                            	LM86:
0000B87C 09 93 5A 00        		R1=90	// QImode move
0000B87E C8 D2              		[SP--]=R1	// QImode move
0000B87F 40 F0 76 CD        		call _F_Delay	// call with return value
0000B881 41 00              		SP = SP + 1	//SP
00001179                    	.debug
00001179 2E 00 73 00        		.dw '.stabn 0x44,0,159,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         39 00 2C 00
         00 00 00 00
0000118D 2C 00 00 00        		.dd LM87-_F_TurnLeftCtr
0000118F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B882                    	.code
                            	LM87:
0000B882 C5 92              		R1=[BP]	// QImode move
0000B883 09 B3 C0 00        		R1=R1&192
0000B885 C5 D2              		[BP]=R1	// QImode move
00001191                    	.debug
00001191 2E 00 73 00        		.dw '.stabn 0x44,0,161,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         31 00 2C 00
         00 00 00 00
000011A5 30 00 00 00        		.dd LM88-_F_TurnLeftCtr
000011A7 0D 00 0A 00        		.dw 0x0d,0x0a
0000B886                    	.code
                            	LM88:
0000B886 C5 92              		R1=[BP]	// QImode move
0000B887 19 D3 05 70        		[28677]=R1	// QImode move
000011A9                    	.debug
000011A9 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
000011BD 33 00 00 00        		.dd LM89-_F_TurnLeftCtr
000011BF 0D 00 0A 00        		.dw 0x0d,0x0a
0000B889                    	.code
                            	LM89:
0000B889 7C 92              		R1=60	// QImode move
0000B88A C8 D2              		[SP--]=R1	// QImode move
0000B88B 40 F0 76 CD        		call _F_Delay	// call with return value
0000B88D 41 00              		SP = SP + 1	//SP
000011C1                    	.debug
000011C1 2E 00 73 00        		.dw '.stabn 0x44,0,163,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         33 00 2C 00
         00 00 00 00
000011D5 38 00 00 00        		.dd LM90-_F_TurnLeftCtr
000011D7 0D 00 0A 00        		.dw 0x0d,0x0a
0000B88E                    	.code
                            	LM90:
                            	LBE12:
000011D9                    	.debug
000011D9 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
000011ED 38 00 00 00        		.dd LM91-_F_TurnLeftCtr
000011EF 0D 00 0A 00        		.dw 0x0d,0x0a
0000B88E                    	.code
                            	LM91:
                            	L46:
0000B88E 05 93              		R1=BP	// QImode move
0000B88F 0D 05 01 00        		R2=BP+1
0000B891 05 97              		R3=BP	// QImode move
0000B892 0D 03 01 00        		R1=BP+1
0000B894 05 95              		R2=BP	// QImode move
0000B895 0D 07 01 00        		R3=BP+1
0000B897 03 99              		R4=R3	// QImode move
0000B898 C4 94              		R2=[R4]	// QImode move
0000B899 0A 07 01 00        		R3=R2+1
0000B89B 01 95              		R2=R1	// QImode move
0000B89C C2 D6              		[R2]=R3	// QImode move
0000B89D 0F 9F 65 B8        		pc=L44	// Indirect jump
                            	L45:
000011F1                    	.debug
000011F1 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
00001205 49 00 00 00        		.dd LM92-_F_TurnLeftCtr
00001207 0D 00 0A 00        		.dw 0x0d,0x0a
0000B89F                    	.code
                            	LM92:
                            	LBE11:
00001209                    	.debug
00001209 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
0000121D 49 00 00 00        		.dd LM93-_F_TurnLeftCtr
0000121F 0D 00 0A 00        		.dw 0x0d,0x0a
0000B89F                    	.code
                            	LM93:
                            	L43:
                            	
0000B89F 43 00              		sp+=3
0000B8A0 88 98              		pop bp from [sp]
0000B8A1 90 9A              		retf
                            		.endp	// end of F_TurnLeftCtr
                            	
00001221                    	.debug
00001221 2E 00 73 00        		.dw '.stabs "n:p1",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6E 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000B8A2                    	.CODE
0000123A                    	.debug
0000123A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000124C 07 00 00 00        		.dd LBB11-_F_TurnLeftCtr
0000124E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8A2                    	.code
00001250                    	.debug
00001250 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B8A2                    	.CODE
00001268                    	.debug
00001268 2E 00 73 00        		.dw '.stabs "j:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000B8A2                    	.CODE
00001280                    	.debug
00001280 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001292 1B 00 00 00        		.dd LBB12-_F_TurnLeftCtr
00001294 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8A2                    	.code
00001296                    	.debug
00001296 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000012A8 38 00 00 00        		.dd LBE12-_F_TurnLeftCtr
000012AA 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8A2                    	.code
000012AC                    	.debug
000012AC 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000012BE 49 00 00 00        		.dd LBE11-_F_TurnLeftCtr
000012C0 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8A2                    	.code
000012C2                    	.debug
000012C2 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000012CB 4C 00 00 00        		.dd LME6-_F_TurnLeftCtr
000012CD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8A2                    	.code
                            	LME6:
0000B8A2                    	.code
000012CF                    	.debug
000012CF 2E 00 73 00        		.dw '.stabs "F_TurnRightCtr:F19",36,0,0,',0,0,offset _F_TurnRightCtr,seg _F_TurnRightCtr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 5F 00
         54 00 75 00
         72 00 6E 00
         52 00 69 00
         67 00 68 00
         74 00 43 00
         74 00 72 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 BA 01
         00 00 0D 00
         0A 00      
0000B8A2                    	.CODE
                            	.public _F_TurnRightCtr
                            	_F_TurnRightCtr:	.proc
000012F8                    	.debug
000012F8 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
0000130C 00 00 00 00        		.dd LM94-_F_TurnRightCtr
0000130E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8A2                    	.code
                            	LM94:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
0000B8A2 88 DA              		push bp to [sp]
0000B8A3 43 20              		sp-=3
0000B8A4 08 0B 01 00        		bp=sp+1
                            	
0000B8A6 0D 03 06 00        		R1=BP+6
0000B8A8 02 D2              		[bp+2]=R1	// QImode move
00001310                    	.debug
00001310 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
00001324 07 00 00 00        		.dd LM95-_F_TurnRightCtr
00001326 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8A9                    	.code
                            	LM95:
                            	LBB13:
00001328                    	.debug
00001328 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
0000133C 07 00 00 00        		.dd LM96-_F_TurnRightCtr
0000133E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8A9                    	.code
                            	LM96:
0000B8A9 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00001340                    	.debug
00001340 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
00001354 09 00 00 00        		.dd LM97-_F_TurnRightCtr
00001356 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8AB                    	.code
                            	LM97:
0000B8AB 05 93              		R1=BP	// QImode move
0000B8AC 0D 05 01 00        		R2=BP+1
0000B8AE 40 92              		R1=0	// QImode move
0000B8AF 02 97              		R3=R2	// QImode move
0000B8B0 C3 D2              		[R3]=R1	// QImode move
                            	L50:
0000B8B1 05 93              		R1=BP	// QImode move
0000B8B2 0D 05 01 00        		R2=BP+1
0000B8B4 02 99              		R4=R2	// QImode move
0000B8B5 C4 92              		R1=[R4]	// QImode move
0000B8B6 02 94              		R2=[bp+2]	// QImode move
0000B8B7 C2 42              		CMP R1,[R2]	// QImode compare
0000B8B8 04 3E 01 EE        		NSJL L53	//QImode LT
         00 EE      
0000B8BB 0F 9F EB B8        		pc=L51	// Indirect jump
                            	L53:
00001358                    	.debug
00001358 2E 00 73 00        		.dw '.stabn 0x44,0,172,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         32 00 2C 00
         00 00 00 00
0000136C 1B 00 00 00        		.dd LM98-_F_TurnRightCtr
0000136E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8BD                    	.code
                            	LM98:
                            	LBB14:
0000B8BD C5 96              		R3=[BP]	// QImode move
0000B8BE 0B B7 C0 00        		R3=R3&192
0000B8C0 C5 D6              		[BP]=R3	// QImode move
00001370                    	.debug
00001370 2E 00 73 00        		.dw '.stabn 0x44,0,173,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         33 00 2C 00
         00 00 00 00
00001384 1F 00 00 00        		.dd LM99-_F_TurnRightCtr
00001386 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8C1                    	.code
                            	LM99:
0000B8C1 C5 98              		R4=[BP]	// QImode move
0000B8C2 0C A9 00 18        		R4=R4|6144
0000B8C4 C5 D8              		[BP]=R4	// QImode move
00001388                    	.debug
00001388 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
0000139C 23 00 00 00        		.dd LM100-_F_TurnRightCtr
0000139E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8C5                    	.code
                            	LM100:
0000B8C5 C5 92              		R1=[BP]	// QImode move
0000B8C6 19 D3 05 70        		[28677]=R1	// QImode move
000013A0                    	.debug
000013A0 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
000013B4 26 00 00 00        		.dd LM101-_F_TurnRightCtr
000013B6 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8C8                    	.code
                            	LM101:
0000B8C8 09 93 5A 00        		R1=90	// QImode move
0000B8CA C8 D2              		[SP--]=R1	// QImode move
0000B8CB 40 F0 76 CD        		call _F_Delay	// call with return value
0000B8CD 41 00              		SP = SP + 1	//SP
000013B8                    	.debug
000013B8 2E 00 73 00        		.dw '.stabn 0x44,0,176,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         36 00 2C 00
         00 00 00 00
000013CC 2C 00 00 00        		.dd LM102-_F_TurnRightCtr
000013CE 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8CE                    	.code
                            	LM102:
0000B8CE C5 92              		R1=[BP]	// QImode move
0000B8CF 09 B3 C0 00        		R1=R1&192
0000B8D1 C5 D2              		[BP]=R1	// QImode move
000013D0                    	.debug
000013D0 2E 00 73 00        		.dw '.stabn 0x44,0,178,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         38 00 2C 00
         00 00 00 00
000013E4 30 00 00 00        		.dd LM103-_F_TurnRightCtr
000013E6 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8D2                    	.code
                            	LM103:
0000B8D2 C5 92              		R1=[BP]	// QImode move
0000B8D3 19 D3 05 70        		[28677]=R1	// QImode move
000013E8                    	.debug
000013E8 2E 00 73 00        		.dw '.stabn 0x44,0,179,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         39 00 2C 00
         00 00 00 00
000013FC 33 00 00 00        		.dd LM104-_F_TurnRightCtr
000013FE 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8D5                    	.code
                            	LM104:
0000B8D5 7C 92              		R1=60	// QImode move
0000B8D6 C8 D2              		[SP--]=R1	// QImode move
0000B8D7 40 F0 76 CD        		call _F_Delay	// call with return value
0000B8D9 41 00              		SP = SP + 1	//SP
00001400                    	.debug
00001400 2E 00 73 00        		.dw '.stabn 0x44,0,180,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         30 00 2C 00
         00 00 00 00
00001414 38 00 00 00        		.dd LM105-_F_TurnRightCtr
00001416 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8DA                    	.code
                            	LM105:
                            	LBE14:
00001418                    	.debug
00001418 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
0000142C 38 00 00 00        		.dd LM106-_F_TurnRightCtr
0000142E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8DA                    	.code
                            	LM106:
                            	L52:
0000B8DA 05 93              		R1=BP	// QImode move
0000B8DB 0D 05 01 00        		R2=BP+1
0000B8DD 05 97              		R3=BP	// QImode move
0000B8DE 0D 03 01 00        		R1=BP+1
0000B8E0 05 95              		R2=BP	// QImode move
0000B8E1 0D 07 01 00        		R3=BP+1
0000B8E3 03 99              		R4=R3	// QImode move
0000B8E4 C4 94              		R2=[R4]	// QImode move
0000B8E5 0A 07 01 00        		R3=R2+1
0000B8E7 01 95              		R2=R1	// QImode move
0000B8E8 C2 D6              		[R2]=R3	// QImode move
0000B8E9 0F 9F B1 B8        		pc=L50	// Indirect jump
                            	L51:
00001430                    	.debug
00001430 2E 00 73 00        		.dw '.stabn 0x44,0,181,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         31 00 2C 00
         00 00 00 00
00001444 49 00 00 00        		.dd LM107-_F_TurnRightCtr
00001446 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8EB                    	.code
                            	LM107:
                            	LBE13:
00001448                    	.debug
00001448 2E 00 73 00        		.dw '.stabn 0x44,0,181,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         31 00 2C 00
         00 00 00 00
0000145C 49 00 00 00        		.dd LM108-_F_TurnRightCtr
0000145E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8EB                    	.code
                            	LM108:
                            	L49:
                            	
0000B8EB 43 00              		sp+=3
0000B8EC 88 98              		pop bp from [sp]
0000B8ED 90 9A              		retf
                            		.endp	// end of F_TurnRightCtr
                            	
00001460                    	.debug
00001460 2E 00 73 00        		.dw '.stabs "n:p1",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6E 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000B8EE                    	.CODE
00001479                    	.debug
00001479 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000148B 07 00 00 00        		.dd LBB13-_F_TurnRightCtr
0000148D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8EE                    	.code
0000148F                    	.debug
0000148F 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B8EE                    	.CODE
000014A7                    	.debug
000014A7 2E 00 73 00        		.dw '.stabs "j:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000B8EE                    	.CODE
000014BF                    	.debug
000014BF 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000014D1 1B 00 00 00        		.dd LBB14-_F_TurnRightCtr
000014D3 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8EE                    	.code
000014D5                    	.debug
000014D5 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000014E7 38 00 00 00        		.dd LBE14-_F_TurnRightCtr
000014E9 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8EE                    	.code
000014EB                    	.debug
000014EB 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000014FD 49 00 00 00        		.dd LBE13-_F_TurnRightCtr
000014FF 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8EE                    	.code
00001501                    	.debug
00001501 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000150A 4C 00 00 00        		.dd LME7-_F_TurnRightCtr
0000150C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8EE                    	.code
                            	LME7:
0000B8EE                    	.code
0000150E                    	.debug
0000150E 2E 00 73 00        		.dw '.stabs "F_StopCtr:F19",36,0,0,',0,0,offset _F_StopCtr,seg _F_StopCtr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 5F 00
         53 00 74 00
         6F 00 70 00
         43 00 74 00
         72 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         06 02 00 00
         0D 00 0A 00
0000B8EE                    	.CODE
                            	.public _F_StopCtr
                            	_F_StopCtr:	.proc
00001532                    	.debug
00001532 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
00001546 00 00 00 00        		.dd LM109-_F_StopCtr
00001548 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8EE                    	.code
                            	LM109:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
0000B8EE 88 DA              		push bp to [sp]
0000B8EF 43 20              		sp-=3
0000B8F0 08 0B 01 00        		bp=sp+1
                            	
0000B8F2 0D 03 06 00        		R1=BP+6
0000B8F4 02 D2              		[bp+2]=R1	// QImode move
0000154A                    	.debug
0000154A 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
0000155E 07 00 00 00        		.dd LM110-_F_StopCtr
00001560 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8F5                    	.code
                            	LM110:
                            	LBB15:
00001562                    	.debug
00001562 2E 00 73 00        		.dw '.stabn 0x44,0,186,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         36 00 2C 00
         00 00 00 00
00001576 07 00 00 00        		.dd LM111-_F_StopCtr
00001578 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8F5                    	.code
                            	LM111:
0000B8F5 40 F0 53 CD        		call _ClearWatchDog	// call without return value
0000157A                    	.debug
0000157A 2E 00 73 00        		.dw '.stabn 0x44,0,187,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         37 00 2C 00
         00 00 00 00
0000158E 09 00 00 00        		.dd LM112-_F_StopCtr
00001590 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8F7                    	.code
                            	LM112:
0000B8F7 C5 92              		R1=[BP]	// QImode move
0000B8F8 09 B3 C0 00        		R1=R1&192
0000B8FA C5 D2              		[BP]=R1	// QImode move
00001592                    	.debug
00001592 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
000015A6 0D 00 00 00        		.dd LM113-_F_StopCtr
000015A8 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8FB                    	.code
                            	LM113:
                            	LBE15:
000015AA                    	.debug
000015AA 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
000015BE 0D 00 00 00        		.dd LM114-_F_StopCtr
000015C0 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8FB                    	.code
                            	LM114:
                            	L55:
                            	
0000B8FB 43 00              		sp+=3
0000B8FC 88 98              		pop bp from [sp]
0000B8FD 90 9A              		retf
                            		.endp	// end of F_StopCtr
                            	
000015C2                    	.debug
000015C2 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000015D4 07 00 00 00        		.dd LBB15-_F_StopCtr
000015D6 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8FE                    	.code
000015D8                    	.debug
000015D8 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B8FE                    	.CODE
000015F0                    	.debug
000015F0 2E 00 73 00        		.dw '.stabs "j:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000B8FE                    	.CODE
00001608                    	.debug
00001608 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000161A 0D 00 00 00        		.dd LBE15-_F_StopCtr
0000161C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8FE                    	.code
0000161E                    	.debug
0000161E 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001627 10 00 00 00        		.dd LME8-_F_StopCtr
00001629 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8FE                    	.code
                            	LME8:
0000B8FE                    	.code
0000162B                    	.debug
0000162B 2E 00 73 00        		.dw '.stabs "F_ShunCtr:F19",36,0,0,',0,0,offset _F_ShunCtr,seg _F_ShunCtr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 5F 00
         53 00 68 00
         75 00 6E 00
         43 00 74 00
         72 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         16 02 00 00
         0D 00 0A 00
0000B8FE                    	.CODE
                            	.public _F_ShunCtr
                            	_F_ShunCtr:	.proc
0000164F                    	.debug
0000164F 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
00001663 00 00 00 00        		.dd LM115-_F_ShunCtr
00001665 0D 00 0A 00        		.dw 0x0d,0x0a
0000B8FE                    	.code
                            	LM115:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
0000B8FE 88 DA              		push bp to [sp]
0000B8FF 42 20              		sp-=2
0000B900 08 0B 01 00        		bp=sp+1
                            	
0000B902 0D 03 05 00        		R1=BP+5
0000B904 01 D2              		[bp+1]=R1	// QImode move
00001667                    	.debug
00001667 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
0000167B 07 00 00 00        		.dd LM116-_F_ShunCtr
0000167D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B905                    	.code
                            	LM116:
                            	LBB16:
0000167F                    	.debug
0000167F 2E 00 73 00        		.dw '.stabn 0x44,0,196,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         36 00 2C 00
         00 00 00 00
00001693 07 00 00 00        		.dd LM117-_F_ShunCtr
00001695 0D 00 0A 00        		.dw 0x0d,0x0a
0000B905                    	.code
                            	LM117:
0000B905 11 93 05 70        		R1=[28677]	// QImode move
0000B907 C5 D2              		[BP]=R1	// QImode move
00001697                    	.debug
00001697 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
000016AB 0A 00 00 00        		.dd LM118-_F_ShunCtr
000016AD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B908                    	.code
                            	LM118:
0000B908 C5 92              		R1=[BP]	// QImode move
0000B909 09 B3 C0 00        		R1=R1&192
0000B90B C5 D2              		[BP]=R1	// QImode move
000016AF                    	.debug
000016AF 2E 00 73 00        		.dw '.stabn 0x44,0,199,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         39 00 2C 00
         00 00 00 00
000016C3 0E 00 00 00        		.dd LM119-_F_ShunCtr
000016C5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B90C                    	.code
                            	LM119:
0000B90C C5 92              		R1=[BP]	// QImode move
0000B90D 09 43 40 00        		CMP R1,64	// QImode compare
0000B90F 2E 5E 01 EE        		NSJZ L60	//QImode EQ
         00 EE      
0000B912 09 43 40 00        		CMP R1,64	// QImode compare
0000B914 08 BE 01 EE        		NSJG L64	//QImode GT
         00 EE      
0000B917 40 42              		CMP R1,0	// QImode test
0000B918 17 5E 01 EE        		NSJZ L59	//QImode EQ
         00 EE      
0000B91B 0F 9F A2 B9        		pc=L57	// Indirect jump
                            	L64:
0000B91D 09 43 80 00        		CMP R1,128	// QImode compare
0000B91F 02 4E 0F 9F        		NSJZ L61	//QImode EQ
         70 B9      
0000B922 09 43 C0 00        		CMP R1,192	// QImode compare
0000B924 04 5E 01 EE        		NSJZ L58	//QImode EQ
         00 EE      
0000B927 0F 9F A2 B9        		pc=L57	// Indirect jump
                            	L58:
000016C7                    	.debug
000016C7 2E 00 73 00        		.dw '.stabn 0x44,0,203,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         33 00 2C 00
         00 00 00 00
000016DB 2B 00 00 00        		.dd LM120-_F_ShunCtr
000016DD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B929                    	.code
                            	LM120:
0000B929 72 92              		R1=50	// QImode move
0000B92A C8 D2              		[SP--]=R1	// QImode move
0000B92B 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000B92D 41 00              		SP = SP + 1	//SP
000016DF                    	.debug
000016DF 2E 00 73 00        		.dw '.stabn 0x44,0,205,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         35 00 2C 00
         00 00 00 00
000016F3 30 00 00 00        		.dd LM121-_F_ShunCtr
000016F5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B92E                    	.code
                            	LM121:
0000B92E 0F 9F A2 B9        		pc=L57	// Indirect jump
                            	L59:
000016F7                    	.debug
000016F7 2E 00 73 00        		.dw '.stabn 0x44,0,209,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         39 00 2C 00
         00 00 00 00
0000170B 32 00 00 00        		.dd LM122-_F_ShunCtr
0000170D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B930                    	.code
                            	LM122:
0000B930 09 93 F4 01        		R1=500	// QImode move
0000B932 C8 D2              		[SP--]=R1	// QImode move
0000B933 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B935 41 00              		SP = SP + 1	//SP
0000170F                    	.debug
0000170F 2E 00 73 00        		.dw '.stabn 0x44,0,210,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         30 00 2C 00
         00 00 00 00
00001723 38 00 00 00        		.dd LM123-_F_ShunCtr
00001725 0D 00 0A 00        		.dw 0x0d,0x0a
0000B936                    	.code
                            	LM123:
0000B936 09 93 C8 00        		R1=200	// QImode move
0000B938 C8 D2              		[SP--]=R1	// QImode move
0000B939 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000B93B 41 00              		SP = SP + 1	//SP
00001727                    	.debug
00001727 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
0000173B 3E 00 00 00        		.dd LM124-_F_ShunCtr
0000173D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B93C                    	.code
                            	LM124:
0000B93C 0F 9F A2 B9        		pc=L57	// Indirect jump
                            	L60:
0000173F                    	.debug
0000173F 2E 00 73 00        		.dw '.stabn 0x44,0,216,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         36 00 2C 00
         00 00 00 00
00001753 40 00 00 00        		.dd LM125-_F_ShunCtr
00001755 0D 00 0A 00        		.dw 0x0d,0x0a
0000B93E                    	.code
                            	LM125:
0000B93E 09 93 C8 00        		R1=200	// QImode move
0000B940 C8 D2              		[SP--]=R1	// QImode move
0000B941 40 F0 56 B8        		call _F_TurnLeftCtr	// call without return value
0000B943 41 00              		SP = SP + 1	//SP
00001757                    	.debug
00001757 2E 00 73 00        		.dw '.stabn 0x44,0,217,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         37 00 2C 00
         00 00 00 00
0000176B 46 00 00 00        		.dd LM126-_F_ShunCtr
0000176D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B944                    	.code
                            	LM126:
0000B944 09 93 64 00        		R1=100	// QImode move
0000B946 C8 D2              		[SP--]=R1	// QImode move
0000B947 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B949 41 00              		SP = SP + 1	//SP
0000176F                    	.debug
0000176F 2E 00 73 00        		.dw '.stabn 0x44,0,218,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         38 00 2C 00
         00 00 00 00
00001783 4C 00 00 00        		.dd LM127-_F_ShunCtr
00001785 0D 00 0A 00        		.dw 0x0d,0x0a
0000B94A                    	.code
                            	LM127:
0000B94A 09 93 C8 00        		R1=200	// QImode move
0000B94C C8 D2              		[SP--]=R1	// QImode move
0000B94D 40 F0 56 B8        		call _F_TurnLeftCtr	// call without return value
0000B94F 41 00              		SP = SP + 1	//SP
00001787                    	.debug
00001787 2E 00 73 00        		.dw '.stabn 0x44,0,219,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         39 00 2C 00
         00 00 00 00
0000179B 52 00 00 00        		.dd LM128-_F_ShunCtr
0000179D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B950                    	.code
                            	LM128:
0000B950 09 93 64 00        		R1=100	// QImode move
0000B952 C8 D2              		[SP--]=R1	// QImode move
0000B953 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B955 41 00              		SP = SP + 1	//SP
0000179F                    	.debug
0000179F 2E 00 73 00        		.dw '.stabn 0x44,0,220,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         30 00 2C 00
         00 00 00 00
000017B3 58 00 00 00        		.dd LM129-_F_ShunCtr
000017B5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B956                    	.code
                            	LM129:
0000B956 09 93 C8 00        		R1=200	// QImode move
0000B958 C8 D2              		[SP--]=R1	// QImode move
0000B959 40 F0 56 B8        		call _F_TurnLeftCtr	// call without return value
0000B95B 41 00              		SP = SP + 1	//SP
000017B7                    	.debug
000017B7 2E 00 73 00        		.dw '.stabn 0x44,0,221,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         31 00 2C 00
         00 00 00 00
000017CB 5E 00 00 00        		.dd LM130-_F_ShunCtr
000017CD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B95C                    	.code
                            	LM130:
0000B95C 09 93 64 00        		R1=100	// QImode move
0000B95E C8 D2              		[SP--]=R1	// QImode move
0000B95F 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B961 41 00              		SP = SP + 1	//SP
000017CF                    	.debug
000017CF 2E 00 73 00        		.dw '.stabn 0x44,0,222,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         32 00 2C 00
         00 00 00 00
000017E3 64 00 00 00        		.dd LM131-_F_ShunCtr
000017E5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B962                    	.code
                            	LM131:
0000B962 09 93 C8 00        		R1=200	// QImode move
0000B964 C8 D2              		[SP--]=R1	// QImode move
0000B965 40 F0 56 B8        		call _F_TurnLeftCtr	// call without return value
0000B967 41 00              		SP = SP + 1	//SP
000017E7                    	.debug
000017E7 2E 00 73 00        		.dw '.stabn 0x44,0,223,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         33 00 2C 00
         00 00 00 00
000017FB 6A 00 00 00        		.dd LM132-_F_ShunCtr
000017FD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B968                    	.code
                            	LM132:
0000B968 09 93 64 00        		R1=100	// QImode move
0000B96A C8 D2              		[SP--]=R1	// QImode move
0000B96B 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B96D 41 00              		SP = SP + 1	//SP
000017FF                    	.debug
000017FF 2E 00 73 00        		.dw '.stabn 0x44,0,225,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         35 00 2C 00
         00 00 00 00
00001813 70 00 00 00        		.dd LM133-_F_ShunCtr
00001815 0D 00 0A 00        		.dw 0x0d,0x0a
0000B96E                    	.code
                            	LM133:
0000B96E 0F 9F A2 B9        		pc=L57	// Indirect jump
                            	L61:
00001817                    	.debug
00001817 2E 00 73 00        		.dw '.stabn 0x44,0,228,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         38 00 2C 00
         00 00 00 00
0000182B 72 00 00 00        		.dd LM134-_F_ShunCtr
0000182D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B970                    	.code
                            	LM134:
0000B970 09 93 C8 00        		R1=200	// QImode move
0000B972 C8 D2              		[SP--]=R1	// QImode move
0000B973 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000B975 41 00              		SP = SP + 1	//SP
0000182F                    	.debug
0000182F 2E 00 73 00        		.dw '.stabn 0x44,0,229,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         39 00 2C 00
         00 00 00 00
00001843 78 00 00 00        		.dd LM135-_F_ShunCtr
00001845 0D 00 0A 00        		.dw 0x0d,0x0a
0000B976                    	.code
                            	LM135:
0000B976 09 93 64 00        		R1=100	// QImode move
0000B978 C8 D2              		[SP--]=R1	// QImode move
0000B979 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B97B 41 00              		SP = SP + 1	//SP
00001847                    	.debug
00001847 2E 00 73 00        		.dw '.stabn 0x44,0,230,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         30 00 2C 00
         00 00 00 00
0000185B 7E 00 00 00        		.dd LM136-_F_ShunCtr
0000185D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B97C                    	.code
                            	LM136:
0000B97C 09 93 C8 00        		R1=200	// QImode move
0000B97E C8 D2              		[SP--]=R1	// QImode move
0000B97F 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000B981 41 00              		SP = SP + 1	//SP
0000185F                    	.debug
0000185F 2E 00 73 00        		.dw '.stabn 0x44,0,231,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         31 00 2C 00
         00 00 00 00
00001873 84 00 00 00        		.dd LM137-_F_ShunCtr
00001875 0D 00 0A 00        		.dw 0x0d,0x0a
0000B982                    	.code
                            	LM137:
0000B982 09 93 64 00        		R1=100	// QImode move
0000B984 C8 D2              		[SP--]=R1	// QImode move
0000B985 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B987 41 00              		SP = SP + 1	//SP
00001877                    	.debug
00001877 2E 00 73 00        		.dw '.stabn 0x44,0,232,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         32 00 2C 00
         00 00 00 00
0000188B 8A 00 00 00        		.dd LM138-_F_ShunCtr
0000188D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B988                    	.code
                            	LM138:
0000B988 09 93 C8 00        		R1=200	// QImode move
0000B98A C8 D2              		[SP--]=R1	// QImode move
0000B98B 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000B98D 41 00              		SP = SP + 1	//SP
0000188F                    	.debug
0000188F 2E 00 73 00        		.dw '.stabn 0x44,0,233,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         33 00 2C 00
         00 00 00 00
000018A3 90 00 00 00        		.dd LM139-_F_ShunCtr
000018A5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B98E                    	.code
                            	LM139:
0000B98E 09 93 64 00        		R1=100	// QImode move
0000B990 C8 D2              		[SP--]=R1	// QImode move
0000B991 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B993 41 00              		SP = SP + 1	//SP
000018A7                    	.debug
000018A7 2E 00 73 00        		.dw '.stabn 0x44,0,234,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         34 00 2C 00
         00 00 00 00
000018BB 96 00 00 00        		.dd LM140-_F_ShunCtr
000018BD 0D 00 0A 00        		.dw 0x0d,0x0a
0000B994                    	.code
                            	LM140:
0000B994 09 93 C8 00        		R1=200	// QImode move
0000B996 C8 D2              		[SP--]=R1	// QImode move
0000B997 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000B999 41 00              		SP = SP + 1	//SP
000018BF                    	.debug
000018BF 2E 00 73 00        		.dw '.stabn 0x44,0,235,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         35 00 2C 00
         00 00 00 00
000018D3 9C 00 00 00        		.dd LM141-_F_ShunCtr
000018D5 0D 00 0A 00        		.dw 0x0d,0x0a
0000B99A                    	.code
                            	LM141:
0000B99A 09 93 64 00        		R1=100	// QImode move
0000B99C C8 D2              		[SP--]=R1	// QImode move
0000B99D 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000B99F 41 00              		SP = SP + 1	//SP
000018D7                    	.debug
000018D7 2E 00 73 00        		.dw '.stabn 0x44,0,237,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         37 00 2C 00
         00 00 00 00
000018EB A2 00 00 00        		.dd LM142-_F_ShunCtr
000018ED 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9A0                    	.code
                            	LM142:
0000B9A0 0F 9F A2 B9        		pc=L57	// Indirect jump
                            	L63:
                            	L57:
000018EF                    	.debug
000018EF 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
00001903 A4 00 00 00        		.dd LM143-_F_ShunCtr
00001905 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9A2                    	.code
                            	LM143:
                            	LBE16:
00001907                    	.debug
00001907 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
0000191B A4 00 00 00        		.dd LM144-_F_ShunCtr
0000191D 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9A2                    	.code
                            	LM144:
                            	L56:
                            	
0000B9A2 42 00              		sp+=2
0000B9A3 88 98              		pop bp from [sp]
0000B9A4 90 9A              		retf
                            		.endp	// end of F_ShunCtr
                            	
0000191F                    	.debug
0000191F 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001931 07 00 00 00        		.dd LBB16-_F_ShunCtr
00001933 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9A5                    	.code
00001935                    	.debug
00001935 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B9A5                    	.CODE
0000194D                    	.debug
0000194D 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000195F A4 00 00 00        		.dd LBE16-_F_ShunCtr
00001961 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9A5                    	.code
00001963                    	.debug
00001963 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000196C A7 00 00 00        		.dd LME9-_F_ShunCtr
0000196E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9A5                    	.code
                            	LME9:
0000B9A5                    	.code
00001970                    	.debug
00001970 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         BD 02 00 00
         0D 00 0A 00
0000B9A5                    	.CODE
                            	.public _main
                            	_main:	.proc
0000198E                    	.debug
0000198E 2E 00 73 00        		.dw '.stabn 0x44,0,241,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         31 00 2C 00
         00 00 00 00
000019A2 00 00 00 00        		.dd LM145-_main
000019A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9A5                    	.code
                            	LM145:
                            		// total=19, vars=19
                            		// frame_pointer_needed: 1
0000B9A5 88 DA              		push bp to [sp]
0000B9A6 53 20              		sp-=19
0000B9A7 08 0B 01 00        		bp=sp+1
                            	
0000B9A9 0D 03 16 00        		R1=BP+22
0000B9AB 10 D2              		[bp+16]=R1	// QImode move
000019A6                    	.debug
000019A6 2E 00 73 00        		.dw '.stabn 0x44,0,242,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         32 00 2C 00
         00 00 00 00
000019BA 07 00 00 00        		.dd LM146-_main
000019BC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9AC                    	.code
                            	LM146:
                            	LBB17:
0000B9AC 05 93              		R1=BP	// QImode move
0000B9AD 0D 05 03 00        		R2=BP+3
0000B9AF 40 92              		R1=0	// QImode move
0000B9B0 02 97              		R3=R2	// QImode move
0000B9B1 C3 D2              		[R3]=R1	// QImode move
0000B9B2 05 93              		R1=BP	// QImode move
0000B9B3 0D 05 04 00        		R2=BP+4
0000B9B5 40 92              		R1=0	// QImode move
0000B9B6 02 99              		R4=R2	// QImode move
0000B9B7 C4 D2              		[R4]=R1	// QImode move
0000B9B8 05 93              		R1=BP	// QImode move
0000B9B9 0D 05 05 00        		R2=BP+5
0000B9BB 41 62              		R1=(-1)	// QImode move
0000B9BC 02 97              		R3=R2	// QImode move
0000B9BD C3 D2              		[R3]=R1	// QImode move
0000B9BE 05 93              		R1=BP	// QImode move
0000B9BF 0D 05 06 00        		R2=BP+6
0000B9C1 40 92              		R1=0	// QImode move
0000B9C2 02 99              		R4=R2	// QImode move
0000B9C3 C4 D2              		[R4]=R1	// QImode move
0000B9C4 05 93              		R1=BP	// QImode move
0000B9C5 0D 05 07 00        		R2=BP+7
0000B9C7 40 92              		R1=0	// QImode move
0000B9C8 02 97              		R3=R2	// QImode move
0000B9C9 C3 D2              		[R3]=R1	// QImode move
0000B9CA 05 93              		R1=BP	// QImode move
0000B9CB 0D 05 08 00        		R2=BP+8
0000B9CD 40 92              		R1=0	// QImode move
0000B9CE 02 99              		R4=R2	// QImode move
0000B9CF C4 D2              		[R4]=R1	// QImode move
0000B9D0 05 93              		R1=BP	// QImode move
0000B9D1 0D 05 09 00        		R2=BP+9
0000B9D3 4E 92              		R1=14	// QImode move
0000B9D4 02 97              		R3=R2	// QImode move
0000B9D5 C3 D2              		[R3]=R1	// QImode move
000019BE                    	.debug
000019BE 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
000019D2 31 00 00 00        		.dd LM147-_main
000019D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9D6                    	.code
                            	LM147:
0000B9D6 05 93              		R1=BP	// QImode move
0000B9D7 0D 05 0F 00        		R2=BP+15
0000B9D9 09 63 00 11        		R1=(-4352)	// QImode move
0000B9DB 02 99              		R4=R2	// QImode move
0000B9DC C4 D2              		[R4]=R1	// QImode move
000019D6                    	.debug
000019D6 2E 00 73 00        		.dw '.stabn 0x44,0,247,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         37 00 2C 00
         00 00 00 00
000019EA 38 00 00 00        		.dd LM148-_main
000019EC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9DD                    	.code
                            	LM148:
0000B9DD 05 95              		R2=BP	// QImode move
0000B9DE 0D 03 06 00        		R1=BP+6
0000B9E0 05 95              		R2=BP	// QImode move
0000B9E1 0D 07 0F 00        		R3=BP+15
0000B9E3 03 99              		R4=R3	// QImode move
0000B9E4 C4 94              		R2=[R4]	// QImode move
0000B9E5 02 99              		R4=R2	// QImode move
0000B9E6 C4 96              		R3=[R4]	// QImode move
0000B9E7 01 95              		R2=R1	// QImode move
0000B9E8 C2 D6              		[R2]=R3	// QImode move
000019EE                    	.debug
000019EE 2E 00 73 00        		.dw '.stabn 0x44,0,248,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         38 00 2C 00
         00 00 00 00
00001A02 44 00 00 00        		.dd LM149-_main
00001A04 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9E9                    	.code
                            	LM149:
0000B9E9 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00001A06                    	.debug
00001A06 2E 00 73 00        		.dw '.stabn 0x44,0,249,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         39 00 2C 00
         00 00 00 00
00001A1A 46 00 00 00        		.dd LM150-_main
00001A1C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9EB                    	.code
                            	LM150:
0000B9EB 09 63 00 01        		R1=(-256)	// QImode move
0000B9ED C8 D2              		[SP--]=R1	// QImode move
0000B9EE 40 92              		R1=0	// QImode move
0000B9EF C8 D2              		[SP--]=R1	// QImode move
0000B9F0 09 63 00 01        		R1=(-256)	// QImode move
0000B9F2 C8 D2              		[SP--]=R1	// QImode move
0000B9F3 40 F0 E7 CC        		call _SP_Init_IOB	// call with return value
0000B9F5 43 00              		SP = SP + 3	//SP
00001A1E                    	.debug
00001A1E 2E 00 73 00        		.dw '.stabn 0x44,0,250,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         30 00 2C 00
         00 00 00 00
00001A32 51 00 00 00        		.dd LM151-_main
00001A34 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9F6                    	.code
                            	LM151:
0000B9F6 40 92              		R1=0	// QImode move
0000B9F7 C8 D2              		[SP--]=R1	// QImode move
0000B9F8 40 92              		R1=0	// QImode move
0000B9F9 C8 D2              		[SP--]=R1	// QImode move
0000B9FA 40 92              		R1=0	// QImode move
0000B9FB C8 D2              		[SP--]=R1	// QImode move
0000B9FC 40 F0 D7 CC        		call _SP_Init_IOA	// call with return value
0000B9FE 43 00              		SP = SP + 3	//SP
00001A36                    	.debug
00001A36 2E 00 73 00        		.dw '.stabn 0x44,0,253,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         33 00 2C 00
         00 00 00 00
00001A4A 5A 00 00 00        		.dd LM152-_main
00001A4C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B9FF                    	.code
                            	LM152:
0000B9FF 40 92              		R1=0	// QImode move
0000BA00 C8 D2              		[SP--]=R1	// QImode move
0000BA01 40 F0 21 86        		call _BSR_DeleteSDGroup	// call with return value
0000BA03 41 00              		SP = SP + 1	//SP
00001A4E                    	.debug
00001A4E 2E 00 73 00        		.dw '.stabn 0x44,0,254,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         34 00 2C 00
         00 00 00 00
00001A62 5F 00 00 00        		.dd LM153-_main
00001A64 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA04                    	.code
                            	LM153:
0000BA04 05 93              		R1=BP	// QImode move
0000BA05 0D 05 06 00        		R2=BP+6
0000BA07 02 97              		R3=R2	// QImode move
0000BA08 C3 92              		R1=[R3]	// QImode move
0000BA09 09 43 FF FF        		CMP R1,(-1)	// QImode compare
0000BA0B 02 5E 0F 9F        		NSJNZ L71	//QImode NE
         FD BA      
00001A66                    	.debug
00001A66 2E 00 73 00        		.dw '.stabn 0x44,0,256,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         36 00 2C 00
         00 00 00 00
00001A7A 69 00 00 00        		.dd LM154-_main
00001A7C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA0E                    	.code
                            	LM154:
                            	LBB18:
0000BA0E 40 92              		R1=0	// QImode move
0000BA0F C8 D2              		[SP--]=R1	// QImode move
0000BA10 40 F0 1C B7        		call _PlayRespond	// call without return value
0000BA12 41 00              		SP = SP + 1	//SP
00001A7E                    	.debug
00001A7E 2E 00 73 00        		.dw '.stabn 0x44,0,258,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         38 00 2C 00
         00 00 00 00
00001A92 6E 00 00 00        		.dd LM155-_main
00001A94 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA13                    	.code
                            	LM155:
                            	L72:
0000BA13 40 92              		R1=0	// QImode move
0000BA14 C8 D2              		[SP--]=R1	// QImode move
0000BA15 09 93 00 01        		R1=256	// QImode move
0000BA17 C8 D2              		[SP--]=R1	// QImode move
0000BA18 40 F0 50 B7        		call _TrainWord	// call with return value
0000BA1A 42 00              		SP = SP + 2	//SP
0000BA1B 40 42              		CMP R1,0	// QImode test
0000BA1C 04 4E 01 EE        		NSJNZ L74	//QImode NE
         00 EE      
0000BA1F 0F 9F 23 BA        		pc=L73	// Indirect jump
                            	L74:
0000BA21 0F 9F 13 BA        		pc=L72	// Indirect jump
                            	L73:
00001A96                    	.debug
00001A96 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
00001AAA 7E 00 00 00        		.dd LM156-_main
00001AAC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA23                    	.code
                            	LM156:
                            	L75:
0000BA23 41 92              		R1=1	// QImode move
0000BA24 C8 D2              		[SP--]=R1	// QImode move
0000BA25 09 93 01 01        		R1=257	// QImode move
0000BA27 C8 D2              		[SP--]=R1	// QImode move
0000BA28 40 F0 50 B7        		call _TrainWord	// call with return value
0000BA2A 42 00              		SP = SP + 2	//SP
0000BA2B 40 42              		CMP R1,0	// QImode test
0000BA2C 04 4E 01 EE        		NSJNZ L77	//QImode NE
         00 EE      
0000BA2F 0F 9F 33 BA        		pc=L76	// Indirect jump
                            	L77:
0000BA31 0F 9F 23 BA        		pc=L75	// Indirect jump
                            	L76:
00001AAE                    	.debug
00001AAE 2E 00 73 00        		.dw '.stabn 0x44,0,262,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         32 00 2C 00
         00 00 00 00
00001AC2 8E 00 00 00        		.dd LM157-_main
00001AC4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA33                    	.code
                            	LM157:
                            	L78:
0000BA33 42 92              		R1=2	// QImode move
0000BA34 C8 D2              		[SP--]=R1	// QImode move
0000BA35 09 93 02 01        		R1=258	// QImode move
0000BA37 C8 D2              		[SP--]=R1	// QImode move
0000BA38 40 F0 50 B7        		call _TrainWord	// call with return value
0000BA3A 42 00              		SP = SP + 2	//SP
0000BA3B 40 42              		CMP R1,0	// QImode test
0000BA3C 04 4E 01 EE        		NSJNZ L80	//QImode NE
         00 EE      
0000BA3F 0F 9F 43 BA        		pc=L79	// Indirect jump
                            	L80:
0000BA41 0F 9F 33 BA        		pc=L78	// Indirect jump
                            	L79:
00001AC6                    	.debug
00001AC6 2E 00 73 00        		.dw '.stabn 0x44,0,264,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         34 00 2C 00
         00 00 00 00
00001ADA 9E 00 00 00        		.dd LM158-_main
00001ADC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA43                    	.code
                            	LM158:
                            	L81:
0000BA43 43 92              		R1=3	// QImode move
0000BA44 C8 D2              		[SP--]=R1	// QImode move
0000BA45 09 93 03 01        		R1=259	// QImode move
0000BA47 C8 D2              		[SP--]=R1	// QImode move
0000BA48 40 F0 50 B7        		call _TrainWord	// call with return value
0000BA4A 42 00              		SP = SP + 2	//SP
0000BA4B 40 42              		CMP R1,0	// QImode test
0000BA4C 04 4E 01 EE        		NSJNZ L83	//QImode NE
         00 EE      
0000BA4F 0F 9F 53 BA        		pc=L82	// Indirect jump
                            	L83:
0000BA51 0F 9F 43 BA        		pc=L81	// Indirect jump
                            	L82:
00001ADE                    	.debug
00001ADE 2E 00 73 00        		.dw '.stabn 0x44,0,266,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         36 00 2C 00
         00 00 00 00
00001AF2 AE 00 00 00        		.dd LM159-_main
00001AF4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA53                    	.code
                            	LM159:
                            	L84:
0000BA53 44 92              		R1=4	// QImode move
0000BA54 C8 D2              		[SP--]=R1	// QImode move
0000BA55 09 93 04 01        		R1=260	// QImode move
0000BA57 C8 D2              		[SP--]=R1	// QImode move
0000BA58 40 F0 50 B7        		call _TrainWord	// call with return value
0000BA5A 42 00              		SP = SP + 2	//SP
0000BA5B 40 42              		CMP R1,0	// QImode test
0000BA5C 04 4E 01 EE        		NSJNZ L86	//QImode NE
         00 EE      
0000BA5F 0F 9F 63 BA        		pc=L85	// Indirect jump
                            	L86:
0000BA61 0F 9F 53 BA        		pc=L84	// Indirect jump
                            	L85:
00001AF6                    	.debug
00001AF6 2E 00 73 00        		.dw '.stabn 0x44,0,267,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         37 00 2C 00
         00 00 00 00
00001B0A BE 00 00 00        		.dd LM160-_main
00001B0C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA63                    	.code
                            	LM160:
0000BA63 05 93              		R1=BP	// QImode move
0000BA64 0D 05 06 00        		R2=BP+6
0000BA66 09 63 56 55        		R1=(-21846)	// QImode move
0000BA68 02 99              		R4=R2	// QImode move
0000BA69 C4 D2              		[R4]=R1	// QImode move
00001B0E                    	.debug
00001B0E 2E 00 73 00        		.dw '.stabn 0x44,0,268,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         38 00 2C 00
         00 00 00 00
00001B22 C5 00 00 00        		.dd LM161-_main
00001B24 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA6A                    	.code
                            	LM161:
0000BA6A 09 63 56 55        		R1=(-21846)	// QImode move
0000BA6C C8 D2              		[SP--]=R1	// QImode move
0000BA6D 09 63 00 11        		R1=(-4352)	// QImode move
0000BA6F C8 D2              		[SP--]=R1	// QImode move
0000BA70 40 F0 1E CD        		call _F_FlashWrite1Word	// call with return value
0000BA72 42 00              		SP = SP + 2	//SP
00001B26                    	.debug
00001B26 2E 00 73 00        		.dw '.stabn 0x44,0,269,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         39 00 2C 00
         00 00 00 00
00001B3A CE 00 00 00        		.dd LM162-_main
00001B3C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA73                    	.code
                            	LM162:
0000BA73 09 63 00 20        		R1=(-8192)	// QImode move
0000BA75 C8 D2              		[SP--]=R1	// QImode move
0000BA76 40 F0 44 CD        		call _F_FlashErase	// call with return value
0000BA78 41 00              		SP = SP + 1	//SP
00001B3E                    	.debug
00001B3E 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
00001B52 D4 00 00 00        		.dd LM163-_main
00001B54 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA79                    	.code
                            	LM163:
0000BA79 09 63 00 1F        		R1=(-7936)	// QImode move
0000BA7B C8 D2              		[SP--]=R1	// QImode move
0000BA7C 40 F0 44 CD        		call _F_FlashErase	// call with return value
0000BA7E 41 00              		SP = SP + 1	//SP
00001B56                    	.debug
00001B56 2E 00 73 00        		.dw '.stabn 0x44,0,271,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         31 00 2C 00
         00 00 00 00
00001B6A DA 00 00 00        		.dd LM164-_main
00001B6C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA7F                    	.code
                            	LM164:
0000BA7F 09 63 00 1E        		R1=(-7680)	// QImode move
0000BA81 C8 D2              		[SP--]=R1	// QImode move
0000BA82 40 F0 44 CD        		call _F_FlashErase	// call with return value
0000BA84 41 00              		SP = SP + 1	//SP
00001B6E                    	.debug
00001B6E 2E 00 73 00        		.dw '.stabn 0x44,0,273,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         33 00 2C 00
         00 00 00 00
00001B82 E0 00 00 00        		.dd LM165-_main
00001B84 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA85                    	.code
                            	LM165:
0000BA85 05 93              		R1=BP	// QImode move
0000BA86 0D 05 0C 00        		R2=BP+12
0000BA88 09 63 00 20        		R1=(-8192)	// QImode move
0000BA8A 02 97              		R3=R2	// QImode move
0000BA8B C3 D2              		[R3]=R1	// QImode move
00001B86                    	.debug
00001B86 2E 00 73 00        		.dw '.stabn 0x44,0,274,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         34 00 2C 00
         00 00 00 00
00001B9A E7 00 00 00        		.dd LM166-_main
00001B9C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA8C                    	.code
                            	LM166:
0000BA8C 09 93 00 01        		R1=256	// QImode move
0000BA8E 19 D3 FA 04        		[_commandID]=R1	// QImode move
                            	L87:
0000BA90 11 93 FA 04        		R1=[_commandID]	// QImode move
0000BA92 09 43 04 01        		CMP R1,260	// QImode compare
0000BA94 04 8E 01 EE        		NSJNA L90	//QImode LEU
         00 EE      
0000BA97 0F 9F FD BA        		pc=L71	// Indirect jump
                            	L90:
00001B9E                    	.debug
00001B9E 2E 00 73 00        		.dw '.stabn 0x44,0,276,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         36 00 2C 00
         00 00 00 00
00001BB2 F4 00 00 00        		.dd LM167-_main
00001BB4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BA99                    	.code
                            	LM167:
0000BA99 11 93 FA 04        		R1=[_commandID]	// QImode move
0000BA9B C8 D2              		[SP--]=R1	// QImode move
0000BA9C 40 F0 17 85        		call _BSR_ExportSDWord	// call with return value
0000BA9E 41 00              		SP = SP + 1	//SP
0000BA9F 19 D3 FB 04        		[_g_Ret]=R1	// QImode move
00001BB6                    	.debug
00001BB6 2E 00 73 00        		.dw '.stabn 0x44,0,277,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         37 00 2C 00
         00 00 00 00
00001BCA FC 00 00 00        		.dd LM168-_main
00001BCC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAA1                    	.code
                            	LM168:
                            	L91:
0000BAA1 11 93 FB 04        		R1=[_g_Ret]	// QImode move
0000BAA3 40 42              		CMP R1,0	// QImode test
0000BAA4 04 4E 01 EE        		NSJNZ L93	//QImode NE
         00 EE      
0000BAA7 0F 9F B3 BA        		pc=L92	// Indirect jump
                            	L93:
00001BCE                    	.debug
00001BCE 2E 00 73 00        		.dw '.stabn 0x44,0,278,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         38 00 2C 00
         00 00 00 00
00001BE2 04 01 00 00        		.dd LM169-_main
00001BE4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAA9                    	.code
                            	LM169:
0000BAA9 11 93 FA 04        		R1=[_commandID]	// QImode move
0000BAAB C8 D2              		[SP--]=R1	// QImode move
0000BAAC 40 F0 17 85        		call _BSR_ExportSDWord	// call with return value
0000BAAE 41 00              		SP = SP + 1	//SP
0000BAAF 19 D3 FB 04        		[_g_Ret]=R1	// QImode move
0000BAB1 0F 9F A1 BA        		pc=L91	// Indirect jump
                            	L92:
00001BE6                    	.debug
00001BE6 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
00001BFA 0E 01 00 00        		.dd LM170-_main
00001BFC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAB3                    	.code
                            	LM170:
0000BAB3 05 93              		R1=BP	// QImode move
0000BAB4 0D 05 0B 00        		R2=BP+11
0000BAB6 40 92              		R1=0	// QImode move
0000BAB7 02 99              		R4=R2	// QImode move
0000BAB8 C4 D2              		[R4]=R1	// QImode move
                            	L94:
0000BAB9 05 93              		R1=BP	// QImode move
0000BABA 0D 05 0B 00        		R2=BP+11
0000BABC 02 97              		R3=R2	// QImode move
0000BABD C3 92              		R1=[R3]	// QImode move
0000BABE 09 43 63 00        		CMP R1,99	// QImode compare
0000BAC0 04 AE 01 EE        		NSJNG L97	//QImode LE
         00 EE      
0000BAC3 0F 9F F6 BA        		pc=L89	// Indirect jump
                            	L97:
00001BFE                    	.debug
00001BFE 2E 00 73 00        		.dw '.stabn 0x44,0,281,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         31 00 2C 00
         00 00 00 00
00001C12 20 01 00 00        		.dd LM171-_main
00001C14 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAC5                    	.code
                            	LM171:
0000BAC5 05 93              		R1=BP	// QImode move
0000BAC6 0D 05 0B 00        		R2=BP+11
0000BAC8 09 93 9D 03        		R1=_BSR_SDModel	// QImode move
0000BACA 02 99              		R4=R2	// QImode move
0000BACB C4 94              		R2=[R4]	// QImode move
0000BACC 02 03              		R1 = R1 + R2	//addqi3
0000BACD 01 97              		R3=R1	// QImode move
0000BACE C3 94              		R2=[R3]	// QImode move
0000BACF C8 D4              		[SP--]=R2	// QImode move
0000BAD0 05 93              		R1=BP	// QImode move
0000BAD1 0D 05 0C 00        		R2=BP+12
0000BAD3 02 99              		R4=R2	// QImode move
0000BAD4 C4 92              		R1=[R4]	// QImode move
0000BAD5 C8 D2              		[SP--]=R1	// QImode move
0000BAD6 40 F0 1E CD        		call _F_FlashWrite1Word	// call with return value
0000BAD8 42 00              		SP = SP + 2	//SP
00001C16                    	.debug
00001C16 2E 00 73 00        		.dw '.stabn 0x44,0,283,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         33 00 2C 00
         00 00 00 00
00001C2A 34 01 00 00        		.dd LM172-_main
00001C2C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAD9                    	.code
                            	LM172:
0000BAD9 05 95              		R2=BP	// QImode move
0000BADA 0D 03 0C 00        		R1=BP+12
0000BADC 05 95              		R2=BP	// QImode move
0000BADD 0D 07 0C 00        		R3=BP+12
0000BADF 03 99              		R4=R3	// QImode move
0000BAE0 C4 94              		R2=[R4]	// QImode move
0000BAE1 0A 07 01 00        		R3=R2+1
0000BAE3 01 95              		R2=R1	// QImode move
0000BAE4 C2 D6              		[R2]=R3	// QImode move
00001C2E                    	.debug
00001C2E 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
00001C42 40 01 00 00        		.dd LM173-_main
00001C44 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAE5                    	.code
                            	LM173:
                            	L96:
0000BAE5 05 93              		R1=BP	// QImode move
0000BAE6 0D 05 0B 00        		R2=BP+11
0000BAE8 05 97              		R3=BP	// QImode move
0000BAE9 0D 03 0B 00        		R1=BP+11
0000BAEB 05 95              		R2=BP	// QImode move
0000BAEC 0D 07 0B 00        		R3=BP+11
0000BAEE 03 99              		R4=R3	// QImode move
0000BAEF C4 94              		R2=[R4]	// QImode move
0000BAF0 0A 07 01 00        		R3=R2+1
0000BAF2 01 95              		R2=R1	// QImode move
0000BAF3 C2 D6              		[R2]=R3	// QImode move
0000BAF4 0F 9F B9 BA        		pc=L94	// Indirect jump
                            	L95:
00001C46                    	.debug
00001C46 2E 00 73 00        		.dw '.stabn 0x44,0,274,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         34 00 2C 00
         00 00 00 00
00001C5A 51 01 00 00        		.dd LM174-_main
00001C5C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAF6                    	.code
                            	LM174:
                            	L89:
0000BAF6 11 93 FA 04        		R1=[_commandID]	// QImode move
0000BAF8 41 94              		R2=1	// QImode move
0000BAF9 19 05 FA 04        		[_commandID]=R1+R2  //addqi3_Qrr
0000BAFB 0F 9F 90 BA        		pc=L87	// Indirect jump
                            	L88:
00001C5E                    	.debug
00001C5E 2E 00 73 00        		.dw '.stabn 0x44,0,286,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         36 00 2C 00
         00 00 00 00
00001C72 58 01 00 00        		.dd LM175-_main
00001C74 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAFD                    	.code
                            	LM175:
                            	LBE18:
                            	L71:
00001C76                    	.debug
00001C76 2E 00 73 00        		.dw '.stabn 0x44,0,287,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         37 00 2C 00
         00 00 00 00
00001C8A 58 01 00 00        		.dd LM176-_main
00001C8C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BAFD                    	.code
                            	LM176:
0000BAFD 05 93              		R1=BP	// QImode move
0000BAFE 0D 05 06 00        		R2=BP+6
0000BB00 02 97              		R3=R2	// QImode move
0000BB01 C3 92              		R1=[R3]	// QImode move
0000BB02 09 43 AA AA        		CMP R1,(-21846)	// QImode compare
0000BB04 02 5E 0F 9F        		NSJNZ L98	//QImode NE
         91 BB      
00001C8E                    	.debug
00001C8E 2E 00 73 00        		.dw '.stabn 0x44,0,289,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         39 00 2C 00
         00 00 00 00
00001CA2 62 01 00 00        		.dd LM177-_main
00001CA4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB07                    	.code
                            	LM177:
0000BB07 40 92              		R1=0	// QImode move
0000BB08 C8 D2              		[SP--]=R1	// QImode move
0000BB09 40 F0 21 86        		call _BSR_DeleteSDGroup	// call with return value
0000BB0B 41 00              		SP = SP + 1	//SP
00001CA6                    	.debug
00001CA6 2E 00 73 00        		.dw '.stabn 0x44,0,290,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         30 00 2C 00
         00 00 00 00
00001CBA 67 01 00 00        		.dd LM178-_main
00001CBC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB0C                    	.code
                            	LM178:
0000BB0C 05 93              		R1=BP	// QImode move
0000BB0D 0D 05 0F 00        		R2=BP+15
0000BB0F 09 63 00 20        		R1=(-8192)	// QImode move
0000BB11 02 99              		R4=R2	// QImode move
0000BB12 C4 D2              		[R4]=R1	// QImode move
00001CBE                    	.debug
00001CBE 2E 00 73 00        		.dw '.stabn 0x44,0,291,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         31 00 2C 00
         00 00 00 00
00001CD2 6E 01 00 00        		.dd LM179-_main
00001CD4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB13                    	.code
                            	LM179:
0000BB13 05 93              		R1=BP	// QImode move
0000BB14 0D 05 01 00        		R2=BP+1
0000BB16 40 92              		R1=0	// QImode move
0000BB17 02 97              		R3=R2	// QImode move
0000BB18 C3 D2              		[R3]=R1	// QImode move
                            	L99:
0000BB19 05 93              		R1=BP	// QImode move
0000BB1A 0D 05 01 00        		R2=BP+1
0000BB1C 02 99              		R4=R2	// QImode move
0000BB1D C4 92              		R1=[R4]	// QImode move
0000BB1E 44 42              		CMP R1,4	// QImode compare
0000BB1F 04 AE 01 EE        		NSJNG L102	//QImode LE
         00 EE      
0000BB22 0F 9F 91 BB        		pc=L98	// Indirect jump
                            	L102:
00001CD6                    	.debug
00001CD6 2E 00 73 00        		.dw '.stabn 0x44,0,293,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         33 00 2C 00
         00 00 00 00
00001CEA 7F 01 00 00        		.dd LM180-_main
00001CEC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB24                    	.code
                            	LM180:
0000BB24 05 93              		R1=BP	// QImode move
0000BB25 0D 05 02 00        		R2=BP+2
0000BB27 40 92              		R1=0	// QImode move
0000BB28 02 97              		R3=R2	// QImode move
0000BB29 C3 D2              		[R3]=R1	// QImode move
                            	L103:
0000BB2A 05 93              		R1=BP	// QImode move
0000BB2B 0D 05 02 00        		R2=BP+2
0000BB2D 02 99              		R4=R2	// QImode move
0000BB2E C4 92              		R1=[R4]	// QImode move
0000BB2F 09 43 63 00        		CMP R1,99	// QImode compare
0000BB31 04 AE 01 EE        		NSJNG L106	//QImode LE
         00 EE      
0000BB34 0F 9F 6E BB        		pc=L104	// Indirect jump
                            	L106:
00001CEE                    	.debug
00001CEE 2E 00 73 00        		.dw '.stabn 0x44,0,295,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         35 00 2C 00
         00 00 00 00
00001D02 91 01 00 00        		.dd LM181-_main
00001D04 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB36                    	.code
                            	LM181:
0000BB36 05 95              		R2=BP	// QImode move
0000BB37 0D 03 0D 00        		R1=BP+13
0000BB39 05 95              		R2=BP	// QImode move
0000BB3A 0D 07 0F 00        		R3=BP+15
0000BB3C 03 99              		R4=R3	// QImode move
0000BB3D C4 94              		R2=[R4]	// QImode move
0000BB3E 02 99              		R4=R2	// QImode move
0000BB3F C4 96              		R3=[R4]	// QImode move
0000BB40 01 95              		R2=R1	// QImode move
0000BB41 C2 D6              		[R2]=R3	// QImode move
00001D06                    	.debug
00001D06 2E 00 73 00        		.dw '.stabn 0x44,0,296,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         36 00 2C 00
         00 00 00 00
00001D1A 9D 01 00 00        		.dd LM182-_main
00001D1C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB42                    	.code
                            	LM182:
0000BB42 05 93              		R1=BP	// QImode move
0000BB43 0D 05 02 00        		R2=BP+2
0000BB45 09 93 9D 03        		R1=_BSR_SDModel	// QImode move
0000BB47 02 97              		R3=R2	// QImode move
0000BB48 C3 94              		R2=[R3]	// QImode move
0000BB49 02 03              		R1 = R1 + R2	//addqi3
0000BB4A 05 95              		R2=BP	// QImode move
0000BB4B 0D 07 0D 00        		R3=BP+13
0000BB4D 03 99              		R4=R3	// QImode move
0000BB4E C4 94              		R2=[R4]	// QImode move
0000BB4F 01 97              		R3=R1	// QImode move
0000BB50 C3 D4              		[R3]=R2	// QImode move
00001D1E                    	.debug
00001D1E 2E 00 73 00        		.dw '.stabn 0x44,0,297,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         37 00 2C 00
         00 00 00 00
00001D32 AC 01 00 00        		.dd LM183-_main
00001D34 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB51                    	.code
                            	LM183:
0000BB51 05 95              		R2=BP	// QImode move
0000BB52 0D 03 0F 00        		R1=BP+15
0000BB54 05 95              		R2=BP	// QImode move
0000BB55 0D 07 0F 00        		R3=BP+15
0000BB57 03 99              		R4=R3	// QImode move
0000BB58 C4 94              		R2=[R4]	// QImode move
0000BB59 0A 07 01 00        		R3=R2+1
0000BB5B 01 95              		R2=R1	// QImode move
0000BB5C C2 D6              		[R2]=R3	// QImode move
00001D36                    	.debug
00001D36 2E 00 73 00        		.dw '.stabn 0x44,0,293,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         33 00 2C 00
         00 00 00 00
00001D4A B8 01 00 00        		.dd LM184-_main
00001D4C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB5D                    	.code
                            	LM184:
                            	L105:
0000BB5D 05 93              		R1=BP	// QImode move
0000BB5E 0D 05 02 00        		R2=BP+2
0000BB60 05 97              		R3=BP	// QImode move
0000BB61 0D 03 02 00        		R1=BP+2
0000BB63 05 95              		R2=BP	// QImode move
0000BB64 0D 07 02 00        		R3=BP+2
0000BB66 03 99              		R4=R3	// QImode move
0000BB67 C4 94              		R2=[R4]	// QImode move
0000BB68 0A 07 01 00        		R3=R2+1
0000BB6A 01 95              		R2=R1	// QImode move
0000BB6B C2 D6              		[R2]=R3	// QImode move
0000BB6C 0F 9F 2A BB        		pc=L103	// Indirect jump
                            	L104:
00001D4E                    	.debug
00001D4E 2E 00 73 00        		.dw '.stabn 0x44,0,299,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         39 00 2C 00
         00 00 00 00
00001D62 C9 01 00 00        		.dd LM185-_main
00001D64 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB6E                    	.code
                            	LM185:
0000BB6E 40 F0 CE 84        		call _BSR_ImportSDWord	// call with return value
0000BB70 19 D3 FB 04        		[_g_Ret]=R1	// QImode move
00001D66                    	.debug
00001D66 2E 00 73 00        		.dw '.stabn 0x44,0,300,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         30 00 2C 00
         00 00 00 00
00001D7A CD 01 00 00        		.dd LM186-_main
00001D7C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB72                    	.code
                            	LM186:
                            	L107:
0000BB72 11 93 FB 04        		R1=[_g_Ret]	// QImode move
0000BB74 40 42              		CMP R1,0	// QImode test
0000BB75 04 4E 01 EE        		NSJNZ L109	//QImode NE
         00 EE      
0000BB78 0F 9F 80 BB        		pc=L101	// Indirect jump
                            	L109:
00001D7E                    	.debug
00001D7E 2E 00 73 00        		.dw '.stabn 0x44,0,301,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         31 00 2C 00
         00 00 00 00
00001D92 D5 01 00 00        		.dd LM187-_main
00001D94 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB7A                    	.code
                            	LM187:
0000BB7A 40 F0 CE 84        		call _BSR_ImportSDWord	// call with return value
0000BB7C 19 D3 FB 04        		[_g_Ret]=R1	// QImode move
0000BB7E 0F 9F 72 BB        		pc=L107	// Indirect jump
                            	L108:
00001D96                    	.debug
00001D96 2E 00 73 00        		.dw '.stabn 0x44,0,291,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         31 00 2C 00
         00 00 00 00
00001DAA DB 01 00 00        		.dd LM188-_main
00001DAC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB80                    	.code
                            	LM188:
                            	L101:
0000BB80 05 93              		R1=BP	// QImode move
0000BB81 0D 05 01 00        		R2=BP+1
0000BB83 05 97              		R3=BP	// QImode move
0000BB84 0D 03 01 00        		R1=BP+1
0000BB86 05 95              		R2=BP	// QImode move
0000BB87 0D 07 01 00        		R3=BP+1
0000BB89 03 99              		R4=R3	// QImode move
0000BB8A C4 94              		R2=[R4]	// QImode move
0000BB8B 0A 07 01 00        		R3=R2+1
0000BB8D 01 95              		R2=R1	// QImode move
0000BB8E C2 D6              		[R2]=R3	// QImode move
0000BB8F 0F 9F 19 BB        		pc=L99	// Indirect jump
                            	L100:
                            	L98:
00001DAE                    	.debug
00001DAE 2E 00 73 00        		.dw '.stabn 0x44,0,305,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         35 00 2C 00
         00 00 00 00
00001DC2 EC 01 00 00        		.dd LM189-_main
00001DC4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB91                    	.code
                            	LM189:
0000BB91 40 92              		R1=0	// QImode move
0000BB92 C8 D2              		[SP--]=R1	// QImode move
0000BB93 40 F0 7F 9B        		call _BSR_InitRecognizer	// call with return value
0000BB95 41 00              		SP = SP + 1	//SP
00001DC6                    	.debug
00001DC6 2E 00 73 00        		.dw '.stabn 0x44,0,308,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         38 00 2C 00
         00 00 00 00
00001DDA F1 01 00 00        		.dd LM190-_main
00001DDC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB96                    	.code
                            	LM190:
0000BB96 40 92              		R1=0	// QImode move
0000BB97 C8 D2              		[SP--]=R1	// QImode move
0000BB98 40 F0 1C B7        		call _PlayRespond	// call without return value
0000BB9A 41 00              		SP = SP + 1	//SP
00001DDE                    	.debug
00001DDE 2E 00 73 00        		.dw '.stabn 0x44,0,309,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         39 00 2C 00
         00 00 00 00
00001DF2 F6 01 00 00        		.dd LM191-_main
00001DF4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BB9B                    	.code
                            	LM191:
0000BB9B 40 92              		R1=0	// QImode move
0000BB9C C8 D2              		[SP--]=R1	// QImode move
0000BB9D 40 F0 1C B7        		call _PlayRespond	// call without return value
0000BB9F 41 00              		SP = SP + 1	//SP
00001DF6                    	.debug
00001DF6 2E 00 73 00        		.dw '.stabn 0x44,0,311,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         31 00 2C 00
         00 00 00 00
00001E0A FB 01 00 00        		.dd LM192-_main
00001E0C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBA0                    	.code
                            	LM192:
0000BBA0 05 93              		R1=BP	// QImode move
0000BBA1 0D 05 05 00        		R2=BP+5
0000BBA3 40 92              		R1=0	// QImode move
0000BBA4 02 97              		R3=R2	// QImode move
0000BBA5 C3 D2              		[R3]=R1	// QImode move
00001E0E                    	.debug
00001E0E 2E 00 73 00        		.dw '.stabn 0x44,0,312,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         32 00 2C 00
         00 00 00 00
00001E22 01 02 00 00        		.dd LM193-_main
00001E24 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBA6                    	.code
                            	LM193:
                            	L110:
0000BBA6 0F 9F AA BB        		pc=L112	// Indirect jump
0000BBA8 0F 9F 3E BE        		pc=L111	// Indirect jump
                            	L112:
00001E26                    	.debug
00001E26 2E 00 73 00        		.dw '.stabn 0x44,0,318,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         38 00 2C 00
         00 00 00 00
00001E3A 05 02 00 00        		.dd LM194-_main
00001E3C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBAA                    	.code
                            	LM194:
                            	LBB19:
0000BBAA 05 93              		R1=BP	// QImode move
0000BBAB 0D 05 04 00        		R2=BP+4
0000BBAD 05 97              		R3=BP	// QImode move
0000BBAE 0D 03 04 00        		R1=BP+4
0000BBB0 05 95              		R2=BP	// QImode move
0000BBB1 0D 07 04 00        		R3=BP+4
0000BBB3 03 99              		R4=R3	// QImode move
0000BBB4 C4 94              		R2=[R4]	// QImode move
0000BBB5 0A 07 01 00        		R3=R2+1
0000BBB7 01 95              		R2=R1	// QImode move
0000BBB8 C2 D6              		[R2]=R3	// QImode move
00001E3E                    	.debug
00001E3E 2E 00 73 00        		.dw '.stabn 0x44,0,319,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         39 00 2C 00
         00 00 00 00
00001E52 14 02 00 00        		.dd LM195-_main
00001E54 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBB9                    	.code
                            	LM195:
0000BBB9 05 93              		R1=BP	// QImode move
0000BBBA 0D 05 04 00        		R2=BP+4
0000BBBC 02 97              		R3=R2	// QImode move
0000BBBD C3 92              		R1=[R3]	// QImode move
0000BBBE 42 42              		CMP R1,2	// QImode compare
0000BBBF 08 AE 01 EE        		NSJNG L113	//QImode LE
         00 EE      
0000BBC2 05 93              		R1=BP	// QImode move
0000BBC3 0D 05 04 00        		R2=BP+4
0000BBC5 40 92              		R1=0	// QImode move
0000BBC6 02 99              		R4=R2	// QImode move
0000BBC7 C4 D2              		[R4]=R1	// QImode move
                            	L113:
00001E56                    	.debug
00001E56 2E 00 73 00        		.dw '.stabn 0x44,0,320,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         30 00 2C 00
         00 00 00 00
00001E6A 23 02 00 00        		.dd LM196-_main
00001E6C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBC8                    	.code
                            	LM196:
0000BBC8 40 F0 AC 9B        		call _BSR_GetResult	// call with return value
0000BBCA C5 D2              		[BP]=R1	// QImode move
00001E6E                    	.debug
00001E6E 2E 00 73 00        		.dw '.stabn 0x44,0,322,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         32 00 2C 00
         00 00 00 00
00001E82 26 02 00 00        		.dd LM197-_main
00001E84 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBCB                    	.code
                            	LM197:
0000BBCB C5 92              		R1=[BP]	// QImode move
0000BBCC 40 42              		CMP R1,0	// QImode test
0000BBCD 02 BE 0F 9F        		NSJNG L114	//QImode LE
         18 BD      
00001E86                    	.debug
00001E86 2E 00 73 00        		.dw '.stabn 0x44,0,325,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         35 00 2C 00
         00 00 00 00
00001E9A 2B 02 00 00        		.dd LM198-_main
00001E9C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBD0                    	.code
                            	LM198:
0000BBD0 11 93 F1 04        		R1=[_gActivated]	// QImode move
0000BBD2 40 42              		CMP R1,0	// QImode test
0000BBD3 02 4E 0F 9F        		NSJZ L115	//QImode EQ
         F4 BC      
00001E9E                    	.debug
00001E9E 2E 00 73 00        		.dw '.stabn 0x44,0,327,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         37 00 2C 00
         00 00 00 00
00001EB2 31 02 00 00        		.dd LM199-_main
00001EB4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBD6                    	.code
                            	LM199:
0000BBD6 05 93              		R1=BP	// QImode move
0000BBD7 0D 05 03 00        		R2=BP+3
0000BBD9 40 92              		R1=0	// QImode move
0000BBDA 02 97              		R3=R2	// QImode move
0000BBDB C3 D2              		[R3]=R1	// QImode move
00001EB6                    	.debug
00001EB6 2E 00 73 00        		.dw '.stabn 0x44,0,328,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         38 00 2C 00
         00 00 00 00
00001ECA 37 02 00 00        		.dd LM200-_main
00001ECC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBDC                    	.code
                            	LM200:
0000BBDC C5 94              		R2=[BP]	// QImode move
0000BBDD 02 93              		R1=R2	// QImode move
0000BBDE 09 23 00 01        		R1=R1-256
0000BBE0 44 42              		CMP R1,4	// QImode compare
0000BBE1 02 8E 0F 9F        		NSJA L116	//QImode GTU
         F2 BC      
0000BBE4 0A 95 9A A6        		R2=L122	// QImode move
0000BBE6 02 03              		R1 = R1 + R2	//addqi3
0000BBE7 01 99              		R4=R1	// QImode move
0000BBE8 C4 92              		R1=[R4]	// QImode move
0000BBE9 01 9F              		pc=R1	// tablejump
0000A69A                    	.text
                            	L122:
0000A69A EA BB              		.dw L117
0000A69B FF BB              		.dw L118
0000A69C 26 BC              		.dw L119
0000A69D 52 BC              		.dw L120
0000A69E A2 BC              		.dw L121
0000BBEA                    	.code
                            	L117:
00001ECE                    	.debug
00001ECE 2E 00 73 00        		.dw '.stabn 0x44,0,331,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         31 00 2C 00
         00 00 00 00
00001EE2 45 02 00 00        		.dd LM201-_main
00001EE4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBEA                    	.code
                            	LM201:
0000BBEA 40 92              		R1=0	// QImode move
0000BBEB 19 D3 F8 04        		[_PlayFlag]=R1	// QImode move
00001EE6                    	.debug
00001EE6 2E 00 73 00        		.dw '.stabn 0x44,0,333,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         33 00 2C 00
         00 00 00 00
00001EFA 48 02 00 00        		.dd LM202-_main
00001EFC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBED                    	.code
                            	LM202:
0000BBED 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00001EFE                    	.debug
00001EFE 2E 00 73 00        		.dw '.stabn 0x44,0,335,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         35 00 2C 00
         00 00 00 00
00001F12 4A 02 00 00        		.dd LM203-_main
00001F14 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBEF                    	.code
                            	LM203:
0000BBEF 40 F0 EE B8        		call _F_StopCtr	// call without return value
00001F16                    	.debug
00001F16 2E 00 73 00        		.dw '.stabn 0x44,0,336,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         36 00 2C 00
         00 00 00 00
00001F2A 4C 02 00 00        		.dd LM204-_main
00001F2C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBF1                    	.code
                            	LM204:
0000BBF1 05 93              		R1=BP	// QImode move
0000BBF2 0D 05 05 00        		R2=BP+5
0000BBF4 41 92              		R1=1	// QImode move
0000BBF5 02 97              		R3=R2	// QImode move
0000BBF6 C3 D2              		[R3]=R1	// QImode move
00001F2E                    	.debug
00001F2E 2E 00 73 00        		.dw '.stabn 0x44,0,337,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         37 00 2C 00
         00 00 00 00
00001F42 52 02 00 00        		.dd LM205-_main
00001F44 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBF7                    	.code
                            	LM205:
0000BBF7 05 93              		R1=BP	// QImode move
0000BBF8 0D 05 07 00        		R2=BP+7
0000BBFA 40 92              		R1=0	// QImode move
0000BBFB 02 99              		R4=R2	// QImode move
0000BBFC C4 D2              		[R4]=R1	// QImode move
00001F46                    	.debug
00001F46 2E 00 73 00        		.dw '.stabn 0x44,0,339,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         39 00 2C 00
         00 00 00 00
00001F5A 58 02 00 00        		.dd LM206-_main
00001F5C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBFD                    	.code
                            	LM206:
0000BBFD 0F 9F F2 BC        		pc=L116	// Indirect jump
                            	L118:
00001F5E                    	.debug
00001F5E 2E 00 73 00        		.dw '.stabn 0x44,0,341,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         31 00 2C 00
         00 00 00 00
00001F72 5A 02 00 00        		.dd LM207-_main
00001F74 0D 00 0A 00        		.dw 0x0d,0x0a
0000BBFF                    	.code
                            	LM207:
0000BBFF 41 92              		R1=1	// QImode move
0000BC00 C8 D2              		[SP--]=R1	// QImode move
0000BC01 40 F0 1C B7        		call _PlayRespond	// call without return value
0000BC03 41 00              		SP = SP + 1	//SP
00001F76                    	.debug
00001F76 2E 00 73 00        		.dw '.stabn 0x44,0,342,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         32 00 2C 00
         00 00 00 00
00001F8A 5F 02 00 00        		.dd LM208-_main
00001F8C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC04                    	.code
                            	LM208:
0000BC04 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00001F8E                    	.debug
00001F8E 2E 00 73 00        		.dw '.stabn 0x44,0,343,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         33 00 2C 00
         00 00 00 00
00001FA2 61 02 00 00        		.dd LM209-_main
00001FA4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC06                    	.code
                            	LM209:
0000BC06 09 93 58 02        		R1=600	// QImode move
0000BC08 C8 D2              		[SP--]=R1	// QImode move
0000BC09 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BC0B 41 00              		SP = SP + 1	//SP
00001FA6                    	.debug
00001FA6 2E 00 73 00        		.dw '.stabn 0x44,0,344,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         34 00 2C 00
         00 00 00 00
00001FBA 67 02 00 00        		.dd LM210-_main
00001FBC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC0C                    	.code
                            	LM210:
0000BC0C 05 93              		R1=BP	// QImode move
0000BC0D 0D 05 05 00        		R2=BP+5
0000BC0F 40 92              		R1=0	// QImode move
0000BC10 02 97              		R3=R2	// QImode move
0000BC11 C3 D2              		[R3]=R1	// QImode move
00001FBE                    	.debug
00001FBE 2E 00 73 00        		.dw '.stabn 0x44,0,345,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         35 00 2C 00
         00 00 00 00
00001FD2 6D 02 00 00        		.dd LM211-_main
00001FD4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC12                    	.code
                            	LM211:
0000BC12 05 93              		R1=BP	// QImode move
0000BC13 0D 05 07 00        		R2=BP+7
0000BC15 40 92              		R1=0	// QImode move
0000BC16 02 99              		R4=R2	// QImode move
0000BC17 C4 D2              		[R4]=R1	// QImode move
00001FD6                    	.debug
00001FD6 2E 00 73 00        		.dw '.stabn 0x44,0,347,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         37 00 2C 00
         00 00 00 00
00001FEA 73 02 00 00        		.dd LM212-_main
00001FEC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC18                    	.code
                            	LM212:
0000BC18 40 92              		R1=0	// QImode move
0000BC19 19 D3 F1 04        		[_gActivated]=R1	// QImode move
00001FEE                    	.debug
00001FEE 2E 00 73 00        		.dw '.stabn 0x44,0,348,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         38 00 2C 00
         00 00 00 00
00002002 76 02 00 00        		.dd LM213-_main
00002004 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC1B                    	.code
                            	LM213:
0000BC1B 40 F0 EE B8        		call _F_StopCtr	// call without return value
00002006                    	.debug
00002006 2E 00 73 00        		.dw '.stabn 0x44,0,349,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         39 00 2C 00
         00 00 00 00
0000201A 78 02 00 00        		.dd LM214-_main
0000201C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC1D                    	.code
                            	LM214:
0000BC1D 05 93              		R1=BP	// QImode move
0000BC1E 0D 05 08 00        		R2=BP+8
0000BC20 09 93 00 28        		R1=10240	// QImode move
0000BC22 02 97              		R3=R2	// QImode move
0000BC23 C3 D2              		[R3]=R1	// QImode move
0000201E                    	.debug
0000201E 2E 00 73 00        		.dw '.stabn 0x44,0,350,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         30 00 2C 00
         00 00 00 00
00002032 7F 02 00 00        		.dd LM215-_main
00002034 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC24                    	.code
                            	LM215:
0000BC24 0F 9F F2 BC        		pc=L116	// Indirect jump
                            	L119:
00002036                    	.debug
00002036 2E 00 73 00        		.dw '.stabn 0x44,0,352,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         32 00 2C 00
         00 00 00 00
0000204A 81 02 00 00        		.dd LM216-_main
0000204C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC26                    	.code
                            	LM216:
0000BC26 42 92              		R1=2	// QImode move
0000BC27 C8 D2              		[SP--]=R1	// QImode move
0000BC28 40 F0 1C B7        		call _PlayRespond	// call without return value
0000BC2A 41 00              		SP = SP + 1	//SP
0000204E                    	.debug
0000204E 2E 00 73 00        		.dw '.stabn 0x44,0,353,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         33 00 2C 00
         00 00 00 00
00002062 86 02 00 00        		.dd LM217-_main
00002064 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC2B                    	.code
                            	LM217:
0000BC2B 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00002066                    	.debug
00002066 2E 00 73 00        		.dw '.stabn 0x44,0,354,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         34 00 2C 00
         00 00 00 00
0000207A 88 02 00 00        		.dd LM218-_main
0000207C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC2D                    	.code
                            	LM218:
0000BC2D 09 93 8A 02        		R1=650	// QImode move
0000BC2F C8 D2              		[SP--]=R1	// QImode move
0000BC30 40 F0 0A B8        		call _F_BackUpCtr	// call without return value
0000BC32 41 00              		SP = SP + 1	//SP
0000207E                    	.debug
0000207E 2E 00 73 00        		.dw '.stabn 0x44,0,356,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         36 00 2C 00
         00 00 00 00
00002092 8E 02 00 00        		.dd LM219-_main
00002094 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC33                    	.code
                            	LM219:
0000BC33 40 92              		R1=0	// QImode move
0000BC34 19 D3 F8 04        		[_PlayFlag]=R1	// QImode move
00002096                    	.debug
00002096 2E 00 73 00        		.dw '.stabn 0x44,0,357,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         37 00 2C 00
         00 00 00 00
000020AA 91 02 00 00        		.dd LM220-_main
000020AC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC36                    	.code
                            	LM220:
0000BC36 05 93              		R1=BP	// QImode move
0000BC37 0D 05 05 00        		R2=BP+5
0000BC39 40 92              		R1=0	// QImode move
0000BC3A 02 99              		R4=R2	// QImode move
0000BC3B C4 D2              		[R4]=R1	// QImode move
000020AE                    	.debug
000020AE 2E 00 73 00        		.dw '.stabn 0x44,0,358,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         38 00 2C 00
         00 00 00 00
000020C2 97 02 00 00        		.dd LM221-_main
000020C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC3C                    	.code
                            	LM221:
0000BC3C 05 93              		R1=BP	// QImode move
0000BC3D 0D 05 08 00        		R2=BP+8
0000BC3F 09 93 00 14        		R1=5120	// QImode move
0000BC41 02 97              		R3=R2	// QImode move
0000BC42 C3 D2              		[R3]=R1	// QImode move
000020C6                    	.debug
000020C6 2E 00 73 00        		.dw '.stabn 0x44,0,359,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         39 00 2C 00
         00 00 00 00
000020DA 9E 02 00 00        		.dd LM222-_main
000020DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC43                    	.code
                            	LM222:
0000BC43 05 93              		R1=BP	// QImode move
0000BC44 0D 05 07 00        		R2=BP+7
0000BC46 40 92              		R1=0	// QImode move
0000BC47 02 99              		R4=R2	// QImode move
0000BC48 C4 D2              		[R4]=R1	// QImode move
000020DE                    	.debug
000020DE 2E 00 73 00        		.dw '.stabn 0x44,0,360,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         30 00 2C 00
         00 00 00 00
000020F2 A4 02 00 00        		.dd LM223-_main
000020F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC49                    	.code
                            	LM223:
0000BC49 40 F0 53 CD        		call _ClearWatchDog	// call without return value
000020F6                    	.debug
000020F6 2E 00 73 00        		.dw '.stabn 0x44,0,361,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         31 00 2C 00
         00 00 00 00
0000210A A6 02 00 00        		.dd LM224-_main
0000210C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC4B                    	.code
                            	LM224:
0000BC4B 40 92              		R1=0	// QImode move
0000BC4C 19 D3 F1 04        		[_gActivated]=R1	// QImode move
0000210E                    	.debug
0000210E 2E 00 73 00        		.dw '.stabn 0x44,0,362,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         32 00 2C 00
         00 00 00 00
00002122 A9 02 00 00        		.dd LM225-_main
00002124 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC4E                    	.code
                            	LM225:
0000BC4E 40 F0 EE B8        		call _F_StopCtr	// call without return value
00002126                    	.debug
00002126 2E 00 73 00        		.dw '.stabn 0x44,0,363,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         33 00 2C 00
         00 00 00 00
0000213A AB 02 00 00        		.dd LM226-_main
0000213C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC50                    	.code
                            	LM226:
0000BC50 0F 9F F2 BC        		pc=L116	// Indirect jump
                            	L120:
0000213E                    	.debug
0000213E 2E 00 73 00        		.dw '.stabn 0x44,0,365,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         35 00 2C 00
         00 00 00 00
00002152 AD 02 00 00        		.dd LM227-_main
00002154 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC52                    	.code
                            	LM227:
0000BC52 43 92              		R1=3	// QImode move
0000BC53 C8 D2              		[SP--]=R1	// QImode move
0000BC54 40 F0 1C B7        		call _PlayRespond	// call without return value
0000BC56 41 00              		SP = SP + 1	//SP
00002156                    	.debug
00002156 2E 00 73 00        		.dw '.stabn 0x44,0,367,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         37 00 2C 00
         00 00 00 00
0000216A B2 02 00 00        		.dd LM228-_main
0000216C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC57                    	.code
                            	LM228:
0000BC57 09 93 C2 01        		R1=450	// QImode move
0000BC59 C8 D2              		[SP--]=R1	// QImode move
0000BC5A 40 F0 56 B8        		call _F_TurnLeftCtr	// call without return value
0000BC5C 41 00              		SP = SP + 1	//SP
0000216E                    	.debug
0000216E 2E 00 73 00        		.dw '.stabn 0x44,0,368,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         38 00 2C 00
         00 00 00 00
00002182 B8 02 00 00        		.dd LM229-_main
00002184 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC5D                    	.code
                            	LM229:
0000BC5D 09 93 64 00        		R1=100	// QImode move
0000BC5F C8 D2              		[SP--]=R1	// QImode move
0000BC60 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BC62 41 00              		SP = SP + 1	//SP
00002186                    	.debug
00002186 2E 00 73 00        		.dw '.stabn 0x44,0,369,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         39 00 2C 00
         00 00 00 00
0000219A BE 02 00 00        		.dd LM230-_main
0000219C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC63                    	.code
                            	LM230:
0000BC63 09 93 5E 01        		R1=350	// QImode move
0000BC65 C8 D2              		[SP--]=R1	// QImode move
0000BC66 40 F0 56 B8        		call _F_TurnLeftCtr	// call without return value
0000BC68 41 00              		SP = SP + 1	//SP
0000219E                    	.debug
0000219E 2E 00 73 00        		.dw '.stabn 0x44,0,370,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         30 00 2C 00
         00 00 00 00
000021B2 C4 02 00 00        		.dd LM231-_main
000021B4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC69                    	.code
                            	LM231:
0000BC69 09 93 64 00        		R1=100	// QImode move
0000BC6B C8 D2              		[SP--]=R1	// QImode move
0000BC6C 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BC6E 41 00              		SP = SP + 1	//SP
000021B6                    	.debug
000021B6 2E 00 73 00        		.dw '.stabn 0x44,0,371,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         31 00 2C 00
         00 00 00 00
000021CA CA 02 00 00        		.dd LM232-_main
000021CC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC6F                    	.code
                            	LM232:
0000BC6F 09 93 5E 01        		R1=350	// QImode move
0000BC71 C8 D2              		[SP--]=R1	// QImode move
0000BC72 40 F0 56 B8        		call _F_TurnLeftCtr	// call without return value
0000BC74 41 00              		SP = SP + 1	//SP
000021CE                    	.debug
000021CE 2E 00 73 00        		.dw '.stabn 0x44,0,372,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         32 00 2C 00
         00 00 00 00
000021E2 D0 02 00 00        		.dd LM233-_main
000021E4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC75                    	.code
                            	LM233:
0000BC75 09 93 64 00        		R1=100	// QImode move
0000BC77 C8 D2              		[SP--]=R1	// QImode move
0000BC78 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BC7A 41 00              		SP = SP + 1	//SP
000021E6                    	.debug
000021E6 2E 00 73 00        		.dw '.stabn 0x44,0,373,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         33 00 2C 00
         00 00 00 00
000021FA D6 02 00 00        		.dd LM234-_main
000021FC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC7B                    	.code
                            	LM234:
0000BC7B 09 93 5E 01        		R1=350	// QImode move
0000BC7D C8 D2              		[SP--]=R1	// QImode move
0000BC7E 40 F0 56 B8        		call _F_TurnLeftCtr	// call without return value
0000BC80 41 00              		SP = SP + 1	//SP
000021FE                    	.debug
000021FE 2E 00 73 00        		.dw '.stabn 0x44,0,374,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         34 00 2C 00
         00 00 00 00
00002212 DC 02 00 00        		.dd LM235-_main
00002214 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC81                    	.code
                            	LM235:
0000BC81 09 93 64 00        		R1=100	// QImode move
0000BC83 C8 D2              		[SP--]=R1	// QImode move
0000BC84 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BC86 41 00              		SP = SP + 1	//SP
00002216                    	.debug
00002216 2E 00 73 00        		.dw '.stabn 0x44,0,375,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         35 00 2C 00
         00 00 00 00
0000222A E2 02 00 00        		.dd LM236-_main
0000222C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC87                    	.code
                            	LM236:
0000BC87 05 93              		R1=BP	// QImode move
0000BC88 0D 05 05 00        		R2=BP+5
0000BC8A 40 92              		R1=0	// QImode move
0000BC8B 02 97              		R3=R2	// QImode move
0000BC8C C3 D2              		[R3]=R1	// QImode move
0000222E                    	.debug
0000222E 2E 00 73 00        		.dw '.stabn 0x44,0,376,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         36 00 2C 00
         00 00 00 00
00002242 E8 02 00 00        		.dd LM237-_main
00002244 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC8D                    	.code
                            	LM237:
0000BC8D 05 93              		R1=BP	// QImode move
0000BC8E 0D 05 07 00        		R2=BP+7
0000BC90 40 92              		R1=0	// QImode move
0000BC91 02 99              		R4=R2	// QImode move
0000BC92 C4 D2              		[R4]=R1	// QImode move
00002246                    	.debug
00002246 2E 00 73 00        		.dw '.stabn 0x44,0,378,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         38 00 2C 00
         00 00 00 00
0000225A EE 02 00 00        		.dd LM238-_main
0000225C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC93                    	.code
                            	LM238:
0000BC93 05 93              		R1=BP	// QImode move
0000BC94 0D 05 08 00        		R2=BP+8
0000BC96 40 92              		R1=0	// QImode move
0000BC97 02 97              		R3=R2	// QImode move
0000BC98 C3 D2              		[R3]=R1	// QImode move
0000225E                    	.debug
0000225E 2E 00 73 00        		.dw '.stabn 0x44,0,380,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         30 00 2C 00
         00 00 00 00
00002272 F4 02 00 00        		.dd LM239-_main
00002274 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC99                    	.code
                            	LM239:
0000BC99 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00002276                    	.debug
00002276 2E 00 73 00        		.dw '.stabn 0x44,0,381,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         31 00 2C 00
         00 00 00 00
0000228A F6 02 00 00        		.dd LM240-_main
0000228C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC9B                    	.code
                            	LM240:
0000BC9B 40 92              		R1=0	// QImode move
0000BC9C 19 D3 F1 04        		[_gActivated]=R1	// QImode move
0000228E                    	.debug
0000228E 2E 00 73 00        		.dw '.stabn 0x44,0,382,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         32 00 2C 00
         00 00 00 00
000022A2 F9 02 00 00        		.dd LM241-_main
000022A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BC9E                    	.code
                            	LM241:
0000BC9E 40 F0 EE B8        		call _F_StopCtr	// call without return value
000022A6                    	.debug
000022A6 2E 00 73 00        		.dw '.stabn 0x44,0,383,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         33 00 2C 00
         00 00 00 00
000022BA FB 02 00 00        		.dd LM242-_main
000022BC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCA0                    	.code
                            	LM242:
0000BCA0 0F 9F F2 BC        		pc=L116	// Indirect jump
                            	L121:
000022BE                    	.debug
000022BE 2E 00 73 00        		.dw '.stabn 0x44,0,385,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         35 00 2C 00
         00 00 00 00
000022D2 FD 02 00 00        		.dd LM243-_main
000022D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCA2                    	.code
                            	LM243:
0000BCA2 44 92              		R1=4	// QImode move
0000BCA3 C8 D2              		[SP--]=R1	// QImode move
0000BCA4 40 F0 1C B7        		call _PlayRespond	// call without return value
0000BCA6 41 00              		SP = SP + 1	//SP
000022D6                    	.debug
000022D6 2E 00 73 00        		.dw '.stabn 0x44,0,387,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         37 00 2C 00
         00 00 00 00
000022EA 02 03 00 00        		.dd LM244-_main
000022EC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCA7                    	.code
                            	LM244:
0000BCA7 09 93 C2 01        		R1=450	// QImode move
0000BCA9 C8 D2              		[SP--]=R1	// QImode move
0000BCAA 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000BCAC 41 00              		SP = SP + 1	//SP
000022EE                    	.debug
000022EE 2E 00 73 00        		.dw '.stabn 0x44,0,388,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         38 00 2C 00
         00 00 00 00
00002302 08 03 00 00        		.dd LM245-_main
00002304 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCAD                    	.code
                            	LM245:
0000BCAD 09 93 64 00        		R1=100	// QImode move
0000BCAF C8 D2              		[SP--]=R1	// QImode move
0000BCB0 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BCB2 41 00              		SP = SP + 1	//SP
00002306                    	.debug
00002306 2E 00 73 00        		.dw '.stabn 0x44,0,389,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         39 00 2C 00
         00 00 00 00
0000231A 0E 03 00 00        		.dd LM246-_main
0000231C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCB3                    	.code
                            	LM246:
0000BCB3 09 93 5E 01        		R1=350	// QImode move
0000BCB5 C8 D2              		[SP--]=R1	// QImode move
0000BCB6 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000BCB8 41 00              		SP = SP + 1	//SP
0000231E                    	.debug
0000231E 2E 00 73 00        		.dw '.stabn 0x44,0,390,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         30 00 2C 00
         00 00 00 00
00002332 14 03 00 00        		.dd LM247-_main
00002334 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCB9                    	.code
                            	LM247:
0000BCB9 09 93 64 00        		R1=100	// QImode move
0000BCBB C8 D2              		[SP--]=R1	// QImode move
0000BCBC 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BCBE 41 00              		SP = SP + 1	//SP
00002336                    	.debug
00002336 2E 00 73 00        		.dw '.stabn 0x44,0,391,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         31 00 2C 00
         00 00 00 00
0000234A 1A 03 00 00        		.dd LM248-_main
0000234C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCBF                    	.code
                            	LM248:
0000BCBF 09 93 5E 01        		R1=350	// QImode move
0000BCC1 C8 D2              		[SP--]=R1	// QImode move
0000BCC2 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000BCC4 41 00              		SP = SP + 1	//SP
0000234E                    	.debug
0000234E 2E 00 73 00        		.dw '.stabn 0x44,0,392,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         32 00 2C 00
         00 00 00 00
00002362 20 03 00 00        		.dd LM249-_main
00002364 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCC5                    	.code
                            	LM249:
0000BCC5 09 93 64 00        		R1=100	// QImode move
0000BCC7 C8 D2              		[SP--]=R1	// QImode move
0000BCC8 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BCCA 41 00              		SP = SP + 1	//SP
00002366                    	.debug
00002366 2E 00 73 00        		.dw '.stabn 0x44,0,393,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         33 00 2C 00
         00 00 00 00
0000237A 26 03 00 00        		.dd LM250-_main
0000237C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCCB                    	.code
                            	LM250:
0000BCCB 09 93 5E 01        		R1=350	// QImode move
0000BCCD C8 D2              		[SP--]=R1	// QImode move
0000BCCE 40 F0 A2 B8        		call _F_TurnRightCtr	// call without return value
0000BCD0 41 00              		SP = SP + 1	//SP
0000237E                    	.debug
0000237E 2E 00 73 00        		.dw '.stabn 0x44,0,394,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         34 00 2C 00
         00 00 00 00
00002392 2C 03 00 00        		.dd LM251-_main
00002394 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCD1                    	.code
                            	LM251:
0000BCD1 09 93 64 00        		R1=100	// QImode move
0000BCD3 C8 D2              		[SP--]=R1	// QImode move
0000BCD4 40 F0 BE B7        		call _F_GoAheadCtr	// call without return value
0000BCD6 41 00              		SP = SP + 1	//SP
00002396                    	.debug
00002396 2E 00 73 00        		.dw '.stabn 0x44,0,395,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         35 00 2C 00
         00 00 00 00
000023AA 32 03 00 00        		.dd LM252-_main
000023AC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCD7                    	.code
                            	LM252:
0000BCD7 05 93              		R1=BP	// QImode move
0000BCD8 0D 05 05 00        		R2=BP+5
0000BCDA 40 92              		R1=0	// QImode move
0000BCDB 02 99              		R4=R2	// QImode move
0000BCDC C4 D2              		[R4]=R1	// QImode move
000023AE                    	.debug
000023AE 2E 00 73 00        		.dw '.stabn 0x44,0,396,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         36 00 2C 00
         00 00 00 00
000023C2 38 03 00 00        		.dd LM253-_main
000023C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCDD                    	.code
                            	LM253:
0000BCDD 05 93              		R1=BP	// QImode move
0000BCDE 0D 05 07 00        		R2=BP+7
0000BCE0 40 92              		R1=0	// QImode move
0000BCE1 02 97              		R3=R2	// QImode move
0000BCE2 C3 D2              		[R3]=R1	// QImode move
000023C6                    	.debug
000023C6 2E 00 73 00        		.dw '.stabn 0x44,0,397,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         37 00 2C 00
         00 00 00 00
000023DA 3E 03 00 00        		.dd LM254-_main
000023DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCE3                    	.code
                            	LM254:
0000BCE3 05 93              		R1=BP	// QImode move
0000BCE4 0D 05 08 00        		R2=BP+8
0000BCE6 40 92              		R1=0	// QImode move
0000BCE7 02 99              		R4=R2	// QImode move
0000BCE8 C4 D2              		[R4]=R1	// QImode move
000023DE                    	.debug
000023DE 2E 00 73 00        		.dw '.stabn 0x44,0,401,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         31 00 2C 00
         00 00 00 00
000023F2 44 03 00 00        		.dd LM255-_main
000023F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCE9                    	.code
                            	LM255:
0000BCE9 40 F0 53 CD        		call _ClearWatchDog	// call without return value
000023F6                    	.debug
000023F6 2E 00 73 00        		.dw '.stabn 0x44,0,402,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         32 00 2C 00
         00 00 00 00
0000240A 46 03 00 00        		.dd LM256-_main
0000240C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCEB                    	.code
                            	LM256:
0000BCEB 40 92              		R1=0	// QImode move
0000BCEC 19 D3 F1 04        		[_gActivated]=R1	// QImode move
0000240E                    	.debug
0000240E 2E 00 73 00        		.dw '.stabn 0x44,0,403,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         33 00 2C 00
         00 00 00 00
00002422 49 03 00 00        		.dd LM257-_main
00002424 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCEE                    	.code
                            	LM257:
0000BCEE 40 F0 EE B8        		call _F_StopCtr	// call without return value
00002426                    	.debug
00002426 2E 00 73 00        		.dw '.stabn 0x44,0,405,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         35 00 2C 00
         00 00 00 00
0000243A 4B 03 00 00        		.dd LM258-_main
0000243C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCF0                    	.code
                            	LM258:
0000BCF0 0F 9F F2 BC        		pc=L116	// Indirect jump
                            	L123:
                            	L116:
0000243E                    	.debug
0000243E 2E 00 73 00        		.dw '.stabn 0x44,0,407,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         37 00 2C 00
         00 00 00 00
00002452 4D 03 00 00        		.dd LM259-_main
00002454 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCF2                    	.code
                            	LM259:
0000BCF2 0F 9F 16 BD        		pc=L124	// Indirect jump
                            	L115:
00002456                    	.debug
00002456 2E 00 73 00        		.dw '.stabn 0x44,0,411,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         31 00 2C 00
         00 00 00 00
0000246A 4F 03 00 00        		.dd LM260-_main
0000246C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCF4                    	.code
                            	LM260:
0000BCF4 C5 92              		R1=[BP]	// QImode move
0000BCF5 09 43 00 01        		CMP R1,256	// QImode compare
0000BCF7 1E 4E 01 EE        		NSJNZ L124	//QImode NE
         00 EE      
0000246E                    	.debug
0000246E 2E 00 73 00        		.dw '.stabn 0x44,0,413,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         33 00 2C 00
         00 00 00 00
00002482 55 03 00 00        		.dd LM261-_main
00002484 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCFA                    	.code
                            	LM261:
0000BCFA 40 F0 53 CD        		call _ClearWatchDog	// call without return value
00002486                    	.debug
00002486 2E 00 73 00        		.dw '.stabn 0x44,0,414,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         34 00 2C 00
         00 00 00 00
0000249A 57 03 00 00        		.dd LM262-_main
0000249C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BCFC                    	.code
                            	LM262:
0000BCFC 40 92              		R1=0	// QImode move
0000BCFD C8 D2              		[SP--]=R1	// QImode move
0000BCFE 40 F0 1C B7        		call _PlayRespond	// call without return value
0000BD00 41 00              		SP = SP + 1	//SP
0000249E                    	.debug
0000249E 2E 00 73 00        		.dw '.stabn 0x44,0,415,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         35 00 2C 00
         00 00 00 00
000024B2 5C 03 00 00        		.dd LM263-_main
000024B4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD01                    	.code
                            	LM263:
0000BD01 05 93              		R1=BP	// QImode move
0000BD02 0D 05 05 00        		R2=BP+5
0000BD04 41 92              		R1=1	// QImode move
0000BD05 02 97              		R3=R2	// QImode move
0000BD06 C3 D2              		[R3]=R1	// QImode move
000024B6                    	.debug
000024B6 2E 00 73 00        		.dw '.stabn 0x44,0,416,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         36 00 2C 00
         00 00 00 00
000024CA 62 03 00 00        		.dd LM264-_main
000024CC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD07                    	.code
                            	LM264:
0000BD07 05 93              		R1=BP	// QImode move
0000BD08 0D 05 07 00        		R2=BP+7
0000BD0A 40 92              		R1=0	// QImode move
0000BD0B 02 99              		R4=R2	// QImode move
0000BD0C C4 D2              		[R4]=R1	// QImode move
000024CE                    	.debug
000024CE 2E 00 73 00        		.dw '.stabn 0x44,0,417,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         37 00 2C 00
         00 00 00 00
000024E2 68 03 00 00        		.dd LM265-_main
000024E4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD0D                    	.code
                            	LM265:
0000BD0D 41 92              		R1=1	// QImode move
0000BD0E 19 D3 F1 04        		[_gActivated]=R1	// QImode move
000024E6                    	.debug
000024E6 2E 00 73 00        		.dw '.stabn 0x44,0,418,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         38 00 2C 00
         00 00 00 00
000024FA 6B 03 00 00        		.dd LM266-_main
000024FC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD10                    	.code
                            	LM266:
0000BD10 05 93              		R1=BP	// QImode move
0000BD11 0D 05 03 00        		R2=BP+3
0000BD13 40 92              		R1=0	// QImode move
0000BD14 02 97              		R3=R2	// QImode move
0000BD15 C3 D2              		[R3]=R1	// QImode move
                            	L125:
                            	L124:
000024FE                    	.debug
000024FE 2E 00 73 00        		.dw '.stabn 0x44,0,422,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         32 00 2C 00
         00 00 00 00
00002512 71 03 00 00        		.dd LM267-_main
00002514 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD16                    	.code
                            	LM267:
0000BD16 0F 9F 3E BD        		pc=L126	// Indirect jump
                            	L114:
00002516                    	.debug
00002516 2E 00 73 00        		.dw '.stabn 0x44,0,423,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         33 00 2C 00
         00 00 00 00
0000252A 73 03 00 00        		.dd LM268-_main
0000252C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD18                    	.code
                            	LM268:
0000BD18 11 93 F1 04        		R1=[_gActivated]	// QImode move
0000BD1A 40 42              		CMP R1,0	// QImode test
0000BD1B 22 5E 01 EE        		NSJZ L126	//QImode EQ
         00 EE      
0000252E                    	.debug
0000252E 2E 00 73 00        		.dw '.stabn 0x44,0,426,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         36 00 2C 00
         00 00 00 00
00002542 79 03 00 00        		.dd LM269-_main
00002544 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD1E                    	.code
                            	LM269:
0000BD1E 05 93              		R1=BP	// QImode move
0000BD1F 0D 05 03 00        		R2=BP+3
0000BD21 05 97              		R3=BP	// QImode move
0000BD22 0D 03 03 00        		R1=BP+3
0000BD24 05 95              		R2=BP	// QImode move
0000BD25 0D 07 03 00        		R3=BP+3
0000BD27 03 95              		R2=R3	// QImode move
0000BD28 C2 98              		R4=[R2]	// QImode move
0000BD29 0C 05 01 00        		R2=R4+1
0000BD2B 02 97              		R3=R2	// QImode move
0000BD2C 01 99              		R4=R1	// QImode move
0000BD2D C4 D6              		[R4]=R3	// QImode move
0000BD2E 0B 47 C2 01        		CMP R3,450	// QImode compare
0000BD30 0D AE 01 EE        		NSJNG L126	//QImode LE
         00 EE      
00002546                    	.debug
00002546 2E 00 73 00        		.dw '.stabn 0x44,0,428,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         38 00 2C 00
         00 00 00 00
0000255A 8E 03 00 00        		.dd LM270-_main
0000255C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD33                    	.code
                            	LM270:
0000BD33 40 F0 53 CD        		call _ClearWatchDog	// call without return value
0000255E                    	.debug
0000255E 2E 00 73 00        		.dw '.stabn 0x44,0,430,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         30 00 2C 00
         00 00 00 00
00002572 90 03 00 00        		.dd LM271-_main
00002574 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD35                    	.code
                            	LM271:
0000BD35 40 92              		R1=0	// QImode move
0000BD36 19 D3 F1 04        		[_gActivated]=R1	// QImode move
00002576                    	.debug
00002576 2E 00 73 00        		.dw '.stabn 0x44,0,431,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         31 00 2C 00
         00 00 00 00
0000258A 93 03 00 00        		.dd LM272-_main
0000258C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD38                    	.code
                            	LM272:
0000BD38 05 93              		R1=BP	// QImode move
0000BD39 0D 05 03 00        		R2=BP+3
0000BD3B 40 92              		R1=0	// QImode move
0000BD3C 02 97              		R3=R2	// QImode move
0000BD3D C3 D2              		[R3]=R1	// QImode move
                            	L128:
                            	L127:
                            	L126:
0000258E                    	.debug
0000258E 2E 00 73 00        		.dw '.stabn 0x44,0,435,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         35 00 2C 00
         00 00 00 00
000025A2 99 03 00 00        		.dd LM273-_main
000025A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD3E                    	.code
                            	LM273:
0000BD3E 05 93              		R1=BP	// QImode move
0000BD3F 0D 05 07 00        		R2=BP+7
0000BD41 02 99              		R4=R2	// QImode move
0000BD42 C4 92              		R1=[R4]	// QImode move
0000BD43 4D 42              		CMP R1,13	// QImode compare
0000BD44 02 5E 0F 9F        		NSJNZ L129	//QImode NE
         AC BD      
0000BD47 05 93              		R1=BP	// QImode move
0000BD48 0D 05 05 00        		R2=BP+5
0000BD4A 02 97              		R3=R2	// QImode move
0000BD4B C3 92              		R1=[R3]	// QImode move
0000BD4C 40 42              		CMP R1,0	// QImode test
0000BD4D 02 5E 0F 9F        		NSJNZ L129	//QImode NE
         AC BD      
000025A6                    	.debug
000025A6 2E 00 73 00        		.dw '.stabn 0x44,0,437,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         37 00 2C 00
         00 00 00 00
000025BA AB 03 00 00        		.dd LM274-_main
000025BC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD50                    	.code
                            	LM274:
0000BD50 05 93              		R1=BP	// QImode move
0000BD51 0D 05 0B 00        		R2=BP+11
0000BD53 11 93 05 70        		R1=[28677]	// QImode move
0000BD55 02 99              		R4=R2	// QImode move
0000BD56 C4 D2              		[R4]=R1	// QImode move
000025BE                    	.debug
000025BE 2E 00 73 00        		.dw '.stabn 0x44,0,438,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         38 00 2C 00
         00 00 00 00
000025D2 B2 03 00 00        		.dd LM275-_main
000025D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD57                    	.code
                            	LM275:
0000BD57 05 95              		R2=BP	// QImode move
0000BD58 0D 03 0B 00        		R1=BP+11
0000BD5A 05 95              		R2=BP	// QImode move
0000BD5B 0D 07 0B 00        		R3=BP+11
0000BD5D 03 95              		R2=R3	// QImode move
0000BD5E C2 94              		R2=[R2]	// QImode move
0000BD5F 0A B9 C0 00        		R4=R2&192
0000BD61 01 95              		R2=R1	// QImode move
0000BD62 C2 D8              		[R2]=R4	// QImode move
000025D6                    	.debug
000025D6 2E 00 73 00        		.dw '.stabn 0x44,0,439,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         39 00 2C 00
         00 00 00 00
000025EA BE 03 00 00        		.dd LM276-_main
000025EC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD63                    	.code
                            	LM276:
0000BD63 40 F0 53 CD        		call _ClearWatchDog	// call without return value
000025EE                    	.debug
000025EE 2E 00 73 00        		.dw '.stabn 0x44,0,440,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         30 00 2C 00
         00 00 00 00
00002602 C0 03 00 00        		.dd LM277-_main
00002604 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD65                    	.code
                            	LM277:
0000BD65 05 93              		R1=BP	// QImode move
0000BD66 0D 05 0B 00        		R2=BP+11
0000BD68 02 97              		R3=R2	// QImode move
0000BD69 C3 92              		R1=[R3]	// QImode move
0000BD6A 09 43 80 00        		CMP R1,128	// QImode compare
0000BD6C 17 5E 01 EE        		NSJZ L131	//QImode EQ
         00 EE      
0000BD6F 05 93              		R1=BP	// QImode move
0000BD70 0D 05 0B 00        		R2=BP+11
0000BD72 02 99              		R4=R2	// QImode move
0000BD73 C4 92              		R1=[R4]	// QImode move
0000BD74 09 43 40 00        		CMP R1,64	// QImode compare
0000BD76 0D 5E 01 EE        		NSJZ L131	//QImode EQ
         00 EE      
0000BD79 05 93              		R1=BP	// QImode move
0000BD7A 0D 05 0B 00        		R2=BP+11
0000BD7C 02 97              		R3=R2	// QImode move
0000BD7D C3 92              		R1=[R3]	// QImode move
0000BD7E 40 42              		CMP R1,0	// QImode test
0000BD7F 0C 4E 01 EE        		NSJNZ L130	//QImode NE
         00 EE      
0000BD82 0F 9F 84 BD        		pc=L131	// Indirect jump
                            	L131:
0000BD84 05 93              		R1=BP	// QImode move
0000BD85 0D 05 0E 00        		R2=BP+14
0000BD87 40 92              		R1=0	// QImode move
0000BD88 02 99              		R4=R2	// QImode move
0000BD89 C4 D2              		[R4]=R1	// QImode move
0000BD8A 0F 9F AC BD        		pc=L129	// Indirect jump
                            	L130:
00002606                    	.debug
00002606 2E 00 73 00        		.dw '.stabn 0x44,0,443,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         33 00 2C 00
         00 00 00 00
0000261A E7 03 00 00        		.dd LM278-_main
0000261C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD8C                    	.code
                            	LM278:
0000BD8C 05 95              		R2=BP	// QImode move
0000BD8D 0D 03 0B 00        		R1=BP+11
0000BD8F 05 95              		R2=BP	// QImode move
0000BD90 0D 07 0B 00        		R3=BP+11
0000BD92 03 95              		R2=R3	// QImode move
0000BD93 C2 94              		R2=[R2]	// QImode move
0000BD94 0A B9 C0 00        		R4=R2&192
0000BD96 01 95              		R2=R1	// QImode move
0000BD97 C2 D8              		[R2]=R4	// QImode move
0000261E                    	.debug
0000261E 2E 00 73 00        		.dw '.stabn 0x44,0,444,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         34 00 2C 00
         00 00 00 00
00002632 F3 03 00 00        		.dd LM279-_main
00002634 0D 00 0A 00        		.dw 0x0d,0x0a
0000BD98                    	.code
                            	LM279:
0000BD98 05 95              		R2=BP	// QImode move
0000BD99 0D 03 0B 00        		R1=BP+11
0000BD9B 05 97              		R3=BP	// QImode move
0000BD9C 0D 07 0B 00        		R3=BP+11
0000BD9E 11 D6              		[bp+17]=R3	// QImode move
0000BD9F 05 97              		R3=BP	// QImode move
0000BDA0 0D 09 08 00        		R4=BP+8
0000BDA2 12 D8              		[bp+18]=R4	// QImode move
0000BDA3 11 94              		R2=[bp+17]	// QImode move
0000BDA4 C2 96              		R3=[R2]	// QImode move
0000BDA5 12 94              		R2=[bp+18]	// QImode move
0000BDA6 C2 94              		R2=[R2]	// QImode move
0000BDA7 02 A7              		R3|=R2
0000BDA8 01 95              		R2=R1	// QImode move
0000BDA9 C2 D6              		[R2]=R3	// QImode move
00002636                    	.debug
00002636 2E 00 73 00        		.dw '.stabn 0x44,0,446,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         36 00 2C 00
         00 00 00 00
0000264A 05 04 00 00        		.dd LM280-_main
0000264C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDAA                    	.code
                            	LM280:
0000BDAA 40 F0 53 CD        		call _ClearWatchDog	// call without return value
                            	L132:
                            	L129:
0000264E                    	.debug
0000264E 2E 00 73 00        		.dw '.stabn 0x44,0,450,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         30 00 2C 00
         00 00 00 00
00002662 07 04 00 00        		.dd LM281-_main
00002664 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDAC                    	.code
                            	LM281:
0000BDAC 05 95              		R2=BP	// QImode move
0000BDAD 0D 03 07 00        		R1=BP+7
0000BDAF 05 95              		R2=BP	// QImode move
0000BDB0 0D 07 09 00        		R3=BP+9
0000BDB2 01 99              		R4=R1	// QImode move
0000BDB3 C4 92              		R1=[R4]	// QImode move
0000BDB4 03 95              		R2=R3	// QImode move
0000BDB5 C2 42              		CMP R1,[R2]	// QImode compare
0000BDB6 30 4E 01 EE        		NSJNZ L133	//QImode NE
         00 EE      
0000BDB9 05 93              		R1=BP	// QImode move
0000BDBA 0D 05 05 00        		R2=BP+5
0000BDBC 02 97              		R3=R2	// QImode move
0000BDBD C3 92              		R1=[R3]	// QImode move
0000BDBE 40 42              		CMP R1,0	// QImode test
0000BDBF 27 4E 01 EE        		NSJNZ L133	//QImode NE
         00 EE      
00002666                    	.debug
00002666 2E 00 73 00        		.dw '.stabn 0x44,0,452,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         32 00 2C 00
         00 00 00 00
0000267A 1D 04 00 00        		.dd LM282-_main
0000267C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDC2                    	.code
                            	LM282:
0000BDC2 05 95              		R2=BP	// QImode move
0000BDC3 0D 03 0B 00        		R1=BP+11
0000BDC5 05 95              		R2=BP	// QImode move
0000BDC6 0D 07 0B 00        		R3=BP+11
0000BDC8 03 99              		R4=R3	// QImode move
0000BDC9 C4 98              		R4=[R4]	// QImode move
0000BDCA 0C B5 C0 00        		R2=R4&192
0000BDCC 01 99              		R4=R1	// QImode move
0000BDCD C4 D4              		[R4]=R2	// QImode move
0000267E                    	.debug
0000267E 2E 00 73 00        		.dw '.stabn 0x44,0,453,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         33 00 2C 00
         00 00 00 00
00002692 29 04 00 00        		.dd LM283-_main
00002694 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDCE                    	.code
                            	LM283:
0000BDCE 05 95              		R2=BP	// QImode move
0000BDCF 0D 03 0B 00        		R1=BP+11
0000BDD1 05 95              		R2=BP	// QImode move
0000BDD2 0D 07 0B 00        		R3=BP+11
0000BDD4 03 99              		R4=R3	// QImode move
0000BDD5 C4 94              		R2=[R4]	// QImode move
0000BDD6 01 97              		R3=R1	// QImode move
0000BDD7 C3 D4              		[R3]=R2	// QImode move
00002696                    	.debug
00002696 2E 00 73 00        		.dw '.stabn 0x44,0,454,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         34 00 2C 00
         00 00 00 00
000026AA 33 04 00 00        		.dd LM284-_main
000026AC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDD8                    	.code
                            	LM284:
0000BDD8 05 93              		R1=BP	// QImode move
0000BDD9 0D 05 0B 00        		R2=BP+11
0000BDDB 02 99              		R4=R2	// QImode move
0000BDDC C4 92              		R1=[R4]	// QImode move
0000BDDD 19 D3 05 70        		[28677]=R1	// QImode move
000026AE                    	.debug
000026AE 2E 00 73 00        		.dw '.stabn 0x44,0,455,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         35 00 2C 00
         00 00 00 00
000026C2 3A 04 00 00        		.dd LM285-_main
000026C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDDF                    	.code
                            	LM285:
0000BDDF 05 93              		R1=BP	// QImode move
0000BDE0 0D 05 07 00        		R2=BP+7
0000BDE2 40 92              		R1=0	// QImode move
0000BDE3 02 97              		R3=R2	// QImode move
0000BDE4 C3 D2              		[R3]=R1	// QImode move
000026C6                    	.debug
000026C6 2E 00 73 00        		.dw '.stabn 0x44,0,456,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         36 00 2C 00
         00 00 00 00
000026DA 40 04 00 00        		.dd LM286-_main
000026DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDE5                    	.code
                            	LM286:
0000BDE5 40 F0 53 CD        		call _ClearWatchDog	// call without return value
                            	L133:
000026DE                    	.debug
000026DE 2E 00 73 00        		.dw '.stabn 0x44,0,459,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         39 00 2C 00
         00 00 00 00
000026F2 42 04 00 00        		.dd LM287-_main
000026F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDE7                    	.code
                            	LM287:
0000BDE7 05 93              		R1=BP	// QImode move
0000BDE8 0D 05 07 00        		R2=BP+7
0000BDEA 05 97              		R3=BP	// QImode move
0000BDEB 0D 03 07 00        		R1=BP+7
0000BDED 05 95              		R2=BP	// QImode move
0000BDEE 0D 07 07 00        		R3=BP+7
0000BDF0 03 99              		R4=R3	// QImode move
0000BDF1 C4 94              		R2=[R4]	// QImode move
0000BDF2 0A 07 01 00        		R3=R2+1
0000BDF4 01 95              		R2=R1	// QImode move
0000BDF5 C2 D6              		[R2]=R3	// QImode move
000026F6                    	.debug
000026F6 2E 00 73 00        		.dw '.stabn 0x44,0,460,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         30 00 2C 00
         00 00 00 00
0000270A 51 04 00 00        		.dd LM288-_main
0000270C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDF6                    	.code
                            	LM288:
0000BDF6 05 93              		R1=BP	// QImode move
0000BDF7 0D 05 0B 00        		R2=BP+11
0000BDF9 11 93 00 70        		R1=[28672]	// QImode move
0000BDFB 02 97              		R3=R2	// QImode move
0000BDFC C3 D2              		[R3]=R1	// QImode move
0000270E                    	.debug
0000270E 2E 00 73 00        		.dw '.stabn 0x44,0,461,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         31 00 2C 00
         00 00 00 00
00002722 58 04 00 00        		.dd LM289-_main
00002724 0D 00 0A 00        		.dw 0x0d,0x0a
0000BDFD                    	.code
                            	LM289:
0000BDFD 05 95              		R2=BP	// QImode move
0000BDFE 0D 03 0B 00        		R1=BP+11
0000BE00 05 95              		R2=BP	// QImode move
0000BE01 0D 07 0B 00        		R3=BP+11
0000BE03 03 99              		R4=R3	// QImode move
0000BE04 C4 98              		R4=[R4]	// QImode move
0000BE05 0C B5 07 00        		R2=R4&7
0000BE07 01 99              		R4=R1	// QImode move
0000BE08 C4 D4              		[R4]=R2	// QImode move
00002726                    	.debug
00002726 2E 00 73 00        		.dw '.stabn 0x44,0,462,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         32 00 2C 00
         00 00 00 00
0000273A 64 04 00 00        		.dd LM290-_main
0000273C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE09                    	.code
                            	LM290:
0000BE09 05 93              		R1=BP	// QImode move
0000BE0A 0D 05 0B 00        		R2=BP+11
0000BE0C 02 97              		R3=R2	// QImode move
0000BE0D C3 92              		R1=[R3]	// QImode move
0000BE0E 43 42              		CMP R1,3	// QImode compare
0000BE0F 11 4E 01 EE        		NSJNZ L134	//QImode NE
         00 EE      
0000BE12 05 93              		R1=BP	// QImode move
0000BE13 0D 05 09 00        		R2=BP+9
0000BE15 05 97              		R3=BP	// QImode move
0000BE16 0D 03 09 00        		R1=BP+9
0000BE18 05 95              		R2=BP	// QImode move
0000BE19 0D 07 09 00        		R3=BP+9
0000BE1B 03 99              		R4=R3	// QImode move
0000BE1C C4 94              		R2=[R4]	// QImode move
0000BE1D 0A 07 01 00        		R3=R2+1
0000BE1F 01 95              		R2=R1	// QImode move
0000BE20 C2 D6              		[R2]=R3	// QImode move
                            	L134:
0000273E                    	.debug
0000273E 2E 00 73 00        		.dw '.stabn 0x44,0,463,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         33 00 2C 00
         00 00 00 00
00002752 7C 04 00 00        		.dd LM291-_main
00002754 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE21                    	.code
                            	LM291:
0000BE21 05 95              		R2=BP	// QImode move
0000BE22 0D 03 0B 00        		R1=BP+11
0000BE24 05 95              		R2=BP	// QImode move
0000BE25 0D 07 0B 00        		R3=BP+11
0000BE27 03 99              		R4=R3	// QImode move
0000BE28 C4 98              		R4=[R4]	// QImode move
0000BE29 0C B5 04 00        		R2=R4&4
0000BE2B 01 99              		R4=R1	// QImode move
0000BE2C C4 D4              		[R4]=R2	// QImode move
00002756                    	.debug
00002756 2E 00 73 00        		.dw '.stabn 0x44,0,464,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         34 00 2C 00
         00 00 00 00
0000276A 88 04 00 00        		.dd LM292-_main
0000276C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE2D                    	.code
                            	LM292:
0000BE2D 05 93              		R1=BP	// QImode move
0000BE2E 0D 05 0B 00        		R2=BP+11
0000BE30 02 97              		R3=R2	// QImode move
0000BE31 C3 92              		R1=[R3]	// QImode move
0000BE32 44 42              		CMP R1,4	// QImode compare
0000BE33 08 4E 01 EE        		NSJNZ L135	//QImode NE
         00 EE      
0000BE36 09 63 00 11        		R1=(-4352)	// QImode move
0000BE38 C8 D2              		[SP--]=R1	// QImode move
0000BE39 40 F0 44 CD        		call _F_FlashErase	// call with return value
0000BE3B 41 00              		SP = SP + 1	//SP
                            	L135:
0000276E                    	.debug
0000276E 2E 00 73 00        		.dw '.stabn 0x44,0,465,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         35 00 2C 00
         00 00 00 00
00002782 97 04 00 00        		.dd LM293-_main
00002784 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE3C                    	.code
                            	LM293:
                            	LBE19:
0000BE3C 0F 9F A6 BB        		pc=L110	// Indirect jump
                            	L111:
00002786                    	.debug
00002786 2E 00 73 00        		.dw '.stabn 0x44,0,467,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         37 00 2C 00
         00 00 00 00
0000279A 99 04 00 00        		.dd LM294-_main
0000279C 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE3E                    	.code
                            	LM294:
                            	LBE17:
0000279E                    	.debug
0000279E 2E 00 73 00        		.dw '.stabn 0x44,0,467,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         37 00 2C 00
         00 00 00 00
000027B2 99 04 00 00        		.dd LM295-_main
000027B4 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE3E                    	.code
                            	LM295:
                            	L70:
                            	
0000BE3E 53 00              		sp+=19
0000BE3F 88 98              		pop bp from [sp]
0000BE40 90 9A              		retf
                            		.endp	// end of main
                            	
000027B6                    	.debug
000027B6 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000027C8 07 00 00 00        		.dd LBB17-_main
000027CA 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE41                    	.code
000027CC                    	.debug
000027CC 2E 00 73 00        		.dw '.stabs "res:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         73 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000BE41                    	.CODE
000027E6                    	.debug
000027E6 2E 00 73 00        		.dw '.stabs "jk:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 6B 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
0000BE41                    	.CODE
000027FF                    	.debug
000027FF 2E 00 73 00        		.dw '.stabs "k:1",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6B 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000BE41                    	.CODE
00002817                    	.debug
00002817 2E 00 73 00        		.dw '.stabs "timeCnt:1",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 69 00
         6D 00 65 00
         43 00 6E 00
         74 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
0000BE41                    	.CODE
00002835                    	.debug
00002835 2E 00 73 00        		.dw '.stabs "random_no:1",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 61 00
         6E 00 64 00
         6F 00 6D 00
         5F 00 6E 00
         6F 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000BE41                    	.CODE
00002855                    	.debug
00002855 2E 00 73 00        		.dw '.stabs "iMoveFlag:1",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 4D 00
         6F 00 76 00
         65 00 46 00
         6C 00 61 00
         67 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000BE41                    	.CODE
00002875                    	.debug
00002875 2E 00 73 00        		.dw '.stabs "BS_Flag:1",128,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 53 00
         5F 00 46 00
         6C 00 61 00
         67 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000BE41                    	.CODE
00002893                    	.debug
00002893 2E 00 73 00        		.dw '.stabs "iMoveFlagBS:1",128,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 4D 00
         6F 00 76 00
         65 00 46 00
         6C 00 61 00
         67 00 42 00
         53 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 37 00
         0D 00 0A 00
0000BE41                    	.CODE
000028B5                    	.debug
000028B5 2E 00 73 00        		.dw '.stabs "iCarState:1",128,0,0,8',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 43 00
         61 00 72 00
         53 00 74 00
         61 00 74 00
         65 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 38 00
         0D 00 0A 00
0000BE41                    	.CODE
000028D5                    	.debug
000028D5 2E 00 73 00        		.dw '.stabs "iCarSpeed:1",128,0,0,9',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 43 00
         61 00 72 00
         53 00 70 00
         65 00 65 00
         64 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 39 00
         0D 00 0A 00
0000BE41                    	.CODE
000028F5                    	.debug
000028F5 2E 00 73 00        		.dw '.stabs "uiIOB:1",128,0,0,10',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         49 00 4F 00
         42 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         30 00 0D 00
         0A 00      
0000BE41                    	.CODE
00002912                    	.debug
00002912 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,11',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         31 00 0D 00
         0A 00      
0000BE41                    	.CODE
0000292B                    	.debug
0000292B 2E 00 73 00        		.dw '.stabs "ulAddr:1",128,0,0,12',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6C 00
         41 00 64 00
         64 00 72 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 32 00
         0D 00 0A 00
0000BE41                    	.CODE
00002949                    	.debug
00002949 2E 00 73 00        		.dw '.stabs "Ret:1",128,0,0,13',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         33 00 0D 00
         0A 00      
0000BE41                    	.CODE
00002964                    	.debug
00002964 2E 00 73 00        		.dw '.stabs "free:1",128,0,0,14',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 72 00
         65 00 65 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 34 00
         0D 00 0A 00
0000BE41                    	.CODE
00002980                    	.debug
00002980 2E 00 73 00        		.dw '.stabs "p:22=*1",128,0,0,15',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         70 00 3A 00
         32 00 32 00
         3D 00 2A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         35 00 0D 00
         0A 00      
0000BE41                    	.CODE
0000299D                    	.debug
0000299D 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000029AF 69 00 00 00        		.dd LBB18-_main
000029B1 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE41                    	.code
000029B3                    	.debug
000029B3 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000029C5 58 01 00 00        		.dd LBE18-_main
000029C7 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE41                    	.code
000029C9                    	.debug
000029C9 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000029DB 05 02 00 00        		.dd LBB19-_main
000029DD 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE41                    	.code
000029DF                    	.debug
000029DF 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000029F1 97 04 00 00        		.dd LBE19-_main
000029F3 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE41                    	.code
000029F5                    	.debug
000029F5 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00002A07 99 04 00 00        		.dd LBE17-_main
00002A09 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE41                    	.code
00002A0B                    	.debug
00002A0B 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00002A14 9C 04 00 00        		.dd LME10-_main
00002A16 0D 00 0A 00        		.dw 0x0d,0x0a
0000BE41                    	.code
                            	LME10:
000004FA                    	.iram
                            	.public _commandID
                            	_commandID:
000004FA 00 00              		.dw 0
000004FB                    	.iram
                            	.public _g_Ret
                            	_g_Ret:
000004FB 00 00              		.dw 0
                            	.external _F_FlashErase
                            	.external _BSR_GetResult
                            	.external _BSR_ImportSDWord
                            	.external _BSR_SDModel
                            	.external _BSR_ExportSDWord
                            	.external _F_FlashWrite1Word
                            	.external _BSR_DeleteSDGroup
                            	.external _SP_Init_IOA
                            	.external _SP_Init_IOB
                            	.external _F_Delay
                            	.external _BSR_Train
                            	.external _SACM_S480_Stop
                            	.external _SACM_S480_ServiceLoop
                            	.external _SACM_S480_Status
                            	.external _SACM_S480_Play
                            	.external _SACM_S480_Initial
                            	.external _BSR_EnableCPUIndicator
                            	.external _BSR_InitRecognizer
                            	.external _SACM_A2000_Stop
                            	.external _ClearWatchDog
                            	.external _SACM_A2000_ServiceLoop
                            	.external _SACM_A2000_Status
                            	.external _SACM_A2000_Play
                            	.external _SACM_A2000_Initial
                            	.external _BSR_StopRecognizer
                            		.end
0 error(s), 0 warning(s).


