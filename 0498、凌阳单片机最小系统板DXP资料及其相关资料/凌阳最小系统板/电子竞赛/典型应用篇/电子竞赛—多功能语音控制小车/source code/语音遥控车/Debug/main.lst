Sunplus u'nSP Assembler - Ver. 1.10.0
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.10-10
                            	// Command: C:\PROGRA~1\Sunplus\UNSPID~1\unSPIDE\cc1.exe C:\DOCUME~1\’≈œÚ—ﬁ\LOCALS~1\Temp\ccasaaaa.i -quiet -dumpbase main.c -gstabs -o .\Debug/main.asm
                            	// gcc2_compiled.:
                            	
0000A6CC                    	.code
                            	Ltext0:
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
0000002C                    	.debug
0000002C 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
00000052                    	.debug
00000052 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6CC                    	.CODE
0000008D                    	.debug
0000008D 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
000000BD                    	.debug
000000BD 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
000000F7                    	.debug
000000F7 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
00000137                    	.debug
00000137 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6CC                    	.CODE
00000176                    	.debug
00000176 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
000001A8                    	.debug
000001A8 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
000001DE                    	.debug
000001DE 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
00000214                    	.debug
00000214 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6CC                    	.CODE
00000247                    	.debug
00000247 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
0000026D                    	.debug
0000026D 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6CC                    	.CODE
00000294                    	.debug
00000294 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
000002C0                    	.debug
000002C0 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6CC                    	.CODE
00000301                    	.debug
00000301 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6CC                    	.CODE
00000330                    	.debug
00000330 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
00000360                    	.debug
00000360 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6CC                    	.CODE
00000395                    	.debug
00000395 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6CC                    	.CODE
000003B5                    	.debug
000003B5 2E 00 73 00        		.dw '.stabs "gActivated:G1",32,0,0,',0,0,offset _gActivated,seg _gActivated,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 41 00
         63 00 74 00
         69 00 76 00
         61 00 74 00
         65 00 64 00
         3A 00 47 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000A6CC                    	.CODE
                            	.public _gActivated
00000502                    	.iram
                            	_gActivated:
00000502 00 00              		.dw 0
000003D9                    	.debug
000003D9 2E 00 73 00        		.dw '.stabs "gTriggerRespond:G20=ar1;0;-1;1",32,0,0,',0,0,offset _gTriggerRespond,seg _gTriggerRespond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 54 00
         72 00 69 00
         67 00 67 00
         65 00 72 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         47 00 32 00
         30 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         2D 00 31 00
         3B 00 31 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 01 00
         00 00 0D 00
         0A 00      
0000A6CC                    	.CODE
                            	.public _gTriggerRespond
00000503                    	.iram
                            	_gTriggerRespond:
00000503 09 00              		.dw 9
00000504 0A 00              		.dw 10
00000505 09 00              		.dw 9
0000040E                    	.debug
0000040E 2E 00 73 00        		.dw '.stabs "gComm2Respond:G21=ar1;0;-1;1",32,0,0,',0,0,offset _gComm2Respond,seg _gComm2Respond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 43 00
         6F 00 6D 00
         6D 00 32 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         47 00 32 00
         31 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         2D 00 31 00
         3B 00 31 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 04 00
         00 00 0D 00
         0A 00      
0000A6CC                    	.CODE
                            	.public _gComm2Respond
00000506                    	.iram
                            	_gComm2Respond:
00000506 0B 00              		.dw 11
00000507 0C 00              		.dw 12
00000508 0D 00              		.dw 13
00000441                    	.debug
00000441 2E 00 73 00        		.dw '.stabs "PlayFlag:G1",32,0,0,',0,0,offset _PlayFlag,seg _PlayFlag,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         46 00 6C 00
         61 00 67 00
         3A 00 47 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         07 00 00 00
         0D 00 0A 00
0000A6CC                    	.CODE
                            	.public _PlayFlag
00000509                    	.iram
                            	_PlayFlag:
00000509 00 00              		.dw 0
00000463                    	.debug
00000463 2E 00 73 00        		.dw '.stabs "uiSpeed:G4",32,0,0,',0,0,offset _uiSpeed,seg _uiSpeed,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         53 00 70 00
         65 00 65 00
         64 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 08 00
         00 00 0D 00
         0A 00      
0000A6CC                    	.CODE
                            	.public _uiSpeed
0000050A                    	.iram
                            	_uiSpeed:
0000050A 00 00              		.dw 0
0000A6CC                    	.code
00000484                    	.debug
00000484 2E 00 73 00        		.dw '.stabs "PlayRespond2:F19",36,0,0,',0,0,offset _PlayRespond2,seg _PlayRespond2,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 32 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
0000A6CC                    	.CODE
                            	.public _PlayRespond2
                            	_PlayRespond2:	.proc
000004AB                    	.debug
000004AB 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
000004BE 00 00 00 00        		.dd LM1-_PlayRespond2
000004C0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6CC                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000A6CC 88 DA              		push bp to [sp]
0000A6CD 41 20              		sp-=1
0000A6CE 08 0B 01 00        		bp=sp+1
                            	
0000A6D0 0D 03 04 00        		R1=BP+4
0000A6D2 C5 D2              		[BP]=R1	// QImode move
000004C2                    	.debug
000004C2 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
000004D5 07 00 00 00        		.dd LM2-_PlayRespond2
000004D7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6D3                    	.code
                            	LM2:
                            	LBB2:
0000A6D3 40 F0 72 9B        		call _BSR_StopRecognizer	// call without return value
000004D9                    	.debug
000004D9 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
000004EC 09 00 00 00        		.dd LM3-_PlayRespond2
000004EE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6D5                    	.code
                            	LM3:
0000A6D5 41 92              		R1=1	// QImode move
0000A6D6 C8 D2              		[SP--]=R1	// QImode move
0000A6D7 40 F0 0A B6        		call _SACM_A2000_Initial	// call with return value
0000A6D9 41 00              		SP=SP+1
000004F0                    	.debug
000004F0 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
00000503 0E 00 00 00        		.dd LM4-_PlayRespond2
00000505 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6DA                    	.code
                            	LM4:
0000A6DA 43 92              		R1=3	// QImode move
0000A6DB C8 D2              		[SP--]=R1	// QImode move
0000A6DC 43 92              		R1=3	// QImode move
0000A6DD C8 D2              		[SP--]=R1	// QImode move
0000A6DE C5 94              		R2=[BP]	// QImode move
0000A6DF C2 92              		R1=[R2]	// QImode move
0000A6E0 C8 D2              		[SP--]=R1	// QImode move
0000A6E1 40 F0 85 B6        		call _SACM_A2000_Play	// call with return value
0000A6E3 43 00              		SP=SP+3
00000507                    	.debug
00000507 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
0000051A 18 00 00 00        		.dd LM5-_PlayRespond2
0000051C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E4                    	.code
                            	LM5:
                            	L3:
0000A6E4 40 F0 96 B7        		call _SACM_A2000_Status	// call with return value
0000A6E6 09 B5 01 00        		R2=R1&1
0000A6E8 40 44              		CMP R2,0	// QImode test
0000A6E9 02 5E              		JZ L6	// QImode NE
0000A6EA 0F 9F EE A6        		PC=L5
                            	L6:
0000A6EC 0F 9F F4 A6        		pc=L4	// Indirect jump
                            	L5:
0000051E                    	.debug
0000051E 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
00000531 22 00 00 00        		.dd LM6-_PlayRespond2
00000533 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6EE                    	.code
                            	LM6:
                            	LBB3:
0000A6EE 40 F0 82 B8        		call _SACM_A2000_ServiceLoop	// call with return value
00000535                    	.debug
00000535 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
00000548 24 00 00 00        		.dd LM7-_PlayRespond2
0000054A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6F0                    	.code
                            	LM7:
0000A6F0 40 F0 6C BF        		call _ClearWatchDog	// call without return value
0000054C                    	.debug
0000054C 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
0000055F 26 00 00 00        		.dd LM8-_PlayRespond2
00000561 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6F2                    	.code
                            	LM8:
                            	LBE3:
0000A6F2 0F 9F E4 A6        		pc=L3	// Indirect jump
                            	L4:
00000563                    	.debug
00000563 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
00000576 28 00 00 00        		.dd LM9-_PlayRespond2
00000578 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6F4                    	.code
                            	LM9:
0000A6F4 40 F0 33 B7        		call _SACM_A2000_Stop	// call with return value
0000057A                    	.debug
0000057A 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
0000058D 2A 00 00 00        		.dd LM10-_PlayRespond2
0000058F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6F6                    	.code
                            	LM10:
0000A6F6 40 92              		R1=0	// QImode move
0000A6F7 C8 D2              		[SP--]=R1	// QImode move
0000A6F8 40 F0 7F 9B        		call _BSR_InitRecognizer	// call with return value
0000A6FA 41 00              		SP=SP+1
00000591                    	.debug
00000591 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
000005A4 2F 00 00 00        		.dd LM11-_PlayRespond2
000005A6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6FB                    	.code
                            	LM11:
0000A6FB 40 F0 40 9B        		call _BSR_EnableCPUIndicator	// call without return value
000005A8                    	.debug
000005A8 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
000005BB 31 00 00 00        		.dd LM12-_PlayRespond2
000005BD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6FD                    	.code
                            	LM12:
                            	LBE2:
000005BF                    	.debug
000005BF 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
000005D2 31 00 00 00        		.dd LM13-_PlayRespond2
000005D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6FD                    	.code
                            	LM13:
                            	L2:
                            	
0000A6FD 41 00              		sp+=1
0000A6FE 88 98              		pop bp from [sp]
0000A6FF 90 9A              		retf
                            		.endp	// end of PlayRespond2
                            	
000005D6                    	.debug
000005D6 2E 00 73 00        		.dw '.stabs "Result:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 75 00
         6C 00 74 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000A700                    	.CODE
000005F4                    	.debug
000005F4 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000606 07 00 00 00        		.dd LBB2-_PlayRespond2
00000608 0D 00 0A 00        		.dw 0x0d,0x0a
0000A700                    	.code
0000060A                    	.debug
0000060A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000061C 22 00 00 00        		.dd LBB3-_PlayRespond2
0000061E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A700                    	.code
00000620                    	.debug
00000620 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000632 26 00 00 00        		.dd LBE3-_PlayRespond2
00000634 0D 00 0A 00        		.dw 0x0d,0x0a
0000A700                    	.code
00000636                    	.debug
00000636 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000648 31 00 00 00        		.dd LBE2-_PlayRespond2
0000064A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A700                    	.code
0000064C                    	.debug
0000064C 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000655 34 00 00 00        		.dd LME1-_PlayRespond2
00000657 0D 00 0A 00        		.dw 0x0d,0x0a
0000A700                    	.code
                            	LME1:
0000A700                    	.code
00000659                    	.debug
00000659 2E 00 73 00        		.dw '.stabs "PlayRespond:F19",36,0,0,',0,0,offset _PlayRespond,seg _PlayRespond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         34 00 00 00
         0D 00 0A 00
0000A700                    	.CODE
                            	.public _PlayRespond
                            	_PlayRespond:	.proc
0000067F                    	.debug
0000067F 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
00000692 00 00 00 00        		.dd LM14-_PlayRespond
00000694 0D 00 0A 00        		.dw 0x0d,0x0a
0000A700                    	.code
                            	LM14:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000A700 88 DA              		push bp to [sp]
0000A701 41 20              		sp-=1
0000A702 08 0B 01 00        		bp=sp+1
                            	
0000A704 0D 03 04 00        		R1=BP+4
0000A706 C5 D2              		[BP]=R1	// QImode move
00000696                    	.debug
00000696 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
000006A9 07 00 00 00        		.dd LM15-_PlayRespond
000006AB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A707                    	.code
                            	LM15:
                            	LBB4:
0000A707 40 F0 72 9B        		call _BSR_StopRecognizer	// call without return value
000006AD                    	.debug
000006AD 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
000006C0 09 00 00 00        		.dd LM16-_PlayRespond
000006C2 0D 00 0A 00        		.dw 0x0d,0x0a
0000A709                    	.code
                            	LM16:
0000A709 41 92              		R1=1	// QImode move
0000A70A C8 D2              		[SP--]=R1	// QImode move
0000A70B 40 F0 01 AF        		call _SACM_S480_Initial	// call with return value
0000A70D 41 00              		SP=SP+1
000006C4                    	.debug
000006C4 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
000006D7 0E 00 00 00        		.dd LM17-_PlayRespond
000006D9 0D 00 0A 00        		.dw 0x0d,0x0a
0000A70E                    	.code
                            	LM17:
0000A70E 43 92              		R1=3	// QImode move
0000A70F C8 D2              		[SP--]=R1	// QImode move
0000A710 43 92              		R1=3	// QImode move
0000A711 C8 D2              		[SP--]=R1	// QImode move
0000A712 C5 94              		R2=[BP]	// QImode move
0000A713 C2 92              		R1=[R2]	// QImode move
0000A714 C8 D2              		[SP--]=R1	// QImode move
0000A715 40 F0 38 AF        		call _SACM_S480_Play	// call with return value
0000A717 43 00              		SP=SP+3
000006DB                    	.debug
000006DB 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
000006EE 18 00 00 00        		.dd LM18-_PlayRespond
000006F0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A718                    	.code
                            	LM18:
                            	L8:
0000A718 40 F0 1A B0        		call _SACM_S480_Status	// call with return value
0000A71A 09 B5 01 00        		R2=R1&1
0000A71C 40 44              		CMP R2,0	// QImode test
0000A71D 02 5E              		JZ L11	// QImode NE
0000A71E 0F 9F 22 A7        		PC=L10
                            	L11:
0000A720 0F 9F 28 A7        		pc=L9	// Indirect jump
                            	L10:
000006F2                    	.debug
000006F2 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
00000705 22 00 00 00        		.dd LM19-_PlayRespond
00000707 0D 00 0A 00        		.dw 0x0d,0x0a
0000A722                    	.code
                            	LM19:
                            	LBB5:
0000A722 40 F0 71 B0        		call _SACM_S480_ServiceLoop	// call with return value
00000709                    	.debug
00000709 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
0000071C 24 00 00 00        		.dd LM20-_PlayRespond
0000071E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A724                    	.code
                            	LM20:
0000A724 40 F0 6C BF        		call _ClearWatchDog	// call without return value
00000720                    	.debug
00000720 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
00000733 26 00 00 00        		.dd LM21-_PlayRespond
00000735 0D 00 0A 00        		.dw 0x0d,0x0a
0000A726                    	.code
                            	LM21:
                            	LBE5:
0000A726 0F 9F 18 A7        		pc=L8	// Indirect jump
                            	L9:
00000737                    	.debug
00000737 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
0000074A 28 00 00 00        		.dd LM22-_PlayRespond
0000074C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A728                    	.code
                            	LM22:
0000A728 40 F0 D0 AF        		call _SACM_S480_Stop	// call with return value
0000074E                    	.debug
0000074E 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
00000761 2A 00 00 00        		.dd LM23-_PlayRespond
00000763 0D 00 0A 00        		.dw 0x0d,0x0a
0000A72A                    	.code
                            	LM23:
0000A72A 40 92              		R1=0	// QImode move
0000A72B C8 D2              		[SP--]=R1	// QImode move
0000A72C 40 F0 7F 9B        		call _BSR_InitRecognizer	// call with return value
0000A72E 41 00              		SP=SP+1
00000765                    	.debug
00000765 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00000778 2F 00 00 00        		.dd LM24-_PlayRespond
0000077A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A72F                    	.code
                            	LM24:
0000A72F 40 F0 40 9B        		call _BSR_EnableCPUIndicator	// call without return value
0000077C                    	.debug
0000077C 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
0000078F 31 00 00 00        		.dd LM25-_PlayRespond
00000791 0D 00 0A 00        		.dw 0x0d,0x0a
0000A731                    	.code
                            	LM25:
                            	LBE4:
00000793                    	.debug
00000793 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
000007A6 31 00 00 00        		.dd LM26-_PlayRespond
000007A8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A731                    	.code
                            	LM26:
                            	L7:
                            	
0000A731 41 00              		sp+=1
0000A732 88 98              		pop bp from [sp]
0000A733 90 9A              		retf
                            		.endp	// end of PlayRespond
                            	
000007AA                    	.debug
000007AA 2E 00 73 00        		.dw '.stabs "Result:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 75 00
         6C 00 74 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000A734                    	.CODE
000007C8                    	.debug
000007C8 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000007DA 07 00 00 00        		.dd LBB4-_PlayRespond
000007DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A734                    	.code
000007DE                    	.debug
000007DE 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000007F0 22 00 00 00        		.dd LBB5-_PlayRespond
000007F2 0D 00 0A 00        		.dw 0x0d,0x0a
0000A734                    	.code
000007F4                    	.debug
000007F4 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000806 26 00 00 00        		.dd LBE5-_PlayRespond
00000808 0D 00 0A 00        		.dw 0x0d,0x0a
0000A734                    	.code
0000080A                    	.debug
0000080A 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000081C 31 00 00 00        		.dd LBE4-_PlayRespond
0000081E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A734                    	.code
00000820                    	.debug
00000820 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000829 34 00 00 00        		.dd LME2-_PlayRespond
0000082B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A734                    	.code
                            	LME2:
0000A734                    	.code
0000082D                    	.debug
0000082D 2E 00 73 00        		.dw '.stabs "TrainWord:F1",36,0,0,',0,0,offset _TrainWord,seg _TrainWord,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 72 00
         61 00 69 00
         6E 00 57 00
         6F 00 72 00
         64 00 3A 00
         46 00 31 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 68 00
         00 00 0D 00
         0A 00      
0000A734                    	.CODE
                            	.public _TrainWord
                            	_TrainWord:	.proc
00000850                    	.debug
00000850 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
00000863 00 00 00 00        		.dd LM27-_TrainWord
00000865 0D 00 0A 00        		.dw 0x0d,0x0a
0000A734                    	.code
                            	LM27:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
0000A734 88 DA              		push bp to [sp]
0000A735 42 20              		sp-=2
0000A736 08 0B 01 00        		bp=sp+1
                            	
0000A738 0D 03 05 00        		R1=BP+5
0000A73A 01 D2              		[bp+1]=R1	// QImode move
00000867                    	.debug
00000867 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
0000087A 07 00 00 00        		.dd LM28-_TrainWord
0000087C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A73B                    	.code
                            	LM28:
                            	LBB6:
0000087E                    	.debug
0000087E 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
00000891 07 00 00 00        		.dd LM29-_TrainWord
00000893 0D 00 0A 00        		.dw 0x0d,0x0a
0000A73B                    	.code
                            	LM29:
0000A73B 01 92              		R1=[bp+1]	// QImode move
0000A73C 01 96              		R3=[bp+1]	// QImode move
0000A73D 0B 05 01 00        		R2=R3+1
0000A73F 02 97              		R3=R2	// QImode move
0000A740 C3 92              		R1=[R3]	// QImode move
0000A741 C8 D2              		[SP--]=R1	// QImode move
0000A742 40 F0 00 A7        		call _PlayRespond	// call without return value
0000A744 41 00              		SP=SP+1
00000895                    	.debug
00000895 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000008A8 11 00 00 00        		.dd LM30-_TrainWord
000008AA 0D 00 0A 00        		.dw 0x0d,0x0a
0000A745                    	.code
                            	LM30:
                            	L13:
0000A745 0F 9F 49 A7        		pc=L15	// Indirect jump
0000A747 0F 9F 9C A7        		pc=L14	// Indirect jump
                            	L15:
000008AC                    	.debug
000008AC 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
000008BF 15 00 00 00        		.dd LM31-_TrainWord
000008C1 0D 00 0A 00        		.dw 0x0d,0x0a
0000A749                    	.code
                            	LM31:
0000A749 40 92              		R1=0	// QImode move
0000A74A C8 D2              		[SP--]=R1	// QImode move
0000A74B 01 94              		R2=[bp+1]	// QImode move
0000A74C C2 92              		R1=[R2]	// QImode move
0000A74D C8 D2              		[SP--]=R1	// QImode move
0000A74E 40 F0 F1 87        		call _BSR_Train	// call with return value
0000A750 42 00              		SP=SP+2
0000A751 C5 D2              		[BP]=R1	// QImode move
000008C3                    	.debug
000008C3 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
000008D6 1E 00 00 00        		.dd LM32-_TrainWord
000008D8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A752                    	.code
                            	LM32:
0000A752 C5 92              		R1=[BP]	// QImode move
0000A753 40 42              		CMP R1,0	// QImode test
0000A754 02 5E              		JZ L28	// QImode NE
0000A755 0F 9F 59 A7        		PC=L16
                            	L28:
0000A757 0F 9F 9C A7        		pc=L14	// Indirect jump
                            	L16:
000008DA                    	.debug
000008DA 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
000008ED 25 00 00 00        		.dd LM33-_TrainWord
000008EF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A759                    	.code
                            	LM33:
0000A759 C5 94              		R2=[BP]	// QImode move
0000A75A 0A 03 06 00        		R1=R2+6
0000A75C 45 42              		CMP R1,5	// QImode compare
0000A75D 02 8E              		JNA L29	// QImode GTU
0000A75E 0F 9F 9A A7        		PC=L17
                            	L29:
0000A760 01 95              		R2=R1	// QImode move
0000A761 02 93              		R1=R2	// QImode move
0000A762 09 03 A4 A6        		R1=R1+L26
0000A764 01 97              		R3=R1	// QImode move
0000A765 C3 94              		R2=[R3]	// QImode move
0000A766 02 9F              		pc=R2	// tablejump
0000A6A4                    	.text
                            	L26:
0000A6A4 97 A7              		.dw L25
0000A6A5 81 A7              		.dw L22
0000A6A6 7E A7              		.dw L21
0000A6A7 76 A7              		.dw L20
0000A6A8 6F A7              		.dw L19
0000A6A9 67 A7              		.dw L18
0000A767                    	.code
                            	L18:
000008F1                    	.debug
000008F1 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00000904 33 00 00 00        		.dd LM34-_TrainWord
00000906 0D 00 0A 00        		.dw 0x0d,0x0a
0000A767                    	.code
                            	LM34:
0000A767 45 92              		R1=5	// QImode move
0000A768 C8 D2              		[SP--]=R1	// QImode move
0000A769 40 F0 00 A7        		call _PlayRespond	// call without return value
0000A76B 41 00              		SP=SP+1
00000908                    	.debug
00000908 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
0000091B 38 00 00 00        		.dd LM35-_TrainWord
0000091D 0D 00 0A 00        		.dw 0x0d,0x0a
0000A76C                    	.code
                            	LM35:
0000A76C 41 62              		R1=(-1)	// QImode move
0000A76D 0F 9F 9F A7        		pc=L12	// Indirect jump
                            	L19:
0000091F                    	.debug
0000091F 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00000932 3B 00 00 00        		.dd LM36-_TrainWord
00000934 0D 00 0A 00        		.dw 0x0d,0x0a
0000A76F                    	.code
                            	LM36:
0000A76F 44 92              		R1=4	// QImode move
0000A770 C8 D2              		[SP--]=R1	// QImode move
0000A771 40 F0 00 A7        		call _PlayRespond	// call without return value
0000A773 41 00              		SP=SP+1
00000936                    	.debug
00000936 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000949 40 00 00 00        		.dd LM37-_TrainWord
0000094B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A774                    	.code
                            	LM37:
0000A774 0F 9F 9A A7        		pc=L17	// Indirect jump
                            	L20:
0000094D                    	.debug
0000094D 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
00000960 42 00 00 00        		.dd LM38-_TrainWord
00000962 0D 00 0A 00        		.dw 0x0d,0x0a
0000A776                    	.code
                            	LM38:
0000A776 4E 92              		R1=14	// QImode move
0000A777 C8 D2              		[SP--]=R1	// QImode move
0000A778 40 F0 00 A7        		call _PlayRespond	// call without return value
0000A77A 41 00              		SP=SP+1
00000964                    	.debug
00000964 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
00000977 47 00 00 00        		.dd LM39-_TrainWord
00000979 0D 00 0A 00        		.dw 0x0d,0x0a
0000A77B                    	.code
                            	LM39:
0000A77B 41 62              		R1=(-1)	// QImode move
0000A77C 0F 9F 9F A7        		pc=L12	// Indirect jump
                            	L21:
0000097B                    	.debug
0000097B 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
0000098E 4A 00 00 00        		.dd LM40-_TrainWord
00000990 0D 00 0A 00        		.dw 0x0d,0x0a
0000A77E                    	.code
                            	LM40:
0000A77E 41 62              		R1=(-1)	// QImode move
0000A77F 0F 9F 9F A7        		pc=L12	// Indirect jump
                            	L22:
00000992                    	.debug
00000992 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
000009A5 4D 00 00 00        		.dd LM41-_TrainWord
000009A7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A781                    	.code
                            	LM41:
0000A781 01 94              		R2=[bp+1]	// QImode move
0000A782 C2 92              		R1=[R2]	// QImode move
0000A783 09 43 00 01        		CMP R1,256	// QImode compare
0000A785 02 5E              		JZ L30	// QImode NE
0000A786 0F 9F 8F A7        		PC=L23
                            	L30:
0000A788 45 92              		R1=5	// QImode move
0000A789 C8 D2              		[SP--]=R1	// QImode move
0000A78A 40 F0 00 A7        		call _PlayRespond	// call without return value
0000A78C 41 00              		SP=SP+1
0000A78D 0F 9F 94 A7        		pc=L24	// Indirect jump
                            	L23:
000009A9                    	.debug
000009A9 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
000009BC 5B 00 00 00        		.dd LM42-_TrainWord
000009BE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A78F                    	.code
                            	LM42:
0000A78F 45 92              		R1=5	// QImode move
0000A790 C8 D2              		[SP--]=R1	// QImode move
0000A791 40 F0 00 A7        		call _PlayRespond	// call without return value
0000A793 41 00              		SP=SP+1
                            	L24:
000009C0                    	.debug
000009C0 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
000009D3 60 00 00 00        		.dd LM43-_TrainWord
000009D5 0D 00 0A 00        		.dw 0x0d,0x0a
0000A794                    	.code
                            	LM43:
0000A794 41 62              		R1=(-1)	// QImode move
0000A795 0F 9F 9F A7        		pc=L12	// Indirect jump
                            	L25:
000009D7                    	.debug
000009D7 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
000009EA 63 00 00 00        		.dd LM44-_TrainWord
000009EC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A797                    	.code
                            	LM44:
0000A797 41 62              		R1=(-1)	// QImode move
0000A798 0F 9F 9F A7        		pc=L12	// Indirect jump
                            	L27:
                            	L17:
000009EE                    	.debug
000009EE 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000A01 66 00 00 00        		.dd LM45-_TrainWord
00000A03 0D 00 0A 00        		.dw 0x0d,0x0a
0000A79A                    	.code
                            	LM45:
0000A79A 0F 9F 45 A7        		pc=L13	// Indirect jump
                            	L14:
00000A05                    	.debug
00000A05 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
00000A18 68 00 00 00        		.dd LM46-_TrainWord
00000A1A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A79C                    	.code
                            	LM46:
0000A79C 40 92              		R1=0	// QImode move
0000A79D 0F 9F 9F A7        		pc=L12	// Indirect jump
00000A1C                    	.debug
00000A1C 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000A2F 6B 00 00 00        		.dd LM47-_TrainWord
00000A31 0D 00 0A 00        		.dw 0x0d,0x0a
0000A79F                    	.code
                            	LM47:
                            	LBE6:
00000A33                    	.debug
00000A33 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000A46 6B 00 00 00        		.dd LM48-_TrainWord
00000A48 0D 00 0A 00        		.dw 0x0d,0x0a
0000A79F                    	.code
                            	LM48:
                            	L12:
                            	
0000A79F 42 00              		sp+=2
0000A7A0 88 98              		pop bp from [sp]
0000A7A1 90 9A              		retf
                            		.endp	// end of TrainWord
                            	
00000A4A                    	.debug
00000A4A 2E 00 73 00        		.dw '.stabs "WordID:p1",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         57 00 6F 00
         72 00 64 00
         49 00 44 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000A7A2                    	.CODE
00000A68                    	.debug
00000A68 2E 00 73 00        		.dw '.stabs "RespondID:p1",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 49 00
         44 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000A7A2                    	.CODE
00000A89                    	.debug
00000A89 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000A9B 07 00 00 00        		.dd LBB6-_TrainWord
00000A9D 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7A2                    	.code
00000A9F                    	.debug
00000A9F 2E 00 73 00        		.dw '.stabs "res:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         73 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A7A2                    	.CODE
00000AB9                    	.debug
00000AB9 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000ACB 6B 00 00 00        		.dd LBE6-_TrainWord
00000ACD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7A2                    	.code
00000ACF                    	.debug
00000ACF 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000AD8 6E 00 00 00        		.dd LME3-_TrainWord
00000ADA 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7A2                    	.code
                            	LME3:
0000A7A2                    	.code
00000ADC                    	.debug
00000ADC 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         D6 00 00 00
         0D 00 0A 00
0000A7A2                    	.CODE
                            	.public _main
                            	_main:	.proc
00000AFA                    	.debug
00000AFA 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00000B0D 00 00 00 00        		.dd LM49-_main
00000B0F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7A2                    	.code
                            	LM49:
                            		// total=10, vars=10
                            		// frame_pointer_needed: 1
0000A7A2 88 DA              		push bp to [sp]
0000A7A3 4A 20              		sp-=10
0000A7A4 08 0B 01 00        		bp=sp+1
                            	
0000A7A6 0D 03 0D 00        		R1=BP+13
0000A7A8 09 D2              		[bp+9]=R1	// QImode move
00000B11                    	.debug
00000B11 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
00000B25 07 00 00 00        		.dd LM50-_main
00000B27 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7A9                    	.code
                            	LM50:
                            	LBB7:
0000A7A9 05 93              		R1=BP	// QImode move
0000A7AA 0D 05 01 00        		R2=BP+1
0000A7AC 40 92              		R1=0	// QImode move
0000A7AD 02 97              		R3=R2	// QImode move
0000A7AE C3 D2              		[R3]=R1	// QImode move
0000A7AF 05 93              		R1=BP	// QImode move
0000A7B0 0D 05 02 00        		R2=BP+2
0000A7B2 40 92              		R1=0	// QImode move
0000A7B3 02 99              		R4=R2	// QImode move
0000A7B4 C4 D2              		[R4]=R1	// QImode move
0000A7B5 05 93              		R1=BP	// QImode move
0000A7B6 0D 05 03 00        		R2=BP+3
0000A7B8 41 62              		R1=(-1)	// QImode move
0000A7B9 02 97              		R3=R2	// QImode move
0000A7BA C3 D2              		[R3]=R1	// QImode move
0000A7BB 05 93              		R1=BP	// QImode move
0000A7BC 0D 05 04 00        		R2=BP+4
0000A7BE 40 92              		R1=0	// QImode move
0000A7BF 02 99              		R4=R2	// QImode move
0000A7C0 C4 D2              		[R4]=R1	// QImode move
00000B29                    	.debug
00000B29 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000B3D 1F 00 00 00        		.dd LM51-_main
00000B3F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7C1                    	.code
                            	LM51:
0000A7C1 05 93              		R1=BP	// QImode move
0000A7C2 0D 05 05 00        		R2=BP+5
0000A7C4 09 93 12 70        		R1=28690	// QImode move
0000A7C6 02 97              		R3=R2	// QImode move
0000A7C7 C3 D2              		[R3]=R1	// QImode move
00000B41                    	.debug
00000B41 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000B55 26 00 00 00        		.dd LM52-_main
00000B57 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7C8                    	.code
                            	LM52:
0000A7C8 05 93              		R1=BP	// QImode move
0000A7C9 0D 05 08 00        		R2=BP+8
0000A7CB 09 93 05 70        		R1=28677	// QImode move
0000A7CD 02 99              		R4=R2	// QImode move
0000A7CE C4 D2              		[R4]=R1	// QImode move
00000B59                    	.debug
00000B59 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000B6D 2D 00 00 00        		.dd LM53-_main
00000B6F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7CF                    	.code
                            	LM53:
0000A7CF 40 F0 81 04        		call _F_Speed	// call with return value
00000B71                    	.debug
00000B71 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000B85 2F 00 00 00        		.dd LM54-_main
00000B87 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7D1                    	.code
                            	LM54:
0000A7D1 05 93              		R1=BP	// QImode move
0000A7D2 0D 05 05 00        		R2=BP+5
0000A7D4 02 97              		R3=R2	// QImode move
0000A7D5 C3 92              		R1=[R3]	// QImode move
0000A7D6 41 94              		R2=1	// QImode move
0000A7D7 01 99              		R4=R1	// QImode move
0000A7D8 C4 D4              		[R4]=R2	// QImode move
00000B89                    	.debug
00000B89 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000B9D 37 00 00 00        		.dd LM55-_main
00000B9F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7D9                    	.code
                            	LM55:
0000A7D9 09 93 FF 00        		R1=255	// QImode move
0000A7DB C8 D2              		[SP--]=R1	// QImode move
0000A7DC 09 63 00 01        		R1=(-256)	// QImode move
0000A7DE C8 D2              		[SP--]=R1	// QImode move
0000A7DF 09 63 00 01        		R1=(-256)	// QImode move
0000A7E1 C8 D2              		[SP--]=R1	// QImode move
0000A7E2 40 F0 A7 BD        		call _SP_Init_IOB	// call with return value
0000A7E4 43 00              		SP=SP+3
00000BA1                    	.debug
00000BA1 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000BB5 43 00 00 00        		.dd LM56-_main
00000BB7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7E5                    	.code
                            	LM56:
0000A7E5 40 92              		R1=0	// QImode move
0000A7E6 C8 D2              		[SP--]=R1	// QImode move
0000A7E7 40 F0 21 86        		call _BSR_DeleteSDGroup	// call with return value
0000A7E9 41 00              		SP=SP+1
00000BB9                    	.debug
00000BB9 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000BCD 48 00 00 00        		.dd LM57-_main
00000BCF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7EA                    	.code
                            	LM57:
0000A7EA 40 92              		R1=0	// QImode move
0000A7EB C8 D2              		[SP--]=R1	// QImode move
0000A7EC 40 F0 00 A7        		call _PlayRespond	// call without return value
0000A7EE 41 00              		SP=SP+1
00000BD1                    	.debug
00000BD1 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000BE5 4D 00 00 00        		.dd LM58-_main
00000BE7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7EF                    	.code
                            	LM58:
                            	L32:
0000A7EF 41 92              		R1=1	// QImode move
0000A7F0 C8 D2              		[SP--]=R1	// QImode move
0000A7F1 09 93 00 01        		R1=256	// QImode move
0000A7F3 C8 D2              		[SP--]=R1	// QImode move
0000A7F4 40 F0 34 A7        		call _TrainWord	// call with return value
0000A7F6 42 00              		SP=SP+2
0000A7F7 40 42              		CMP R1,0	// QImode test
0000A7F8 02 5E              		JZ L105	// QImode NE
0000A7F9 0F 9F FD A7        		PC=L34
                            	L105:
0000A7FB 0F 9F FF A7        		pc=L33	// Indirect jump
                            	L34:
0000A7FD 0F 9F EF A7        		pc=L32	// Indirect jump
                            	L33:
00000BE9                    	.debug
00000BE9 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000BFD 5D 00 00 00        		.dd LM59-_main
00000BFF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7FF                    	.code
                            	LM59:
                            	L35:
0000A7FF 42 92              		R1=2	// QImode move
0000A800 C8 D2              		[SP--]=R1	// QImode move
0000A801 09 93 01 01        		R1=257	// QImode move
0000A803 C8 D2              		[SP--]=R1	// QImode move
0000A804 40 F0 34 A7        		call _TrainWord	// call with return value
0000A806 42 00              		SP=SP+2
0000A807 40 42              		CMP R1,0	// QImode test
0000A808 02 5E              		JZ L106	// QImode NE
0000A809 0F 9F 0D A8        		PC=L37
                            	L106:
0000A80B 0F 9F 0F A8        		pc=L36	// Indirect jump
                            	L37:
0000A80D 0F 9F FF A7        		pc=L35	// Indirect jump
                            	L36:
00000C01                    	.debug
00000C01 2E 00 73 00        		.dw '.stabn 0x44,0,119,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         39 00 2C 00
         00 00 00 00
00000C15 6D 00 00 00        		.dd LM60-_main
00000C17 0D 00 0A 00        		.dw 0x0d,0x0a
0000A80F                    	.code
                            	LM60:
                            	L38:
0000A80F 43 92              		R1=3	// QImode move
0000A810 C8 D2              		[SP--]=R1	// QImode move
0000A811 09 93 02 01        		R1=258	// QImode move
0000A813 C8 D2              		[SP--]=R1	// QImode move
0000A814 40 F0 34 A7        		call _TrainWord	// call with return value
0000A816 42 00              		SP=SP+2
0000A817 40 42              		CMP R1,0	// QImode test
0000A818 02 5E              		JZ L107	// QImode NE
0000A819 0F 9F 1D A8        		PC=L40
                            	L107:
0000A81B 0F 9F 1F A8        		pc=L39	// Indirect jump
                            	L40:
0000A81D 0F 9F 0F A8        		pc=L38	// Indirect jump
                            	L39:
00000C19                    	.debug
00000C19 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000C2D 7D 00 00 00        		.dd LM61-_main
00000C2F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A81F                    	.code
                            	LM61:
                            	L41:
0000A81F 43 92              		R1=3	// QImode move
0000A820 C8 D2              		[SP--]=R1	// QImode move
0000A821 09 93 03 01        		R1=259	// QImode move
0000A823 C8 D2              		[SP--]=R1	// QImode move
0000A824 40 F0 34 A7        		call _TrainWord	// call with return value
0000A826 42 00              		SP=SP+2
0000A827 40 42              		CMP R1,0	// QImode test
0000A828 02 5E              		JZ L108	// QImode NE
0000A829 0F 9F 2D A8        		PC=L43
                            	L108:
0000A82B 0F 9F 2F A8        		pc=L42	// Indirect jump
                            	L43:
0000A82D 0F 9F 1F A8        		pc=L41	// Indirect jump
                            	L42:
00000C31                    	.debug
00000C31 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
00000C45 8D 00 00 00        		.dd LM62-_main
00000C47 0D 00 0A 00        		.dw 0x0d,0x0a
0000A82F                    	.code
                            	LM62:
                            	L44:
0000A82F 43 92              		R1=3	// QImode move
0000A830 C8 D2              		[SP--]=R1	// QImode move
0000A831 09 93 04 01        		R1=260	// QImode move
0000A833 C8 D2              		[SP--]=R1	// QImode move
0000A834 40 F0 34 A7        		call _TrainWord	// call with return value
0000A836 42 00              		SP=SP+2
0000A837 40 42              		CMP R1,0	// QImode test
0000A838 02 5E              		JZ L109	// QImode NE
0000A839 0F 9F 3D A8        		PC=L46
                            	L109:
0000A83B 0F 9F 3F A8        		pc=L45	// Indirect jump
                            	L46:
0000A83D 0F 9F 2F A8        		pc=L44	// Indirect jump
                            	L45:
00000C49                    	.debug
00000C49 2E 00 73 00        		.dw '.stabn 0x44,0,126,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         36 00 2C 00
         00 00 00 00
00000C5D 9D 00 00 00        		.dd LM63-_main
00000C5F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A83F                    	.code
                            	LM63:
0000A83F 40 92              		R1=0	// QImode move
0000A840 C8 D2              		[SP--]=R1	// QImode move
0000A841 40 F0 7F 9B        		call _BSR_InitRecognizer	// call with return value
0000A843 41 00              		SP=SP+1
00000C61                    	.debug
00000C61 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
00000C75 A2 00 00 00        		.dd LM64-_main
00000C77 0D 00 0A 00        		.dw 0x0d,0x0a
0000A844                    	.code
                            	LM64:
0000A844 48 92              		R1=8	// QImode move
0000A845 C8 D2              		[SP--]=R1	// QImode move
0000A846 40 F0 00 A7        		call _PlayRespond	// call without return value
0000A848 41 00              		SP=SP+1
00000C79                    	.debug
00000C79 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000C8D A7 00 00 00        		.dd LM65-_main
00000C8F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A849                    	.code
                            	LM65:
                            	L47:
0000A849 0F 9F 4D A8        		pc=L49	// Indirect jump
0000A84B 0F 9F 23 AC        		pc=L48	// Indirect jump
                            	L49:
00000C91                    	.debug
00000C91 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000CA5 AB 00 00 00        		.dd LM66-_main
00000CA7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A84D                    	.code
                            	LM66:
                            	LBB8:
0000A84D 09 93 FF 00        		R1=255	// QImode move
0000A84F C8 D2              		[SP--]=R1	// QImode move
0000A850 09 63 00 01        		R1=(-256)	// QImode move
0000A852 C8 D2              		[SP--]=R1	// QImode move
0000A853 09 63 00 01        		R1=(-256)	// QImode move
0000A855 C8 D2              		[SP--]=R1	// QImode move
0000A856 40 F0 A7 BD        		call _SP_Init_IOB	// call with return value
0000A858 43 00              		SP=SP+3
00000CA9                    	.debug
00000CA9 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
00000CBD B7 00 00 00        		.dd LM67-_main
00000CBF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A859                    	.code
                            	LM67:
0000A859 05 93              		R1=BP	// QImode move
0000A85A 0D 05 03 00        		R2=BP+3
0000A85C 02 97              		R3=R2	// QImode move
0000A85D C3 92              		R1=[R3]	// QImode move
0000A85E C8 D2              		[SP--]=R1	// QImode move
0000A85F 09 93 05 70        		R1=28677	// QImode move
0000A861 C8 D2              		[SP--]=R1	// QImode move
0000A862 40 F0 BE BD        		call _SP_Export	// call with return value
0000A864 42 00              		SP=SP+2
00000CC1                    	.debug
00000CC1 2E 00 73 00        		.dw '.stabn 0x44,0,137,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         37 00 2C 00
         00 00 00 00
00000CD5 C3 00 00 00        		.dd LM68-_main
00000CD7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A865                    	.code
                            	LM68:
0000A865 05 93              		R1=BP	// QImode move
0000A866 0D 05 05 00        		R2=BP+5
0000A868 02 99              		R4=R2	// QImode move
0000A869 C4 92              		R1=[R4]	// QImode move
0000A86A 41 94              		R2=1	// QImode move
0000A86B 01 97              		R3=R1	// QImode move
0000A86C C3 D4              		[R3]=R2	// QImode move
00000CD9                    	.debug
00000CD9 2E 00 73 00        		.dw '.stabn 0x44,0,140,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         30 00 2C 00
         00 00 00 00
00000CED CB 00 00 00        		.dd LM69-_main
00000CEF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A86D                    	.code
                            	LM69:
0000A86D 05 95              		R2=BP	// QImode move
0000A86E 0D 03 06 00        		R1=BP+6
0000A870 05 95              		R2=BP	// QImode move
0000A871 0D 07 08 00        		R3=BP+8
0000A873 03 99              		R4=R3	// QImode move
0000A874 C4 94              		R2=[R4]	// QImode move
0000A875 02 99              		R4=R2	// QImode move
0000A876 C4 96              		R3=[R4]	// QImode move
0000A877 01 95              		R2=R1	// QImode move
0000A878 C2 D6              		[R2]=R3	// QImode move
00000CF1                    	.debug
00000CF1 2E 00 73 00        		.dw '.stabn 0x44,0,141,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         31 00 2C 00
         00 00 00 00
00000D05 D7 00 00 00        		.dd LM70-_main
00000D07 0D 00 0A 00        		.dw 0x0d,0x0a
0000A879                    	.code
                            	LM70:
0000A879 05 95              		R2=BP	// QImode move
0000A87A 0D 03 06 00        		R1=BP+6
0000A87C 05 95              		R2=BP	// QImode move
0000A87D 0D 07 06 00        		R3=BP+6
0000A87F 03 99              		R4=R3	// QImode move
0000A880 C4 94              		R2=[R4]	// QImode move
0000A881 0A B7 F0 00        		R3=R2&240
0000A883 01 95              		R2=R1	// QImode move
0000A884 C2 D6              		[R2]=R3	// QImode move
00000D09                    	.debug
00000D09 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
00000D1D E3 00 00 00        		.dd LM71-_main
00000D1F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A885                    	.code
                            	LM71:
0000A885 05 93              		R1=BP	// QImode move
0000A886 0D 05 06 00        		R2=BP+6
0000A888 02 97              		R3=R2	// QImode move
0000A889 C3 92              		R1=[R3]	// QImode move
0000A88A 09 43 E0 00        		CMP R1,224	// QImode compare
0000A88C 02 4E              		JNZ L110	// QImode EQ
0000A88D 0F 9F AF A8        		PC=L51
                            	L110:
0000A88F 05 93              		R1=BP	// QImode move
0000A890 0D 05 06 00        		R2=BP+6
0000A892 02 99              		R4=R2	// QImode move
0000A893 C4 92              		R1=[R4]	// QImode move
0000A894 09 43 B0 00        		CMP R1,176	// QImode compare
0000A896 02 4E              		JNZ L111	// QImode EQ
0000A897 0F 9F AF A8        		PC=L51
                            	L111:
0000A899 05 93              		R1=BP	// QImode move
0000A89A 0D 05 06 00        		R2=BP+6
0000A89C 02 97              		R3=R2	// QImode move
0000A89D C3 92              		R1=[R3]	// QImode move
0000A89E 09 43 D0 00        		CMP R1,208	// QImode compare
0000A8A0 02 4E              		JNZ L112	// QImode EQ
0000A8A1 0F 9F AF A8        		PC=L51
                            	L112:
0000A8A3 05 93              		R1=BP	// QImode move
0000A8A4 0D 05 06 00        		R2=BP+6
0000A8A6 02 99              		R4=R2	// QImode move
0000A8A7 C4 92              		R1=[R4]	// QImode move
0000A8A8 09 43 F0 00        		CMP R1,240	// QImode compare
0000A8AA 02 4E              		JNZ L113	// QImode EQ
0000A8AB 0F 9F AF A8        		PC=L51
                            	L113:
0000A8AD 0F 9F A0 A9        		pc=L50	// Indirect jump
                            	L51:
00000D21                    	.debug
00000D21 2E 00 73 00        		.dw '.stabn 0x44,0,144,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         34 00 2C 00
         00 00 00 00
00000D35 0D 01 00 00        		.dd LM72-_main
00000D37 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8AF                    	.code
                            	LM72:
0000A8AF 05 93              		R1=BP	// QImode move
0000A8B0 0D 05 06 00        		R2=BP+6
0000A8B2 02 97              		R3=R2	// QImode move
0000A8B3 C3 92              		R1=[R3]	// QImode move
0000A8B4 09 43 D0 00        		CMP R1,208	// QImode compare
0000A8B6 02 4E              		JNZ L114	// QImode EQ
0000A8B7 0F 9F 71 A9        		PC=L63
                            	L114:
0000A8B9 09 43 D0 00        		CMP R1,208	// QImode compare
0000A8BB 02 8E              		JNA L115	// QImode GTU
0000A8BC 0F 9F C5 A8        		PC=L67
                            	L115:
0000A8BE 09 43 B0 00        		CMP R1,176	// QImode compare
0000A8C0 02 4E              		JNZ L116	// QImode EQ
0000A8C1 0F 9F EB A8        		PC=L54
                            	L116:
0000A8C3 0F 9F 9E A9        		pc=L52	// Indirect jump
                            	L67:
0000A8C5 09 43 E0 00        		CMP R1,224	// QImode compare
0000A8C7 02 4E              		JNZ L117	// QImode EQ
0000A8C8 0F 9F D1 A8        		PC=L53
                            	L117:
0000A8CA 09 43 F0 00        		CMP R1,240	// QImode compare
0000A8CC 02 4E              		JNZ L118	// QImode EQ
0000A8CD 0F 9F 8B A9        		PC=L64
                            	L118:
0000A8CF 0F 9F 9E A9        		pc=L52	// Indirect jump
                            	L53:
00000D39                    	.debug
00000D39 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
00000D4D 2F 01 00 00        		.dd LM73-_main
00000D4F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8D1                    	.code
                            	LM73:
0000A8D1 09 63 01 25        		R1=(-9473)	// QImode move
0000A8D3 C8 D2              		[SP--]=R1	// QImode move
0000A8D4 09 93 05 70        		R1=28677	// QImode move
0000A8D6 C8 D2              		[SP--]=R1	// QImode move
0000A8D7 40 F0 BE BD        		call _SP_Export	// call with return value
0000A8D9 42 00              		SP=SP+2
00000D51                    	.debug
00000D51 2E 00 73 00        		.dw '.stabn 0x44,0,149,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         39 00 2C 00
         00 00 00 00
00000D65 38 01 00 00        		.dd LM74-_main
00000D67 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8DA                    	.code
                            	LM74:
0000A8DA 05 93              		R1=BP	// QImode move
0000A8DB 0D 05 05 00        		R2=BP+5
0000A8DD 02 99              		R4=R2	// QImode move
0000A8DE C4 92              		R1=[R4]	// QImode move
0000A8DF 41 94              		R2=1	// QImode move
0000A8E0 01 97              		R3=R1	// QImode move
0000A8E1 C3 D4              		[R3]=R2	// QImode move
00000D69                    	.debug
00000D69 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
00000D7D 40 01 00 00        		.dd LM75-_main
00000D7F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E2                    	.code
                            	LM75:
0000A8E2 05 93              		R1=BP	// QImode move
0000A8E3 0D 05 03 00        		R2=BP+3
0000A8E5 09 63 01 25        		R1=(-9473)	// QImode move
0000A8E7 02 99              		R4=R2	// QImode move
0000A8E8 C4 D2              		[R4]=R1	// QImode move
00000D81                    	.debug
00000D81 2E 00 73 00        		.dw '.stabn 0x44,0,151,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         31 00 2C 00
         00 00 00 00
00000D95 47 01 00 00        		.dd LM76-_main
00000D97 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E9                    	.code
                            	LM76:
0000A8E9 0F 9F 9E A9        		pc=L52	// Indirect jump
                            	L54:
00000D99                    	.debug
00000D99 2E 00 73 00        		.dw '.stabn 0x44,0,154,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         34 00 2C 00
         00 00 00 00
00000DAD 49 01 00 00        		.dd LM77-_main
00000DAF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8EB                    	.code
                            	LM77:
0000A8EB 09 63 01 02        		R1=(-513)	// QImode move
0000A8ED C8 D2              		[SP--]=R1	// QImode move
0000A8EE 09 93 05 70        		R1=28677	// QImode move
0000A8F0 C8 D2              		[SP--]=R1	// QImode move
0000A8F1 40 F0 BE BD        		call _SP_Export	// call with return value
0000A8F3 42 00              		SP=SP+2
00000DB1                    	.debug
00000DB1 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
00000DC5 52 01 00 00        		.dd LM78-_main
00000DC7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8F4                    	.code
                            	LM78:
0000A8F4 05 93              		R1=BP	// QImode move
0000A8F5 0D 05 07 00        		R2=BP+7
0000A8F7 40 92              		R1=0	// QImode move
0000A8F8 02 97              		R3=R2	// QImode move
0000A8F9 C3 D2              		[R3]=R1	// QImode move
                            	L55:
0000A8FA 05 93              		R1=BP	// QImode move
0000A8FB 0D 05 07 00        		R2=BP+7
0000A8FD 02 99              		R4=R2	// QImode move
0000A8FE C4 92              		R1=[R4]	// QImode move
0000A8FF 43 42              		CMP R1,3	// QImode compare
0000A900 02 9E              		JA L119	// QImode LEU
0000A901 0F 9F 05 A9        		PC=L58
                            	L119:
0000A903 0F 9F 20 A9        		pc=L56	// Indirect jump
                            	L58:
00000DC9                    	.debug
00000DC9 2E 00 73 00        		.dw '.stabn 0x44,0,157,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         37 00 2C 00
         00 00 00 00
00000DDD 63 01 00 00        		.dd LM79-_main
00000DDF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A905                    	.code
                            	LM79:
                            	LBB9:
0000A905 40 F0 7E BF        		call _F_Delay	// call with return value
00000DE1                    	.debug
00000DE1 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
00000DF5 65 01 00 00        		.dd LM80-_main
00000DF7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A907                    	.code
                            	LM80:
0000A907 05 93              		R1=BP	// QImode move
0000A908 0D 05 05 00        		R2=BP+5
0000A90A 02 97              		R3=R2	// QImode move
0000A90B C3 92              		R1=[R3]	// QImode move
0000A90C 41 94              		R2=1	// QImode move
0000A90D 01 99              		R4=R1	// QImode move
0000A90E C4 D4              		[R4]=R2	// QImode move
00000DF9                    	.debug
00000DF9 2E 00 73 00        		.dw '.stabn 0x44,0,159,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         39 00 2C 00
         00 00 00 00
00000E0D 6D 01 00 00        		.dd LM81-_main
00000E0F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A90F                    	.code
                            	LM81:
                            	LBE9:
00000E11                    	.debug
00000E11 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
00000E25 6D 01 00 00        		.dd LM82-_main
00000E27 0D 00 0A 00        		.dw 0x0d,0x0a
0000A90F                    	.code
                            	LM82:
                            	L57:
0000A90F 05 93              		R1=BP	// QImode move
0000A910 0D 05 07 00        		R2=BP+7
0000A912 05 97              		R3=BP	// QImode move
0000A913 0D 03 07 00        		R1=BP+7
0000A915 05 95              		R2=BP	// QImode move
0000A916 0D 07 07 00        		R3=BP+7
0000A918 03 99              		R4=R3	// QImode move
0000A919 C4 94              		R2=[R4]	// QImode move
0000A91A 0A 07 01 00        		R3=R2+1
0000A91C 01 95              		R2=R1	// QImode move
0000A91D C2 D6              		[R2]=R3	// QImode move
0000A91E 0F 9F FA A8        		pc=L55	// Indirect jump
                            	L56:
00000E29                    	.debug
00000E29 2E 00 73 00        		.dw '.stabn 0x44,0,160,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         30 00 2C 00
         00 00 00 00
00000E3D 7E 01 00 00        		.dd LM83-_main
00000E3F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A920                    	.code
                            	LM83:
0000A920 05 93              		R1=BP	// QImode move
0000A921 0D 05 03 00        		R2=BP+3
0000A923 09 63 01 02        		R1=(-513)	// QImode move
0000A925 02 97              		R3=R2	// QImode move
0000A926 C3 D2              		[R3]=R1	// QImode move
00000E41                    	.debug
00000E41 2E 00 73 00        		.dw '.stabn 0x44,0,161,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         31 00 2C 00
         00 00 00 00
00000E55 85 01 00 00        		.dd LM84-_main
00000E57 0D 00 0A 00        		.dw 0x0d,0x0a
0000A927                    	.code
                            	LM84:
0000A927 09 93 FF 00        		R1=255	// QImode move
0000A929 C8 D2              		[SP--]=R1	// QImode move
0000A92A 09 63 00 01        		R1=(-256)	// QImode move
0000A92C C8 D2              		[SP--]=R1	// QImode move
0000A92D 09 63 00 01        		R1=(-256)	// QImode move
0000A92F C8 D2              		[SP--]=R1	// QImode move
0000A930 40 F0 A7 BD        		call _SP_Init_IOB	// call with return value
0000A932 43 00              		SP=SP+3
00000E59                    	.debug
00000E59 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
00000E6D 91 01 00 00        		.dd LM85-_main
00000E6F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A933                    	.code
                            	LM85:
0000A933 09 63 01 15        		R1=(-5377)	// QImode move
0000A935 C8 D2              		[SP--]=R1	// QImode move
0000A936 09 93 05 70        		R1=28677	// QImode move
0000A938 C8 D2              		[SP--]=R1	// QImode move
0000A939 40 F0 BE BD        		call _SP_Export	// call with return value
0000A93B 42 00              		SP=SP+2
00000E71                    	.debug
00000E71 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
00000E85 9A 01 00 00        		.dd LM86-_main
00000E87 0D 00 0A 00        		.dw 0x0d,0x0a
0000A93C                    	.code
                            	LM86:
0000A93C 05 93              		R1=BP	// QImode move
0000A93D 0D 05 07 00        		R2=BP+7
0000A93F 40 92              		R1=0	// QImode move
0000A940 02 99              		R4=R2	// QImode move
0000A941 C4 D2              		[R4]=R1	// QImode move
                            	L59:
0000A942 05 93              		R1=BP	// QImode move
0000A943 0D 05 07 00        		R2=BP+7
0000A945 02 97              		R3=R2	// QImode move
0000A946 C3 92              		R1=[R3]	// QImode move
0000A947 44 42              		CMP R1,4	// QImode compare
0000A948 02 9E              		JA L120	// QImode LEU
0000A949 0F 9F 4D A9        		PC=L62
                            	L120:
0000A94B 0F 9F 68 A9        		pc=L60	// Indirect jump
                            	L62:
00000E89                    	.debug
00000E89 2E 00 73 00        		.dw '.stabn 0x44,0,166,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         36 00 2C 00
         00 00 00 00
00000E9D AB 01 00 00        		.dd LM87-_main
00000E9F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A94D                    	.code
                            	LM87:
                            	LBB10:
0000A94D 40 F0 7E BF        		call _F_Delay	// call with return value
00000EA1                    	.debug
00000EA1 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
00000EB5 AD 01 00 00        		.dd LM88-_main
00000EB7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A94F                    	.code
                            	LM88:
0000A94F 05 93              		R1=BP	// QImode move
0000A950 0D 05 05 00        		R2=BP+5
0000A952 02 99              		R4=R2	// QImode move
0000A953 C4 92              		R1=[R4]	// QImode move
0000A954 41 94              		R2=1	// QImode move
0000A955 01 97              		R3=R1	// QImode move
0000A956 C3 D4              		[R3]=R2	// QImode move
00000EB9                    	.debug
00000EB9 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
00000ECD B5 01 00 00        		.dd LM89-_main
00000ECF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A957                    	.code
                            	LM89:
                            	LBE10:
00000ED1                    	.debug
00000ED1 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
00000EE5 B5 01 00 00        		.dd LM90-_main
00000EE7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A957                    	.code
                            	LM90:
                            	L61:
0000A957 05 93              		R1=BP	// QImode move
0000A958 0D 05 07 00        		R2=BP+7
0000A95A 05 97              		R3=BP	// QImode move
0000A95B 0D 03 07 00        		R1=BP+7
0000A95D 05 95              		R2=BP	// QImode move
0000A95E 0D 07 07 00        		R3=BP+7
0000A960 03 99              		R4=R3	// QImode move
0000A961 C4 94              		R2=[R4]	// QImode move
0000A962 0A 07 01 00        		R3=R2+1
0000A964 01 95              		R2=R1	// QImode move
0000A965 C2 D6              		[R2]=R3	// QImode move
0000A966 0F 9F 42 A9        		pc=L59	// Indirect jump
                            	L60:
00000EE9                    	.debug
00000EE9 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
00000EFD C6 01 00 00        		.dd LM91-_main
00000EFF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A968                    	.code
                            	LM91:
0000A968 05 93              		R1=BP	// QImode move
0000A969 0D 05 03 00        		R2=BP+3
0000A96B 09 63 01 15        		R1=(-5377)	// QImode move
0000A96D 02 97              		R3=R2	// QImode move
0000A96E C3 D2              		[R3]=R1	// QImode move
00000F01                    	.debug
00000F01 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
00000F15 CD 01 00 00        		.dd LM92-_main
00000F17 0D 00 0A 00        		.dw 0x0d,0x0a
0000A96F                    	.code
                            	LM92:
0000A96F 0F 9F 9E A9        		pc=L52	// Indirect jump
                            	L63:
00000F19                    	.debug
00000F19 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
00000F2D CF 01 00 00        		.dd LM93-_main
00000F2F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A971                    	.code
                            	LM93:
0000A971 09 63 01 15        		R1=(-5377)	// QImode move
0000A973 C8 D2              		[SP--]=R1	// QImode move
0000A974 09 93 05 70        		R1=28677	// QImode move
0000A976 C8 D2              		[SP--]=R1	// QImode move
0000A977 40 F0 BE BD        		call _SP_Export	// call with return value
0000A979 42 00              		SP=SP+2
00000F31                    	.debug
00000F31 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
00000F45 D8 01 00 00        		.dd LM94-_main
00000F47 0D 00 0A 00        		.dw 0x0d,0x0a
0000A97A                    	.code
                            	LM94:
0000A97A 05 93              		R1=BP	// QImode move
0000A97B 0D 05 05 00        		R2=BP+5
0000A97D 02 99              		R4=R2	// QImode move
0000A97E C4 92              		R1=[R4]	// QImode move
0000A97F 41 94              		R2=1	// QImode move
0000A980 01 97              		R3=R1	// QImode move
0000A981 C3 D4              		[R3]=R2	// QImode move
00000F49                    	.debug
00000F49 2E 00 73 00        		.dw '.stabn 0x44,0,176,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         36 00 2C 00
         00 00 00 00
00000F5D E0 01 00 00        		.dd LM95-_main
00000F5F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A982                    	.code
                            	LM95:
0000A982 05 93              		R1=BP	// QImode move
0000A983 0D 05 03 00        		R2=BP+3
0000A985 09 63 01 15        		R1=(-5377)	// QImode move
0000A987 02 99              		R4=R2	// QImode move
0000A988 C4 D2              		[R4]=R1	// QImode move
00000F61                    	.debug
00000F61 2E 00 73 00        		.dw '.stabn 0x44,0,177,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         37 00 2C 00
         00 00 00 00
00000F75 E7 01 00 00        		.dd LM96-_main
00000F77 0D 00 0A 00        		.dw 0x0d,0x0a
0000A989                    	.code
                            	LM96:
0000A989 0F 9F 9E A9        		pc=L52	// Indirect jump
                            	L64:
00000F79                    	.debug
00000F79 2E 00 73 00        		.dw '.stabn 0x44,0,181,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         31 00 2C 00
         00 00 00 00
00000F8D E9 01 00 00        		.dd LM97-_main
00000F8F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A98B                    	.code
                            	LM97:
0000A98B 09 63 01 01        		R1=(-257)	// QImode move
0000A98D C8 D2              		[SP--]=R1	// QImode move
0000A98E 09 93 05 70        		R1=28677	// QImode move
0000A990 C8 D2              		[SP--]=R1	// QImode move
0000A991 40 F0 BE BD        		call _SP_Export	// call with return value
0000A993 42 00              		SP=SP+2
00000F91                    	.debug
00000F91 2E 00 73 00        		.dw '.stabn 0x44,0,182,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         32 00 2C 00
         00 00 00 00
00000FA5 F2 01 00 00        		.dd LM98-_main
00000FA7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A994                    	.code
                            	LM98:
0000A994 05 93              		R1=BP	// QImode move
0000A995 0D 05 05 00        		R2=BP+5
0000A997 02 97              		R3=R2	// QImode move
0000A998 C3 92              		R1=[R3]	// QImode move
0000A999 41 94              		R2=1	// QImode move
0000A99A 01 99              		R4=R1	// QImode move
0000A99B C4 D4              		[R4]=R2	// QImode move
00000FA9                    	.debug
00000FA9 2E 00 73 00        		.dw '.stabn 0x44,0,183,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         33 00 2C 00
         00 00 00 00
00000FBD FA 01 00 00        		.dd LM99-_main
00000FBF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A99C                    	.code
                            	LM99:
0000A99C 0F 9F 9E A9        		pc=L52	// Indirect jump
                            	L66:
                            	L52:
00000FC1                    	.debug
00000FC1 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00000FD5 FC 01 00 00        		.dd LM100-_main
00000FD7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A99E                    	.code
                            	LM100:
0000A99E 0F 9F AF A9        		pc=L68	// Indirect jump
                            	L50:
00000FD9                    	.debug
00000FD9 2E 00 73 00        		.dw '.stabn 0x44,0,188,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         38 00 2C 00
         00 00 00 00
00000FED FE 01 00 00        		.dd LM101-_main
00000FEF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9A0                    	.code
                            	LM101:
0000A9A0 05 93              		R1=BP	// QImode move
0000A9A1 0D 05 02 00        		R2=BP+2
0000A9A3 05 97              		R3=BP	// QImode move
0000A9A4 0D 03 02 00        		R1=BP+2
0000A9A6 05 95              		R2=BP	// QImode move
0000A9A7 0D 07 02 00        		R3=BP+2
0000A9A9 03 99              		R4=R3	// QImode move
0000A9AA C4 94              		R2=[R4]	// QImode move
0000A9AB 0A 07 01 00        		R3=R2+1
0000A9AD 01 95              		R2=R1	// QImode move
0000A9AE C2 D6              		[R2]=R3	// QImode move
                            	L68:
00000FF1                    	.debug
00000FF1 2E 00 73 00        		.dw '.stabn 0x44,0,189,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         39 00 2C 00
         00 00 00 00
00001005 0D 02 00 00        		.dd LM102-_main
00001007 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9AF                    	.code
                            	LM102:
0000A9AF 05 93              		R1=BP	// QImode move
0000A9B0 0D 05 02 00        		R2=BP+2
0000A9B2 02 97              		R3=R2	// QImode move
0000A9B3 C3 92              		R1=[R3]	// QImode move
0000A9B4 42 42              		CMP R1,2	// QImode compare
0000A9B5 02 BE              		JG L121	// QImode LE
0000A9B6 0F 9F BE A9        		PC=L69
                            	L121:
0000A9B8 05 93              		R1=BP	// QImode move
0000A9B9 0D 05 02 00        		R2=BP+2
0000A9BB 40 92              		R1=0	// QImode move
0000A9BC 02 99              		R4=R2	// QImode move
0000A9BD C4 D2              		[R4]=R1	// QImode move
                            	L69:
00001009                    	.debug
00001009 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
0000101D 1C 02 00 00        		.dd LM103-_main
0000101F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9BE                    	.code
                            	LM103:
0000A9BE 40 F0 AC 9B        		call _BSR_GetResult	// call with return value
0000A9C0 C5 D2              		[BP]=R1	// QImode move
00001021                    	.debug
00001021 2E 00 73 00        		.dw '.stabn 0x44,0,191,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         31 00 2C 00
         00 00 00 00
00001035 1F 02 00 00        		.dd LM104-_main
00001037 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9C1                    	.code
                            	LM104:
0000A9C1 C5 92              		R1=[BP]	// QImode move
0000A9C2 40 42              		CMP R1,0	// QImode test
0000A9C3 02 BE              		JG L122	// QImode LE
0000A9C4 0F 9F F0 AB        		PC=L70
                            	L122:
00001039                    	.debug
00001039 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
0000104D 24 02 00 00        		.dd LM105-_main
0000104F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9C6                    	.code
                            	LM105:
0000A9C6 11 93 02 05        		R1=[_gActivated]	// QImode move
0000A9C8 40 42              		CMP R1,0	// QImode test
0000A9C9 02 4E              		JNZ L123	// QImode EQ
0000A9CA 0F 9F C9 AB        		PC=L71
                            	L123:
00001051                    	.debug
00001051 2E 00 73 00        		.dw '.stabn 0x44,0,195,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         35 00 2C 00
         00 00 00 00
00001065 2A 02 00 00        		.dd LM106-_main
00001067 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9CC                    	.code
                            	LM106:
0000A9CC 05 93              		R1=BP	// QImode move
0000A9CD 0D 05 01 00        		R2=BP+1
0000A9CF 40 92              		R1=0	// QImode move
0000A9D0 02 97              		R3=R2	// QImode move
0000A9D1 C3 D2              		[R3]=R1	// QImode move
00001069                    	.debug
00001069 2E 00 73 00        		.dw '.stabn 0x44,0,196,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         36 00 2C 00
         00 00 00 00
0000107D 30 02 00 00        		.dd LM107-_main
0000107F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9D2                    	.code
                            	LM107:
0000A9D2 C5 94              		R2=[BP]	// QImode move
0000A9D3 0A 03 00 FF        		R1=R2+(-256)
0000A9D5 44 42              		CMP R1,4	// QImode compare
0000A9D6 02 8E              		JNA L124	// QImode GTU
0000A9D7 0F 9F C7 AB        		PC=L72
                            	L124:
0000A9D9 01 95              		R2=R1	// QImode move
0000A9DA 02 93              		R1=R2	// QImode move
0000A9DB 09 03 AA A6        		R1=R1+L98
0000A9DD 01 99              		R4=R1	// QImode move
0000A9DE C4 94              		R2=[R4]	// QImode move
0000A9DF 02 9F              		pc=R2	// tablejump
0000A6AA                    	.text
                            	L98:
0000A6AA E0 A9              		.dw L73
0000A6AB 3B AA              		.dw L78
0000A6AC 9B AA              		.dw L83
0000A6AD FB AA              		.dw L88
0000A6AE 5B AB              		.dw L93
0000A9E0                    	.code
                            	L73:
00001081                    	.debug
00001081 2E 00 73 00        		.dw '.stabn 0x44,0,199,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         39 00 2C 00
         00 00 00 00
00001095 3E 02 00 00        		.dd LM108-_main
00001097 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9E0                    	.code
                            	LM108:
0000A9E0 09 93 FF 00        		R1=255	// QImode move
0000A9E2 C8 D2              		[SP--]=R1	// QImode move
0000A9E3 09 63 00 01        		R1=(-256)	// QImode move
0000A9E5 C8 D2              		[SP--]=R1	// QImode move
0000A9E6 09 63 00 01        		R1=(-256)	// QImode move
0000A9E8 C8 D2              		[SP--]=R1	// QImode move
0000A9E9 40 F0 A7 BD        		call _SP_Init_IOB	// call with return value
0000A9EB 43 00              		SP=SP+3
00001099                    	.debug
00001099 2E 00 73 00        		.dw '.stabn 0x44,0,200,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         30 00 2C 00
         00 00 00 00
000010AD 4A 02 00 00        		.dd LM109-_main
000010AF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9EC                    	.code
                            	LM109:
0000A9EC 41 62              		R1=(-1)	// QImode move
0000A9ED C8 D2              		[SP--]=R1	// QImode move
0000A9EE 09 93 05 70        		R1=28677	// QImode move
0000A9F0 C8 D2              		[SP--]=R1	// QImode move
0000A9F1 40 F0 BE BD        		call _SP_Export	// call with return value
0000A9F3 42 00              		SP=SP+2
000010B1                    	.debug
000010B1 2E 00 73 00        		.dw '.stabn 0x44,0,201,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         31 00 2C 00
         00 00 00 00
000010C5 52 02 00 00        		.dd LM110-_main
000010C7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9F4                    	.code
                            	LM110:
0000A9F4 05 93              		R1=BP	// QImode move
0000A9F5 0D 05 07 00        		R2=BP+7
0000A9F7 40 92              		R1=0	// QImode move
0000A9F8 02 97              		R3=R2	// QImode move
0000A9F9 C3 D2              		[R3]=R1	// QImode move
                            	L74:
0000A9FA 05 93              		R1=BP	// QImode move
0000A9FB 0D 05 07 00        		R2=BP+7
0000A9FD 02 99              		R4=R2	// QImode move
0000A9FE C4 92              		R1=[R4]	// QImode move
0000A9FF 42 42              		CMP R1,2	// QImode compare
0000AA00 02 9E              		JA L125	// QImode LEU
0000AA01 0F 9F 05 AA        		PC=L77
                            	L125:
0000AA03 0F 9F 20 AA        		pc=L75	// Indirect jump
                            	L77:
000010C9                    	.debug
000010C9 2E 00 73 00        		.dw '.stabn 0x44,0,203,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         33 00 2C 00
         00 00 00 00
000010DD 63 02 00 00        		.dd LM111-_main
000010DF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA05                    	.code
                            	LM111:
                            	LBB11:
0000AA05 40 F0 7E BF        		call _F_Delay	// call with return value
000010E1                    	.debug
000010E1 2E 00 73 00        		.dw '.stabn 0x44,0,204,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         34 00 2C 00
         00 00 00 00
000010F5 65 02 00 00        		.dd LM112-_main
000010F7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA07                    	.code
                            	LM112:
0000AA07 05 93              		R1=BP	// QImode move
0000AA08 0D 05 05 00        		R2=BP+5
0000AA0A 02 97              		R3=R2	// QImode move
0000AA0B C3 92              		R1=[R3]	// QImode move
0000AA0C 41 94              		R2=1	// QImode move
0000AA0D 01 99              		R4=R1	// QImode move
0000AA0E C4 D4              		[R4]=R2	// QImode move
000010F9                    	.debug
000010F9 2E 00 73 00        		.dw '.stabn 0x44,0,205,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         35 00 2C 00
         00 00 00 00
0000110D 6D 02 00 00        		.dd LM113-_main
0000110F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA0F                    	.code
                            	LM113:
                            	LBE11:
00001111                    	.debug
00001111 2E 00 73 00        		.dw '.stabn 0x44,0,201,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         31 00 2C 00
         00 00 00 00
00001125 6D 02 00 00        		.dd LM114-_main
00001127 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA0F                    	.code
                            	LM114:
                            	L76:
0000AA0F 05 93              		R1=BP	// QImode move
0000AA10 0D 05 07 00        		R2=BP+7
0000AA12 05 97              		R3=BP	// QImode move
0000AA13 0D 03 07 00        		R1=BP+7
0000AA15 05 95              		R2=BP	// QImode move
0000AA16 0D 07 07 00        		R3=BP+7
0000AA18 03 99              		R4=R3	// QImode move
0000AA19 C4 94              		R2=[R4]	// QImode move
0000AA1A 0A 07 01 00        		R3=R2+1
0000AA1C 01 95              		R2=R1	// QImode move
0000AA1D C2 D6              		[R2]=R3	// QImode move
0000AA1E 0F 9F FA A9        		pc=L74	// Indirect jump
                            	L75:
00001129                    	.debug
00001129 2E 00 73 00        		.dw '.stabn 0x44,0,206,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         36 00 2C 00
         00 00 00 00
0000113D 7E 02 00 00        		.dd LM115-_main
0000113F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA20                    	.code
                            	LM115:
0000AA20 41 92              		R1=1	// QImode move
0000AA21 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
00001141                    	.debug
00001141 2E 00 73 00        		.dw '.stabn 0x44,0,207,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         37 00 2C 00
         00 00 00 00
00001155 81 02 00 00        		.dd LM116-_main
00001157 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA23                    	.code
                            	LM116:
0000AA23 40 92              		R1=0	// QImode move
0000AA24 C8 D2              		[SP--]=R1	// QImode move
0000AA25 40 F0 CC A6        		call _PlayRespond2	// call without return value
0000AA27 41 00              		SP=SP+1
00001159                    	.debug
00001159 2E 00 73 00        		.dw '.stabn 0x44,0,208,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         38 00 2C 00
         00 00 00 00
0000116D 86 02 00 00        		.dd LM117-_main
0000116F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA28                    	.code
                            	LM117:
0000AA28 40 92              		R1=0	// QImode move
0000AA29 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
00001171                    	.debug
00001171 2E 00 73 00        		.dw '.stabn 0x44,0,209,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         39 00 2C 00
         00 00 00 00
00001185 89 02 00 00        		.dd LM118-_main
00001187 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA2B                    	.code
                            	LM118:
0000AA2B 05 93              		R1=BP	// QImode move
0000AA2C 0D 05 05 00        		R2=BP+5
0000AA2E 02 97              		R3=R2	// QImode move
0000AA2F C3 92              		R1=[R3]	// QImode move
0000AA30 41 94              		R2=1	// QImode move
0000AA31 01 99              		R4=R1	// QImode move
0000AA32 C4 D4              		[R4]=R2	// QImode move
00001189                    	.debug
00001189 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
0000119D 91 02 00 00        		.dd LM119-_main
0000119F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA33                    	.code
                            	LM119:
0000AA33 05 93              		R1=BP	// QImode move
0000AA34 0D 05 03 00        		R2=BP+3
0000AA36 41 62              		R1=(-1)	// QImode move
0000AA37 02 97              		R3=R2	// QImode move
0000AA38 C3 D2              		[R3]=R1	// QImode move
000011A1                    	.debug
000011A1 2E 00 73 00        		.dw '.stabn 0x44,0,213,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         33 00 2C 00
         00 00 00 00
000011B5 97 02 00 00        		.dd LM120-_main
000011B7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA39                    	.code
                            	LM120:
0000AA39 0F 9F C7 AB        		pc=L72	// Indirect jump
                            	L78:
000011B9                    	.debug
000011B9 2E 00 73 00        		.dw '.stabn 0x44,0,215,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         35 00 2C 00
         00 00 00 00
000011CD 99 02 00 00        		.dd LM121-_main
000011CF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA3B                    	.code
                            	LM121:
0000AA3B 09 93 FF 00        		R1=255	// QImode move
0000AA3D C8 D2              		[SP--]=R1	// QImode move
0000AA3E 09 63 00 01        		R1=(-256)	// QImode move
0000AA40 C8 D2              		[SP--]=R1	// QImode move
0000AA41 09 63 00 01        		R1=(-256)	// QImode move
0000AA43 C8 D2              		[SP--]=R1	// QImode move
0000AA44 40 F0 A7 BD        		call _SP_Init_IOB	// call with return value
0000AA46 43 00              		SP=SP+3
000011D1                    	.debug
000011D1 2E 00 73 00        		.dw '.stabn 0x44,0,216,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         36 00 2C 00
         00 00 00 00
000011E5 A5 02 00 00        		.dd LM122-_main
000011E7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA47                    	.code
                            	LM122:
0000AA47 09 63 01 01        		R1=(-257)	// QImode move
0000AA49 C8 D2              		[SP--]=R1	// QImode move
0000AA4A 09 93 05 70        		R1=28677	// QImode move
0000AA4C C8 D2              		[SP--]=R1	// QImode move
0000AA4D 40 F0 BE BD        		call _SP_Export	// call with return value
0000AA4F 42 00              		SP=SP+2
000011E9                    	.debug
000011E9 2E 00 73 00        		.dw '.stabn 0x44,0,217,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         37 00 2C 00
         00 00 00 00
000011FD AE 02 00 00        		.dd LM123-_main
000011FF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA50                    	.code
                            	LM123:
0000AA50 05 93              		R1=BP	// QImode move
0000AA51 0D 05 07 00        		R2=BP+7
0000AA53 40 92              		R1=0	// QImode move
0000AA54 02 99              		R4=R2	// QImode move
0000AA55 C4 D2              		[R4]=R1	// QImode move
                            	L79:
0000AA56 05 93              		R1=BP	// QImode move
0000AA57 0D 05 07 00        		R2=BP+7
0000AA59 02 97              		R3=R2	// QImode move
0000AA5A C3 92              		R1=[R3]	// QImode move
0000AA5B 42 42              		CMP R1,2	// QImode compare
0000AA5C 02 9E              		JA L126	// QImode LEU
0000AA5D 0F 9F 61 AA        		PC=L82
                            	L126:
0000AA5F 0F 9F 7C AA        		pc=L80	// Indirect jump
                            	L82:
00001201                    	.debug
00001201 2E 00 73 00        		.dw '.stabn 0x44,0,219,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         39 00 2C 00
         00 00 00 00
00001215 BF 02 00 00        		.dd LM124-_main
00001217 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA61                    	.code
                            	LM124:
                            	LBB12:
0000AA61 40 F0 7E BF        		call _F_Delay	// call with return value
00001219                    	.debug
00001219 2E 00 73 00        		.dw '.stabn 0x44,0,220,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         30 00 2C 00
         00 00 00 00
0000122D C1 02 00 00        		.dd LM125-_main
0000122F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA63                    	.code
                            	LM125:
0000AA63 05 93              		R1=BP	// QImode move
0000AA64 0D 05 05 00        		R2=BP+5
0000AA66 02 99              		R4=R2	// QImode move
0000AA67 C4 92              		R1=[R4]	// QImode move
0000AA68 41 94              		R2=1	// QImode move
0000AA69 01 97              		R3=R1	// QImode move
0000AA6A C3 D4              		[R3]=R2	// QImode move
00001231                    	.debug
00001231 2E 00 73 00        		.dw '.stabn 0x44,0,221,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         31 00 2C 00
         00 00 00 00
00001245 C9 02 00 00        		.dd LM126-_main
00001247 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA6B                    	.code
                            	LM126:
                            	LBE12:
00001249                    	.debug
00001249 2E 00 73 00        		.dw '.stabn 0x44,0,217,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         37 00 2C 00
         00 00 00 00
0000125D C9 02 00 00        		.dd LM127-_main
0000125F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA6B                    	.code
                            	LM127:
                            	L81:
0000AA6B 05 93              		R1=BP	// QImode move
0000AA6C 0D 05 07 00        		R2=BP+7
0000AA6E 05 97              		R3=BP	// QImode move
0000AA6F 0D 03 07 00        		R1=BP+7
0000AA71 05 95              		R2=BP	// QImode move
0000AA72 0D 07 07 00        		R3=BP+7
0000AA74 03 99              		R4=R3	// QImode move
0000AA75 C4 94              		R2=[R4]	// QImode move
0000AA76 0A 07 01 00        		R3=R2+1
0000AA78 01 95              		R2=R1	// QImode move
0000AA79 C2 D6              		[R2]=R3	// QImode move
0000AA7A 0F 9F 56 AA        		pc=L79	// Indirect jump
                            	L80:
00001261                    	.debug
00001261 2E 00 73 00        		.dw '.stabn 0x44,0,222,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         32 00 2C 00
         00 00 00 00
00001275 DA 02 00 00        		.dd LM128-_main
00001277 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA7C                    	.code
                            	LM128:
0000AA7C 41 92              		R1=1	// QImode move
0000AA7D 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
00001279                    	.debug
00001279 2E 00 73 00        		.dw '.stabn 0x44,0,223,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         33 00 2C 00
         00 00 00 00
0000128D DD 02 00 00        		.dd LM129-_main
0000128F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA7F                    	.code
                            	LM129:
0000AA7F 40 92              		R1=0	// QImode move
0000AA80 C8 D2              		[SP--]=R1	// QImode move
0000AA81 40 F0 CC A6        		call _PlayRespond2	// call without return value
0000AA83 41 00              		SP=SP+1
00001291                    	.debug
00001291 2E 00 73 00        		.dw '.stabn 0x44,0,225,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         35 00 2C 00
         00 00 00 00
000012A5 E2 02 00 00        		.dd LM130-_main
000012A7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA84                    	.code
                            	LM130:
0000AA84 40 92              		R1=0	// QImode move
0000AA85 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
000012A9                    	.debug
000012A9 2E 00 73 00        		.dw '.stabn 0x44,0,226,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         36 00 2C 00
         00 00 00 00
000012BD E5 02 00 00        		.dd LM131-_main
000012BF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA87                    	.code
                            	LM131:
0000AA87 05 93              		R1=BP	// QImode move
0000AA88 0D 05 05 00        		R2=BP+5
0000AA8A 02 97              		R3=R2	// QImode move
0000AA8B C3 92              		R1=[R3]	// QImode move
0000AA8C 41 94              		R2=1	// QImode move
0000AA8D 01 99              		R4=R1	// QImode move
0000AA8E C4 D4              		[R4]=R2	// QImode move
000012C1                    	.debug
000012C1 2E 00 73 00        		.dw '.stabn 0x44,0,227,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         37 00 2C 00
         00 00 00 00
000012D5 ED 02 00 00        		.dd LM132-_main
000012D7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA8F                    	.code
                            	LM132:
0000AA8F 05 93              		R1=BP	// QImode move
0000AA90 0D 05 03 00        		R2=BP+3
0000AA92 09 63 01 01        		R1=(-257)	// QImode move
0000AA94 02 97              		R3=R2	// QImode move
0000AA95 C3 D2              		[R3]=R1	// QImode move
000012D9                    	.debug
000012D9 2E 00 73 00        		.dw '.stabn 0x44,0,228,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         38 00 2C 00
         00 00 00 00
000012ED F4 02 00 00        		.dd LM133-_main
000012EF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA96                    	.code
                            	LM133:
0000AA96 40 92              		R1=0	// QImode move
0000AA97 19 D3 02 05        		[_gActivated]=R1	// QImode move
000012F1                    	.debug
000012F1 2E 00 73 00        		.dw '.stabn 0x44,0,229,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         39 00 2C 00
         00 00 00 00
00001305 F7 02 00 00        		.dd LM134-_main
00001307 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA99                    	.code
                            	LM134:
0000AA99 0F 9F C7 AB        		pc=L72	// Indirect jump
                            	L83:
00001309                    	.debug
00001309 2E 00 73 00        		.dw '.stabn 0x44,0,231,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         31 00 2C 00
         00 00 00 00
0000131D F9 02 00 00        		.dd LM135-_main
0000131F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA9B                    	.code
                            	LM135:
0000AA9B 09 93 FF 00        		R1=255	// QImode move
0000AA9D C8 D2              		[SP--]=R1	// QImode move
0000AA9E 09 63 00 01        		R1=(-256)	// QImode move
0000AAA0 C8 D2              		[SP--]=R1	// QImode move
0000AAA1 09 63 00 01        		R1=(-256)	// QImode move
0000AAA3 C8 D2              		[SP--]=R1	// QImode move
0000AAA4 40 F0 A7 BD        		call _SP_Init_IOB	// call with return value
0000AAA6 43 00              		SP=SP+3
00001321                    	.debug
00001321 2E 00 73 00        		.dw '.stabn 0x44,0,232,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         32 00 2C 00
         00 00 00 00
00001335 05 03 00 00        		.dd LM136-_main
00001337 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAA7                    	.code
                            	LM136:
0000AAA7 09 63 01 25        		R1=(-9473)	// QImode move
0000AAA9 C8 D2              		[SP--]=R1	// QImode move
0000AAAA 09 93 05 70        		R1=28677	// QImode move
0000AAAC C8 D2              		[SP--]=R1	// QImode move
0000AAAD 40 F0 BE BD        		call _SP_Export	// call with return value
0000AAAF 42 00              		SP=SP+2
00001339                    	.debug
00001339 2E 00 73 00        		.dw '.stabn 0x44,0,233,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         33 00 2C 00
         00 00 00 00
0000134D 0E 03 00 00        		.dd LM137-_main
0000134F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAB0                    	.code
                            	LM137:
0000AAB0 05 93              		R1=BP	// QImode move
0000AAB1 0D 05 07 00        		R2=BP+7
0000AAB3 40 92              		R1=0	// QImode move
0000AAB4 02 99              		R4=R2	// QImode move
0000AAB5 C4 D2              		[R4]=R1	// QImode move
                            	L84:
0000AAB6 05 93              		R1=BP	// QImode move
0000AAB7 0D 05 07 00        		R2=BP+7
0000AAB9 02 97              		R3=R2	// QImode move
0000AABA C3 92              		R1=[R3]	// QImode move
0000AABB 42 42              		CMP R1,2	// QImode compare
0000AABC 02 9E              		JA L127	// QImode LEU
0000AABD 0F 9F C1 AA        		PC=L87
                            	L127:
0000AABF 0F 9F DC AA        		pc=L85	// Indirect jump
                            	L87:
00001351                    	.debug
00001351 2E 00 73 00        		.dw '.stabn 0x44,0,235,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         35 00 2C 00
         00 00 00 00
00001365 1F 03 00 00        		.dd LM138-_main
00001367 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAC1                    	.code
                            	LM138:
                            	LBB13:
0000AAC1 40 F0 7E BF        		call _F_Delay	// call with return value
00001369                    	.debug
00001369 2E 00 73 00        		.dw '.stabn 0x44,0,236,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         36 00 2C 00
         00 00 00 00
0000137D 21 03 00 00        		.dd LM139-_main
0000137F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAC3                    	.code
                            	LM139:
0000AAC3 05 93              		R1=BP	// QImode move
0000AAC4 0D 05 05 00        		R2=BP+5
0000AAC6 02 99              		R4=R2	// QImode move
0000AAC7 C4 92              		R1=[R4]	// QImode move
0000AAC8 41 94              		R2=1	// QImode move
0000AAC9 01 97              		R3=R1	// QImode move
0000AACA C3 D4              		[R3]=R2	// QImode move
00001381                    	.debug
00001381 2E 00 73 00        		.dw '.stabn 0x44,0,237,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         37 00 2C 00
         00 00 00 00
00001395 29 03 00 00        		.dd LM140-_main
00001397 0D 00 0A 00        		.dw 0x0d,0x0a
0000AACB                    	.code
                            	LM140:
                            	LBE13:
00001399                    	.debug
00001399 2E 00 73 00        		.dw '.stabn 0x44,0,233,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         33 00 2C 00
         00 00 00 00
000013AD 29 03 00 00        		.dd LM141-_main
000013AF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AACB                    	.code
                            	LM141:
                            	L86:
0000AACB 05 93              		R1=BP	// QImode move
0000AACC 0D 05 07 00        		R2=BP+7
0000AACE 05 97              		R3=BP	// QImode move
0000AACF 0D 03 07 00        		R1=BP+7
0000AAD1 05 95              		R2=BP	// QImode move
0000AAD2 0D 07 07 00        		R3=BP+7
0000AAD4 03 99              		R4=R3	// QImode move
0000AAD5 C4 94              		R2=[R4]	// QImode move
0000AAD6 0A 07 01 00        		R3=R2+1
0000AAD8 01 95              		R2=R1	// QImode move
0000AAD9 C2 D6              		[R2]=R3	// QImode move
0000AADA 0F 9F B6 AA        		pc=L84	// Indirect jump
                            	L85:
000013B1                    	.debug
000013B1 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
000013C5 3A 03 00 00        		.dd LM142-_main
000013C7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AADC                    	.code
                            	LM142:
0000AADC 41 92              		R1=1	// QImode move
0000AADD 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
000013C9                    	.debug
000013C9 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
000013DD 3D 03 00 00        		.dd LM143-_main
000013DF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AADF                    	.code
                            	LM143:
0000AADF 40 92              		R1=0	// QImode move
0000AAE0 C8 D2              		[SP--]=R1	// QImode move
0000AAE1 40 F0 CC A6        		call _PlayRespond2	// call without return value
0000AAE3 41 00              		SP=SP+1
000013E1                    	.debug
000013E1 2E 00 73 00        		.dw '.stabn 0x44,0,240,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         30 00 2C 00
         00 00 00 00
000013F5 42 03 00 00        		.dd LM144-_main
000013F7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAE4                    	.code
                            	LM144:
0000AAE4 40 92              		R1=0	// QImode move
0000AAE5 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
000013F9                    	.debug
000013F9 2E 00 73 00        		.dw '.stabn 0x44,0,242,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         32 00 2C 00
         00 00 00 00
0000140D 45 03 00 00        		.dd LM145-_main
0000140F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAE7                    	.code
                            	LM145:
0000AAE7 05 93              		R1=BP	// QImode move
0000AAE8 0D 05 05 00        		R2=BP+5
0000AAEA 02 97              		R3=R2	// QImode move
0000AAEB C3 92              		R1=[R3]	// QImode move
0000AAEC 41 94              		R2=1	// QImode move
0000AAED 01 99              		R4=R1	// QImode move
0000AAEE C4 D4              		[R4]=R2	// QImode move
00001411                    	.debug
00001411 2E 00 73 00        		.dw '.stabn 0x44,0,245,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         35 00 2C 00
         00 00 00 00
00001425 4D 03 00 00        		.dd LM146-_main
00001427 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAEF                    	.code
                            	LM146:
0000AAEF 05 93              		R1=BP	// QImode move
0000AAF0 0D 05 03 00        		R2=BP+3
0000AAF2 09 63 01 25        		R1=(-9473)	// QImode move
0000AAF4 02 97              		R3=R2	// QImode move
0000AAF5 C3 D2              		[R3]=R1	// QImode move
00001429                    	.debug
00001429 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
0000143D 54 03 00 00        		.dd LM147-_main
0000143F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAF6                    	.code
                            	LM147:
0000AAF6 40 92              		R1=0	// QImode move
0000AAF7 19 D3 02 05        		[_gActivated]=R1	// QImode move
00001441                    	.debug
00001441 2E 00 73 00        		.dw '.stabn 0x44,0,247,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         37 00 2C 00
         00 00 00 00
00001455 57 03 00 00        		.dd LM148-_main
00001457 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAF9                    	.code
                            	LM148:
0000AAF9 0F 9F C7 AB        		pc=L72	// Indirect jump
                            	L88:
00001459                    	.debug
00001459 2E 00 73 00        		.dw '.stabn 0x44,0,249,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         39 00 2C 00
         00 00 00 00
0000146D 59 03 00 00        		.dd LM149-_main
0000146F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AAFB                    	.code
                            	LM149:
0000AAFB 09 93 FF 00        		R1=255	// QImode move
0000AAFD C8 D2              		[SP--]=R1	// QImode move
0000AAFE 09 63 00 01        		R1=(-256)	// QImode move
0000AB00 C8 D2              		[SP--]=R1	// QImode move
0000AB01 09 63 00 01        		R1=(-256)	// QImode move
0000AB03 C8 D2              		[SP--]=R1	// QImode move
0000AB04 40 F0 A7 BD        		call _SP_Init_IOB	// call with return value
0000AB06 43 00              		SP=SP+3
00001471                    	.debug
00001471 2E 00 73 00        		.dw '.stabn 0x44,0,250,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         30 00 2C 00
         00 00 00 00
00001485 65 03 00 00        		.dd LM150-_main
00001487 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB07                    	.code
                            	LM150:
0000AB07 09 63 01 15        		R1=(-5377)	// QImode move
0000AB09 C8 D2              		[SP--]=R1	// QImode move
0000AB0A 09 93 05 70        		R1=28677	// QImode move
0000AB0C C8 D2              		[SP--]=R1	// QImode move
0000AB0D 40 F0 BE BD        		call _SP_Export	// call with return value
0000AB0F 42 00              		SP=SP+2
00001489                    	.debug
00001489 2E 00 73 00        		.dw '.stabn 0x44,0,251,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         31 00 2C 00
         00 00 00 00
0000149D 6E 03 00 00        		.dd LM151-_main
0000149F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB10                    	.code
                            	LM151:
0000AB10 05 93              		R1=BP	// QImode move
0000AB11 0D 05 07 00        		R2=BP+7
0000AB13 40 92              		R1=0	// QImode move
0000AB14 02 99              		R4=R2	// QImode move
0000AB15 C4 D2              		[R4]=R1	// QImode move
                            	L89:
0000AB16 05 93              		R1=BP	// QImode move
0000AB17 0D 05 07 00        		R2=BP+7
0000AB19 02 97              		R3=R2	// QImode move
0000AB1A C3 92              		R1=[R3]	// QImode move
0000AB1B 42 42              		CMP R1,2	// QImode compare
0000AB1C 02 9E              		JA L128	// QImode LEU
0000AB1D 0F 9F 21 AB        		PC=L92
                            	L128:
0000AB1F 0F 9F 3C AB        		pc=L90	// Indirect jump
                            	L92:
000014A1                    	.debug
000014A1 2E 00 73 00        		.dw '.stabn 0x44,0,253,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         33 00 2C 00
         00 00 00 00
000014B5 7F 03 00 00        		.dd LM152-_main
000014B7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB21                    	.code
                            	LM152:
                            	LBB14:
0000AB21 40 F0 7E BF        		call _F_Delay	// call with return value
000014B9                    	.debug
000014B9 2E 00 73 00        		.dw '.stabn 0x44,0,254,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         34 00 2C 00
         00 00 00 00
000014CD 81 03 00 00        		.dd LM153-_main
000014CF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB23                    	.code
                            	LM153:
0000AB23 05 93              		R1=BP	// QImode move
0000AB24 0D 05 05 00        		R2=BP+5
0000AB26 02 99              		R4=R2	// QImode move
0000AB27 C4 92              		R1=[R4]	// QImode move
0000AB28 41 94              		R2=1	// QImode move
0000AB29 01 97              		R3=R1	// QImode move
0000AB2A C3 D4              		[R3]=R2	// QImode move
000014D1                    	.debug
000014D1 2E 00 73 00        		.dw '.stabn 0x44,0,255,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         35 00 2C 00
         00 00 00 00
000014E5 89 03 00 00        		.dd LM154-_main
000014E7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB2B                    	.code
                            	LM154:
                            	LBE14:
000014E9                    	.debug
000014E9 2E 00 73 00        		.dw '.stabn 0x44,0,251,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         31 00 2C 00
         00 00 00 00
000014FD 89 03 00 00        		.dd LM155-_main
000014FF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB2B                    	.code
                            	LM155:
                            	L91:
0000AB2B 05 93              		R1=BP	// QImode move
0000AB2C 0D 05 07 00        		R2=BP+7
0000AB2E 05 97              		R3=BP	// QImode move
0000AB2F 0D 03 07 00        		R1=BP+7
0000AB31 05 95              		R2=BP	// QImode move
0000AB32 0D 07 07 00        		R3=BP+7
0000AB34 03 99              		R4=R3	// QImode move
0000AB35 C4 94              		R2=[R4]	// QImode move
0000AB36 0A 07 01 00        		R3=R2+1
0000AB38 01 95              		R2=R1	// QImode move
0000AB39 C2 D6              		[R2]=R3	// QImode move
0000AB3A 0F 9F 16 AB        		pc=L89	// Indirect jump
                            	L90:
00001501                    	.debug
00001501 2E 00 73 00        		.dw '.stabn 0x44,0,256,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         36 00 2C 00
         00 00 00 00
00001515 9A 03 00 00        		.dd LM156-_main
00001517 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB3C                    	.code
                            	LM156:
0000AB3C 41 92              		R1=1	// QImode move
0000AB3D 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
00001519                    	.debug
00001519 2E 00 73 00        		.dw '.stabn 0x44,0,257,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         37 00 2C 00
         00 00 00 00
0000152D 9D 03 00 00        		.dd LM157-_main
0000152F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB3F                    	.code
                            	LM157:
0000AB3F 40 92              		R1=0	// QImode move
0000AB40 C8 D2              		[SP--]=R1	// QImode move
0000AB41 40 F0 CC A6        		call _PlayRespond2	// call without return value
0000AB43 41 00              		SP=SP+1
00001531                    	.debug
00001531 2E 00 73 00        		.dw '.stabn 0x44,0,258,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         38 00 2C 00
         00 00 00 00
00001545 A2 03 00 00        		.dd LM158-_main
00001547 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB44                    	.code
                            	LM158:
0000AB44 40 92              		R1=0	// QImode move
0000AB45 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
00001549                    	.debug
00001549 2E 00 73 00        		.dw '.stabn 0x44,0,259,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         39 00 2C 00
         00 00 00 00
0000155D A5 03 00 00        		.dd LM159-_main
0000155F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB47                    	.code
                            	LM159:
0000AB47 05 93              		R1=BP	// QImode move
0000AB48 0D 05 05 00        		R2=BP+5
0000AB4A 02 97              		R3=R2	// QImode move
0000AB4B C3 92              		R1=[R3]	// QImode move
0000AB4C 41 94              		R2=1	// QImode move
0000AB4D 01 99              		R4=R1	// QImode move
0000AB4E C4 D4              		[R4]=R2	// QImode move
00001561                    	.debug
00001561 2E 00 73 00        		.dw '.stabn 0x44,0,261,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         31 00 2C 00
         00 00 00 00
00001575 AD 03 00 00        		.dd LM160-_main
00001577 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB4F                    	.code
                            	LM160:
0000AB4F 05 93              		R1=BP	// QImode move
0000AB50 0D 05 03 00        		R2=BP+3
0000AB52 09 63 01 15        		R1=(-5377)	// QImode move
0000AB54 02 97              		R3=R2	// QImode move
0000AB55 C3 D2              		[R3]=R1	// QImode move
00001579                    	.debug
00001579 2E 00 73 00        		.dw '.stabn 0x44,0,262,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         32 00 2C 00
         00 00 00 00
0000158D B4 03 00 00        		.dd LM161-_main
0000158F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB56                    	.code
                            	LM161:
0000AB56 40 92              		R1=0	// QImode move
0000AB57 19 D3 02 05        		[_gActivated]=R1	// QImode move
00001591                    	.debug
00001591 2E 00 73 00        		.dw '.stabn 0x44,0,263,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         33 00 2C 00
         00 00 00 00
000015A5 B7 03 00 00        		.dd LM162-_main
000015A7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB59                    	.code
                            	LM162:
0000AB59 0F 9F C7 AB        		pc=L72	// Indirect jump
                            	L93:
000015A9                    	.debug
000015A9 2E 00 73 00        		.dw '.stabn 0x44,0,265,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         35 00 2C 00
         00 00 00 00
000015BD B9 03 00 00        		.dd LM163-_main
000015BF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB5B                    	.code
                            	LM163:
0000AB5B 09 93 FF 00        		R1=255	// QImode move
0000AB5D C8 D2              		[SP--]=R1	// QImode move
0000AB5E 09 63 00 01        		R1=(-256)	// QImode move
0000AB60 C8 D2              		[SP--]=R1	// QImode move
0000AB61 09 63 00 01        		R1=(-256)	// QImode move
0000AB63 C8 D2              		[SP--]=R1	// QImode move
0000AB64 40 F0 A7 BD        		call _SP_Init_IOB	// call with return value
0000AB66 43 00              		SP=SP+3
000015C1                    	.debug
000015C1 2E 00 73 00        		.dw '.stabn 0x44,0,266,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         36 00 2C 00
         00 00 00 00
000015D5 C5 03 00 00        		.dd LM164-_main
000015D7 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB67                    	.code
                            	LM164:
0000AB67 09 63 01 02        		R1=(-513)	// QImode move
0000AB69 C8 D2              		[SP--]=R1	// QImode move
0000AB6A 09 93 05 70        		R1=28677	// QImode move
0000AB6C C8 D2              		[SP--]=R1	// QImode move
0000AB6D 40 F0 BE BD        		call _SP_Export	// call with return value
0000AB6F 42 00              		SP=SP+2
000015D9                    	.debug
000015D9 2E 00 73 00        		.dw '.stabn 0x44,0,267,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         37 00 2C 00
         00 00 00 00
000015ED CE 03 00 00        		.dd LM165-_main
000015EF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB70                    	.code
                            	LM165:
0000AB70 05 95              		R2=BP	// QImode move
0000AB71 0D 03 04 00        		R1=BP+4
0000AB73 05 95              		R2=BP	// QImode move
0000AB74 0D 07 04 00        		R3=BP+4
0000AB76 03 99              		R4=R3	// QImode move
0000AB77 C4 94              		R2=[R4]	// QImode move
0000AB78 0A 07 01 00        		R3=R2+1
0000AB7A 01 95              		R2=R1	// QImode move
0000AB7B C2 D6              		[R2]=R3	// QImode move
000015F1                    	.debug
000015F1 2E 00 73 00        		.dw '.stabn 0x44,0,268,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         38 00 2C 00
         00 00 00 00
00001605 DA 03 00 00        		.dd LM166-_main
00001607 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB7C                    	.code
                            	LM166:
0000AB7C 05 93              		R1=BP	// QImode move
0000AB7D 0D 05 07 00        		R2=BP+7
0000AB7F 40 92              		R1=0	// QImode move
0000AB80 02 97              		R3=R2	// QImode move
0000AB81 C3 D2              		[R3]=R1	// QImode move
                            	L94:
0000AB82 05 93              		R1=BP	// QImode move
0000AB83 0D 05 07 00        		R2=BP+7
0000AB85 02 99              		R4=R2	// QImode move
0000AB86 C4 92              		R1=[R4]	// QImode move
0000AB87 42 42              		CMP R1,2	// QImode compare
0000AB88 02 9E              		JA L129	// QImode LEU
0000AB89 0F 9F 8D AB        		PC=L97
                            	L129:
0000AB8B 0F 9F A8 AB        		pc=L95	// Indirect jump
                            	L97:
00001609                    	.debug
00001609 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
0000161D EB 03 00 00        		.dd LM167-_main
0000161F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB8D                    	.code
                            	LM167:
                            	LBB15:
0000AB8D 40 F0 7E BF        		call _F_Delay	// call with return value
00001621                    	.debug
00001621 2E 00 73 00        		.dw '.stabn 0x44,0,271,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         31 00 2C 00
         00 00 00 00
00001635 ED 03 00 00        		.dd LM168-_main
00001637 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB8F                    	.code
                            	LM168:
0000AB8F 05 93              		R1=BP	// QImode move
0000AB90 0D 05 05 00        		R2=BP+5
0000AB92 02 97              		R3=R2	// QImode move
0000AB93 C3 92              		R1=[R3]	// QImode move
0000AB94 41 94              		R2=1	// QImode move
0000AB95 01 99              		R4=R1	// QImode move
0000AB96 C4 D4              		[R4]=R2	// QImode move
00001639                    	.debug
00001639 2E 00 73 00        		.dw '.stabn 0x44,0,272,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         32 00 2C 00
         00 00 00 00
0000164D F5 03 00 00        		.dd LM169-_main
0000164F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB97                    	.code
                            	LM169:
                            	LBE15:
00001651                    	.debug
00001651 2E 00 73 00        		.dw '.stabn 0x44,0,268,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         38 00 2C 00
         00 00 00 00
00001665 F5 03 00 00        		.dd LM170-_main
00001667 0D 00 0A 00        		.dw 0x0d,0x0a
0000AB97                    	.code
                            	LM170:
                            	L96:
0000AB97 05 93              		R1=BP	// QImode move
0000AB98 0D 05 07 00        		R2=BP+7
0000AB9A 05 97              		R3=BP	// QImode move
0000AB9B 0D 03 07 00        		R1=BP+7
0000AB9D 05 95              		R2=BP	// QImode move
0000AB9E 0D 07 07 00        		R3=BP+7
0000ABA0 03 99              		R4=R3	// QImode move
0000ABA1 C4 94              		R2=[R4]	// QImode move
0000ABA2 0A 07 01 00        		R3=R2+1
0000ABA4 01 95              		R2=R1	// QImode move
0000ABA5 C2 D6              		[R2]=R3	// QImode move
0000ABA6 0F 9F 82 AB        		pc=L94	// Indirect jump
                            	L95:
00001669                    	.debug
00001669 2E 00 73 00        		.dw '.stabn 0x44,0,273,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         33 00 2C 00
         00 00 00 00
0000167D 06 04 00 00        		.dd LM171-_main
0000167F 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABA8                    	.code
                            	LM171:
0000ABA8 41 92              		R1=1	// QImode move
0000ABA9 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
00001681                    	.debug
00001681 2E 00 73 00        		.dw '.stabn 0x44,0,274,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         34 00 2C 00
         00 00 00 00
00001695 09 04 00 00        		.dd LM172-_main
00001697 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABAB                    	.code
                            	LM172:
0000ABAB 40 92              		R1=0	// QImode move
0000ABAC C8 D2              		[SP--]=R1	// QImode move
0000ABAD 40 F0 CC A6        		call _PlayRespond2	// call without return value
0000ABAF 41 00              		SP=SP+1
00001699                    	.debug
00001699 2E 00 73 00        		.dw '.stabn 0x44,0,275,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         35 00 2C 00
         00 00 00 00
000016AD 0E 04 00 00        		.dd LM173-_main
000016AF 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABB0                    	.code
                            	LM173:
0000ABB0 40 92              		R1=0	// QImode move
0000ABB1 19 D3 09 05        		[_PlayFlag]=R1	// QImode move
000016B1                    	.debug
000016B1 2E 00 73 00        		.dw '.stabn 0x44,0,276,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         36 00 2C 00
         00 00 00 00
000016C5 11 04 00 00        		.dd LM174-_main
000016C7 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABB3                    	.code
                            	LM174:
0000ABB3 05 93              		R1=BP	// QImode move
0000ABB4 0D 05 05 00        		R2=BP+5
0000ABB6 02 97              		R3=R2	// QImode move
0000ABB7 C3 92              		R1=[R3]	// QImode move
0000ABB8 41 94              		R2=1	// QImode move
0000ABB9 01 99              		R4=R1	// QImode move
0000ABBA C4 D4              		[R4]=R2	// QImode move
000016C9                    	.debug
000016C9 2E 00 73 00        		.dw '.stabn 0x44,0,278,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         38 00 2C 00
         00 00 00 00
000016DD 19 04 00 00        		.dd LM175-_main
000016DF 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABBB                    	.code
                            	LM175:
0000ABBB 05 93              		R1=BP	// QImode move
0000ABBC 0D 05 03 00        		R2=BP+3
0000ABBE 09 63 01 02        		R1=(-513)	// QImode move
0000ABC0 02 97              		R3=R2	// QImode move
0000ABC1 C3 D2              		[R3]=R1	// QImode move
000016E1                    	.debug
000016E1 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
000016F5 20 04 00 00        		.dd LM176-_main
000016F7 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABC2                    	.code
                            	LM176:
0000ABC2 40 92              		R1=0	// QImode move
0000ABC3 19 D3 02 05        		[_gActivated]=R1	// QImode move
000016F9                    	.debug
000016F9 2E 00 73 00        		.dw '.stabn 0x44,0,280,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         30 00 2C 00
         00 00 00 00
0000170D 23 04 00 00        		.dd LM177-_main
0000170F 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABC5                    	.code
                            	LM177:
0000ABC5 0F 9F C7 AB        		pc=L72	// Indirect jump
                            	L99:
                            	L72:
00001711                    	.debug
00001711 2E 00 73 00        		.dw '.stabn 0x44,0,282,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         32 00 2C 00
         00 00 00 00
00001725 25 04 00 00        		.dd LM178-_main
00001727 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABC7                    	.code
                            	LM178:
0000ABC7 0F 9F EE AB        		pc=L100	// Indirect jump
                            	L71:
00001729                    	.debug
00001729 2E 00 73 00        		.dw '.stabn 0x44,0,285,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         35 00 2C 00
         00 00 00 00
0000173D 27 04 00 00        		.dd LM179-_main
0000173F 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABC9                    	.code
                            	LM179:
0000ABC9 C5 92              		R1=[BP]	// QImode move
0000ABCA 09 43 00 01        		CMP R1,256	// QImode compare
0000ABCC 02 5E              		JZ L130	// QImode NE
0000ABCD 0F 9F EE AB        		PC=L100
                            	L130:
00001741                    	.debug
00001741 2E 00 73 00        		.dw '.stabn 0x44,0,287,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         37 00 2C 00
         00 00 00 00
00001755 2D 04 00 00        		.dd LM180-_main
00001757 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABCF                    	.code
                            	LM180:
0000ABCF 05 93              		R1=BP	// QImode move
0000ABD0 0D 05 05 00        		R2=BP+5
0000ABD2 02 99              		R4=R2	// QImode move
0000ABD3 C4 92              		R1=[R4]	// QImode move
0000ABD4 41 94              		R2=1	// QImode move
0000ABD5 01 97              		R3=R1	// QImode move
0000ABD6 C3 D4              		[R3]=R2	// QImode move
00001759                    	.debug
00001759 2E 00 73 00        		.dw '.stabn 0x44,0,288,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         38 00 2C 00
         00 00 00 00
0000176D 35 04 00 00        		.dd LM181-_main
0000176F 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABD7                    	.code
                            	LM181:
0000ABD7 05 93              		R1=BP	// QImode move
0000ABD8 0D 05 02 00        		R2=BP+2
0000ABDA 09 93 03 05        		R1=_gTriggerRespond	// QImode move
0000ABDC 02 99              		R4=R2	// QImode move
0000ABDD C4 94              		R2=[R4]	// QImode move
0000ABDE 02 03              		R1+=R2	// addqi3_r0r
0000ABDF 01 97              		R3=R1	// QImode move
0000ABE0 C3 94              		R2=[R3]	// QImode move
0000ABE1 C8 D4              		[SP--]=R2	// QImode move
0000ABE2 40 F0 00 A7        		call _PlayRespond	// call without return value
0000ABE4 41 00              		SP=SP+1
00001771                    	.debug
00001771 2E 00 73 00        		.dw '.stabn 0x44,0,289,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         39 00 2C 00
         00 00 00 00
00001785 43 04 00 00        		.dd LM182-_main
00001787 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABE5                    	.code
                            	LM182:
0000ABE5 41 92              		R1=1	// QImode move
0000ABE6 19 D3 02 05        		[_gActivated]=R1	// QImode move
00001789                    	.debug
00001789 2E 00 73 00        		.dw '.stabn 0x44,0,290,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         30 00 2C 00
         00 00 00 00
0000179D 46 04 00 00        		.dd LM183-_main
0000179F 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABE8                    	.code
                            	LM183:
0000ABE8 05 93              		R1=BP	// QImode move
0000ABE9 0D 05 01 00        		R2=BP+1
0000ABEB 40 92              		R1=0	// QImode move
0000ABEC 02 99              		R4=R2	// QImode move
0000ABED C4 D2              		[R4]=R1	// QImode move
                            	L101:
                            	L100:
000017A1                    	.debug
000017A1 2E 00 73 00        		.dw '.stabn 0x44,0,293,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         33 00 2C 00
         00 00 00 00
000017B5 4C 04 00 00        		.dd LM184-_main
000017B7 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABEE                    	.code
                            	LM184:
0000ABEE 0F 9F 21 AC        		pc=L102	// Indirect jump
                            	L70:
000017B9                    	.debug
000017B9 2E 00 73 00        		.dw '.stabn 0x44,0,294,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         34 00 2C 00
         00 00 00 00
000017CD 4E 04 00 00        		.dd LM185-_main
000017CF 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABF0                    	.code
                            	LM185:
0000ABF0 11 93 02 05        		R1=[_gActivated]	// QImode move
0000ABF2 40 42              		CMP R1,0	// QImode test
0000ABF3 02 4E              		JNZ L131	// QImode EQ
0000ABF4 0F 9F 21 AC        		PC=L102
                            	L131:
000017D1                    	.debug
000017D1 2E 00 73 00        		.dw '.stabn 0x44,0,296,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         36 00 2C 00
         00 00 00 00
000017E5 54 04 00 00        		.dd LM186-_main
000017E7 0D 00 0A 00        		.dw 0x0d,0x0a
0000ABF6                    	.code
                            	LM186:
0000ABF6 05 93              		R1=BP	// QImode move
0000ABF7 0D 05 01 00        		R2=BP+1
0000ABF9 05 97              		R3=BP	// QImode move
0000ABFA 0D 03 01 00        		R1=BP+1
0000ABFC 05 95              		R2=BP	// QImode move
0000ABFD 0D 07 01 00        		R3=BP+1
0000ABFF 03 95              		R2=R3	// QImode move
0000AC00 C2 98              		R4=[R2]	// QImode move
0000AC01 0C 05 01 00        		R2=R4+1
0000AC03 02 97              		R3=R2	// QImode move
0000AC04 01 99              		R4=R1	// QImode move
0000AC05 C4 D6              		[R4]=R3	// QImode move
0000AC06 0B 47 C2 01        		CMP R3,450	// QImode compare
0000AC08 02 BE              		JG L132	// QImode LE
0000AC09 0F 9F 21 AC        		PC=L102
                            	L132:
000017E9                    	.debug
000017E9 2E 00 73 00        		.dw '.stabn 0x44,0,298,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         38 00 2C 00
         00 00 00 00
000017FD 69 04 00 00        		.dd LM187-_main
000017FF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC0B                    	.code
                            	LM187:
0000AC0B 05 93              		R1=BP	// QImode move
0000AC0C 0D 05 05 00        		R2=BP+5
0000AC0E 02 97              		R3=R2	// QImode move
0000AC0F C3 92              		R1=[R3]	// QImode move
0000AC10 41 94              		R2=1	// QImode move
0000AC11 01 99              		R4=R1	// QImode move
0000AC12 C4 D4              		[R4]=R2	// QImode move
00001801                    	.debug
00001801 2E 00 73 00        		.dw '.stabn 0x44,0,299,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         39 00 2C 00
         00 00 00 00
00001815 71 04 00 00        		.dd LM188-_main
00001817 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC13                    	.code
                            	LM188:
0000AC13 45 92              		R1=5	// QImode move
0000AC14 C8 D2              		[SP--]=R1	// QImode move
0000AC15 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AC17 41 00              		SP=SP+1
00001819                    	.debug
00001819 2E 00 73 00        		.dw '.stabn 0x44,0,300,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         30 00 2C 00
         00 00 00 00
0000182D 76 04 00 00        		.dd LM189-_main
0000182F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC18                    	.code
                            	LM189:
0000AC18 40 92              		R1=0	// QImode move
0000AC19 19 D3 02 05        		[_gActivated]=R1	// QImode move
00001831                    	.debug
00001831 2E 00 73 00        		.dw '.stabn 0x44,0,301,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         31 00 2C 00
         00 00 00 00
00001845 79 04 00 00        		.dd LM190-_main
00001847 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC1B                    	.code
                            	LM190:
0000AC1B 05 93              		R1=BP	// QImode move
0000AC1C 0D 05 01 00        		R2=BP+1
0000AC1E 40 92              		R1=0	// QImode move
0000AC1F 02 97              		R3=R2	// QImode move
0000AC20 C3 D2              		[R3]=R1	// QImode move
                            	L104:
                            	L103:
                            	L102:
00001849                    	.debug
00001849 2E 00 73 00        		.dw '.stabn 0x44,0,304,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         34 00 2C 00
         00 00 00 00
0000185D 7F 04 00 00        		.dd LM191-_main
0000185F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC21                    	.code
                            	LM191:
                            	LBE8:
0000AC21 0F 9F 49 A8        		pc=L47	// Indirect jump
                            	L48:
00001861                    	.debug
00001861 2E 00 73 00        		.dw '.stabn 0x44,0,305,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         35 00 2C 00
         00 00 00 00
00001875 81 04 00 00        		.dd LM192-_main
00001877 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC23                    	.code
                            	LM192:
                            	LBE7:
00001879                    	.debug
00001879 2E 00 73 00        		.dw '.stabn 0x44,0,305,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         35 00 2C 00
         00 00 00 00
0000188D 81 04 00 00        		.dd LM193-_main
0000188F 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC23                    	.code
                            	LM193:
                            	L31:
                            	
0000AC23 4A 00              		sp+=10
0000AC24 88 98              		pop bp from [sp]
0000AC25 90 9A              		retf
                            		.endp	// end of main
                            	
00001891                    	.debug
00001891 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000018A3 07 00 00 00        		.dd LBB7-_main
000018A5 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
000018A7                    	.debug
000018A7 2E 00 73 00        		.dw '.stabs "res:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         73 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000AC26                    	.CODE
000018C1                    	.debug
000018C1 2E 00 73 00        		.dw '.stabs "timeCnt:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 69 00
         6D 00 65 00
         43 00 6E 00
         74 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000AC26                    	.CODE
000018DF                    	.debug
000018DF 2E 00 73 00        		.dw '.stabs "random_no:1",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 61 00
         6E 00 64 00
         6F 00 6D 00
         5F 00 6E 00
         6F 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000AC26                    	.CODE
000018FF                    	.debug
000018FF 2E 00 73 00        		.dw '.stabs "iMoveFlag:1",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 4D 00
         6F 00 76 00
         65 00 46 00
         6C 00 61 00
         67 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
0000AC26                    	.CODE
0000191F                    	.debug
0000191F 2E 00 73 00        		.dw '.stabs "aFlag:1",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         61 00 46 00
         6C 00 61 00
         67 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000AC26                    	.CODE
0000193B                    	.debug
0000193B 2E 00 73 00        		.dw '.stabs "ClearWatchdog:22=*4",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 6C 00
         65 00 61 00
         72 00 57 00
         61 00 74 00
         63 00 68 00
         64 00 6F 00
         67 00 3A 00
         32 00 32 00
         3D 00 2A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000AC26                    	.CODE
00001963                    	.debug
00001963 2E 00 73 00        		.dw '.stabs "uiIOB:4",128,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         49 00 4F 00
         42 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000AC26                    	.CODE
0000197F                    	.debug
0000197F 2E 00 73 00        		.dw '.stabs "i:4",128,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 37 00
         0D 00 0A 00
0000AC26                    	.CODE
00001997                    	.debug
00001997 2E 00 73 00        		.dw '.stabs "p:22",128,0,0,8',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         70 00 3A 00
         32 00 32 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         38 00 0D 00
         0A 00      
0000AC26                    	.CODE
000019B0                    	.debug
000019B0 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000019C2 AB 00 00 00        		.dd LBB8-_main
000019C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
000019C6                    	.debug
000019C6 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000019D8 63 01 00 00        		.dd LBB9-_main
000019DA 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
000019DC                    	.debug
000019DC 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000019EE 6D 01 00 00        		.dd LBE9-_main
000019F0 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
000019F2                    	.debug
000019F2 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A04 AB 01 00 00        		.dd LBB10-_main
00001A06 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001A08                    	.debug
00001A08 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A1A B5 01 00 00        		.dd LBE10-_main
00001A1C 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001A1E                    	.debug
00001A1E 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A30 63 02 00 00        		.dd LBB11-_main
00001A32 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001A34                    	.debug
00001A34 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A46 6D 02 00 00        		.dd LBE11-_main
00001A48 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001A4A                    	.debug
00001A4A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A5C BF 02 00 00        		.dd LBB12-_main
00001A5E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001A60                    	.debug
00001A60 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A72 C9 02 00 00        		.dd LBE12-_main
00001A74 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001A76                    	.debug
00001A76 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A88 1F 03 00 00        		.dd LBB13-_main
00001A8A 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001A8C                    	.debug
00001A8C 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A9E 29 03 00 00        		.dd LBE13-_main
00001AA0 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001AA2                    	.debug
00001AA2 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001AB4 7F 03 00 00        		.dd LBB14-_main
00001AB6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001AB8                    	.debug
00001AB8 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001ACA 89 03 00 00        		.dd LBE14-_main
00001ACC 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001ACE                    	.debug
00001ACE 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001AE0 EB 03 00 00        		.dd LBB15-_main
00001AE2 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001AE4                    	.debug
00001AE4 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001AF6 F5 03 00 00        		.dd LBE15-_main
00001AF8 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001AFA                    	.debug
00001AFA 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B0C 7F 04 00 00        		.dd LBE8-_main
00001B0E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001B10                    	.debug
00001B10 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B22 81 04 00 00        		.dd LBE7-_main
00001B24 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
00001B26                    	.debug
00001B26 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001B2F 84 04 00 00        		.dd LME4-_main
00001B31 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
                            	LME4:
0000AC26                    	.code
00001B33                    	.debug
00001B33 2E 00 73 00        		.dw '.stabs "ShowAndVoic:F1",36,0,0,',0,0,offset _ShowAndVoic,seg _ShowAndVoic,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 68 00
         6F 00 77 00
         41 00 6E 00
         64 00 56 00
         6F 00 69 00
         63 00 3A 00
         46 00 31 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 5A 05
         00 00 0D 00
         0A 00      
0000AC26                    	.CODE
                            	.public _ShowAndVoic
                            	_ShowAndVoic:	.proc
00001B58                    	.debug
00001B58 2E 00 73 00        		.dw '.stabn 0x44,0,308,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         38 00 2C 00
         00 00 00 00
00001B6C 00 00 00 00        		.dd LM194-_ShowAndVoic
00001B6E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC26                    	.code
                            	LM194:
                            		// total=36, vars=36
                            		// frame_pointer_needed: 1
0000AC26 88 DA              		push bp to [sp]
0000AC27 64 20              		sp-=36
0000AC28 08 0B 01 00        		bp=sp+1
                            	
0000AC2A 0D 03 27 00        		R1=BP+39
0000AC2C 10 D2              		[bp+16]=R1	// QImode move
00001B70                    	.debug
00001B70 2E 00 73 00        		.dw '.stabn 0x44,0,309,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         39 00 2C 00
         00 00 00 00
00001B84 07 00 00 00        		.dd LM195-_ShowAndVoic
00001B86 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC2D                    	.code
                            	LM195:
                            	LBB16:
00001B88                    	.debug
00001B88 2E 00 73 00        		.dw '.stabn 0x44,0,310,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         30 00 2C 00
         00 00 00 00
00001B9C 07 00 00 00        		.dd LM196-_ShowAndVoic
00001B9E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC2D                    	.code
                            	LM196:
0000AC2D 40 F0 85 A6        		call _car_time	// call with return value
0000AC2F 05 95              		R2=BP	// QImode move
0000AC30 0D 07 02 00        		R3=BP+2
0000AC32 03 95              		R2=R3	// QImode move
0000AC33 C2 D2              		[R2]=R1	// QImode move
00001BA0                    	.debug
00001BA0 2E 00 73 00        		.dw '.stabn 0x44,0,311,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         31 00 2C 00
         00 00 00 00
00001BB4 0E 00 00 00        		.dd LM197-_ShowAndVoic
00001BB6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC34                    	.code
                            	LM197:
0000AC34 40 F0 82 A6        		call _car_long	// call with return value
0000AC36 05 95              		R2=BP	// QImode move
0000AC37 0D 07 03 00        		R3=BP+3
0000AC39 03 99              		R4=R3	// QImode move
0000AC3A C4 D2              		[R4]=R1	// QImode move
00001BB8                    	.debug
00001BB8 2E 00 73 00        		.dw '.stabn 0x44,0,312,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         32 00 2C 00
         00 00 00 00
00001BCC 15 00 00 00        		.dd LM198-_ShowAndVoic
00001BCE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC3B                    	.code
                            	LM198:
0000AC3B 05 95              		R2=BP	// QImode move
0000AC3C 0D 03 03 00        		R1=BP+3
0000AC3E 05 95              		R2=BP	// QImode move
0000AC3F 0D 07 03 00        		R3=BP+3
0000AC41 03 99              		R4=R3	// QImode move
0000AC42 C4 94              		R2=[R4]	// QImode move
0000AC43 4F 96              		R3=15	// QImode move
0000AC44 23 D6              		[bp+35]=R3	// QImode move
0000AC45 23 96              		R3=[bp+35]	// QImode move
0000AC46 0B F5              		mr=R2*R3	// r3=R2*R3 16bit=16bit*16bit
0000AC47 03 95              		R2=R3	// QImode move
0000AC48 01 99              		R4=R1	// QImode move
0000AC49 C4 D4              		[R4]=R2	// QImode move
00001BD0                    	.debug
00001BD0 2E 00 73 00        		.dw '.stabn 0x44,0,313,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         33 00 2C 00
         00 00 00 00
00001BE4 24 00 00 00        		.dd LM199-_ShowAndVoic
00001BE6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC4A                    	.code
                            	LM199:
0000AC4A 05 93              		R1=BP	// QImode move
0000AC4B 0D 03 04 00        		R1=BP+4
0000AC4D 11 D2              		[bp+17]=R1	// QImode move
0000AC4E 05 93              		R1=BP	// QImode move
0000AC4F 0D 05 02 00        		R2=BP+2
0000AC51 02 97              		R3=R2	// QImode move
0000AC52 C3 92              		R1=[R3]	// QImode move
0000AC53 4A 94              		R2=10	// QImode move
0000AC54 C8 D4              		[SP--]=R2	// QImode move
0000AC55 C8 D2              		[SP--]=R1	// QImode move
0000AC56 40 F0 44 BF        		call __modi1	// call with return value
0000AC58 42 00              		SP=SP+2
0000AC59 11 98              		R4=[bp+17]	// QImode move
0000AC5A C4 D2              		[R4]=R1	// QImode move
00001BE8                    	.debug
00001BE8 2E 00 73 00        		.dw '.stabn 0x44,0,314,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         34 00 2C 00
         00 00 00 00
00001BFC 35 00 00 00        		.dd LM200-_ShowAndVoic
00001BFE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC5B                    	.code
                            	LM200:
0000AC5B 05 93              		R1=BP	// QImode move
0000AC5C 0D 03 01 00        		R1=BP+1
0000AC5E 12 D2              		[bp+18]=R1	// QImode move
0000AC5F 05 93              		R1=BP	// QImode move
0000AC60 0D 05 02 00        		R2=BP+2
0000AC62 02 97              		R3=R2	// QImode move
0000AC63 C3 92              		R1=[R3]	// QImode move
0000AC64 4A 94              		R2=10	// QImode move
0000AC65 C8 D4              		[SP--]=R2	// QImode move
0000AC66 C8 D2              		[SP--]=R1	// QImode move
0000AC67 40 F0 0D BF        		call __divi1	// call with return value
0000AC69 42 00              		SP=SP+2
0000AC6A 12 98              		R4=[bp+18]	// QImode move
0000AC6B C4 D2              		[R4]=R1	// QImode move
00001C00                    	.debug
00001C00 2E 00 73 00        		.dw '.stabn 0x44,0,315,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         35 00 2C 00
         00 00 00 00
00001C14 46 00 00 00        		.dd LM201-_ShowAndVoic
00001C16 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC6C                    	.code
                            	LM201:
0000AC6C 05 93              		R1=BP	// QImode move
0000AC6D 0D 03 05 00        		R1=BP+5
0000AC6F 13 D2              		[bp+19]=R1	// QImode move
0000AC70 05 93              		R1=BP	// QImode move
0000AC71 0D 05 01 00        		R2=BP+1
0000AC73 02 97              		R3=R2	// QImode move
0000AC74 C3 92              		R1=[R3]	// QImode move
0000AC75 4A 94              		R2=10	// QImode move
0000AC76 C8 D4              		[SP--]=R2	// QImode move
0000AC77 C8 D2              		[SP--]=R1	// QImode move
0000AC78 40 F0 44 BF        		call __modi1	// call with return value
0000AC7A 42 00              		SP=SP+2
0000AC7B 13 98              		R4=[bp+19]	// QImode move
0000AC7C C4 D2              		[R4]=R1	// QImode move
00001C18                    	.debug
00001C18 2E 00 73 00        		.dw '.stabn 0x44,0,316,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         36 00 2C 00
         00 00 00 00
00001C2C 57 00 00 00        		.dd LM202-_ShowAndVoic
00001C2E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC7D                    	.code
                            	LM202:
0000AC7D 05 93              		R1=BP	// QImode move
0000AC7E 0D 03 01 00        		R1=BP+1
0000AC80 14 D2              		[bp+20]=R1	// QImode move
0000AC81 05 93              		R1=BP	// QImode move
0000AC82 0D 05 02 00        		R2=BP+2
0000AC84 02 97              		R3=R2	// QImode move
0000AC85 C3 92              		R1=[R3]	// QImode move
0000AC86 0A 95 64 00        		R2=100	// QImode move
0000AC88 C8 D4              		[SP--]=R2	// QImode move
0000AC89 C8 D2              		[SP--]=R1	// QImode move
0000AC8A 40 F0 0D BF        		call __divi1	// call with return value
0000AC8C 42 00              		SP=SP+2
0000AC8D 14 98              		R4=[bp+20]	// QImode move
0000AC8E C4 D2              		[R4]=R1	// QImode move
00001C30                    	.debug
00001C30 2E 00 73 00        		.dw '.stabn 0x44,0,317,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         37 00 2C 00
         00 00 00 00
00001C44 69 00 00 00        		.dd LM203-_ShowAndVoic
00001C46 0D 00 0A 00        		.dw 0x0d,0x0a
0000AC8F                    	.code
                            	LM203:
0000AC8F 05 93              		R1=BP	// QImode move
0000AC90 0D 03 06 00        		R1=BP+6
0000AC92 15 D2              		[bp+21]=R1	// QImode move
0000AC93 05 93              		R1=BP	// QImode move
0000AC94 0D 05 01 00        		R2=BP+1
0000AC96 02 97              		R3=R2	// QImode move
0000AC97 C3 92              		R1=[R3]	// QImode move
0000AC98 4A 94              		R2=10	// QImode move
0000AC99 C8 D4              		[SP--]=R2	// QImode move
0000AC9A C8 D2              		[SP--]=R1	// QImode move
0000AC9B 40 F0 44 BF        		call __modi1	// call with return value
0000AC9D 42 00              		SP=SP+2
0000AC9E 15 98              		R4=[bp+21]	// QImode move
0000AC9F C4 D2              		[R4]=R1	// QImode move
00001C48                    	.debug
00001C48 2E 00 73 00        		.dw '.stabn 0x44,0,318,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         38 00 2C 00
         00 00 00 00
00001C5C 7A 00 00 00        		.dd LM204-_ShowAndVoic
00001C5E 0D 00 0A 00        		.dw 0x0d,0x0a
0000ACA0                    	.code
                            	LM204:
0000ACA0 05 93              		R1=BP	// QImode move
0000ACA1 0D 03 01 00        		R1=BP+1
0000ACA3 16 D2              		[bp+22]=R1	// QImode move
0000ACA4 05 93              		R1=BP	// QImode move
0000ACA5 0D 05 02 00        		R2=BP+2
0000ACA7 02 97              		R3=R2	// QImode move
0000ACA8 C3 92              		R1=[R3]	// QImode move
0000ACA9 0A 95 E8 03        		R2=1000	// QImode move
0000ACAB C8 D4              		[SP--]=R2	// QImode move
0000ACAC C8 D2              		[SP--]=R1	// QImode move
0000ACAD 40 F0 0D BF        		call __divi1	// call with return value
0000ACAF 42 00              		SP=SP+2
0000ACB0 16 98              		R4=[bp+22]	// QImode move
0000ACB1 C4 D2              		[R4]=R1	// QImode move
00001C60                    	.debug
00001C60 2E 00 73 00        		.dw '.stabn 0x44,0,319,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         39 00 2C 00
         00 00 00 00
00001C74 8C 00 00 00        		.dd LM205-_ShowAndVoic
00001C76 0D 00 0A 00        		.dw 0x0d,0x0a
0000ACB2                    	.code
                            	LM205:
0000ACB2 05 93              		R1=BP	// QImode move
0000ACB3 0D 03 07 00        		R1=BP+7
0000ACB5 17 D2              		[bp+23]=R1	// QImode move
0000ACB6 05 93              		R1=BP	// QImode move
0000ACB7 0D 05 01 00        		R2=BP+1
0000ACB9 02 97              		R3=R2	// QImode move
0000ACBA C3 92              		R1=[R3]	// QImode move
0000ACBB 4A 94              		R2=10	// QImode move
0000ACBC C8 D4              		[SP--]=R2	// QImode move
0000ACBD C8 D2              		[SP--]=R1	// QImode move
0000ACBE 40 F0 44 BF        		call __modi1	// call with return value
0000ACC0 42 00              		SP=SP+2
0000ACC1 17 98              		R4=[bp+23]	// QImode move
0000ACC2 C4 D2              		[R4]=R1	// QImode move
00001C78                    	.debug
00001C78 2E 00 73 00        		.dw '.stabn 0x44,0,320,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         30 00 2C 00
         00 00 00 00
00001C8C 9D 00 00 00        		.dd LM206-_ShowAndVoic
00001C8E 0D 00 0A 00        		.dw 0x0d,0x0a
0000ACC3                    	.code
                            	LM206:
0000ACC3 05 93              		R1=BP	// QImode move
0000ACC4 0D 03 0A 00        		R1=BP+10
0000ACC6 18 D2              		[bp+24]=R1	// QImode move
0000ACC7 05 93              		R1=BP	// QImode move
0000ACC8 0D 05 03 00        		R2=BP+3
0000ACCA 02 97              		R3=R2	// QImode move
0000ACCB C3 92              		R1=[R3]	// QImode move
0000ACCC 4A 94              		R2=10	// QImode move
0000ACCD C8 D4              		[SP--]=R2	// QImode move
0000ACCE C8 D2              		[SP--]=R1	// QImode move
0000ACCF 40 F0 44 BF        		call __modi1	// call with return value
0000ACD1 42 00              		SP=SP+2
0000ACD2 18 98              		R4=[bp+24]	// QImode move
0000ACD3 C4 D2              		[R4]=R1	// QImode move
00001C90                    	.debug
00001C90 2E 00 73 00        		.dw '.stabn 0x44,0,321,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         31 00 2C 00
         00 00 00 00
00001CA4 AE 00 00 00        		.dd LM207-_ShowAndVoic
00001CA6 0D 00 0A 00        		.dw 0x0d,0x0a
0000ACD4                    	.code
                            	LM207:
0000ACD4 05 93              		R1=BP	// QImode move
0000ACD5 0D 03 01 00        		R1=BP+1
0000ACD7 19 D2              		[bp+25]=R1	// QImode move
0000ACD8 05 93              		R1=BP	// QImode move
0000ACD9 0D 05 03 00        		R2=BP+3
0000ACDB 02 97              		R3=R2	// QImode move
0000ACDC C3 92              		R1=[R3]	// QImode move
0000ACDD 4A 94              		R2=10	// QImode move
0000ACDE C8 D4              		[SP--]=R2	// QImode move
0000ACDF C8 D2              		[SP--]=R1	// QImode move
0000ACE0 40 F0 0D BF        		call __divi1	// call with return value
0000ACE2 42 00              		SP=SP+2
0000ACE3 19 98              		R4=[bp+25]	// QImode move
0000ACE4 C4 D2              		[R4]=R1	// QImode move
00001CA8                    	.debug
00001CA8 2E 00 73 00        		.dw '.stabn 0x44,0,322,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         32 00 2C 00
         00 00 00 00
00001CBC BF 00 00 00        		.dd LM208-_ShowAndVoic
00001CBE 0D 00 0A 00        		.dw 0x0d,0x0a
0000ACE5                    	.code
                            	LM208:
0000ACE5 05 93              		R1=BP	// QImode move
0000ACE6 0D 03 0B 00        		R1=BP+11
0000ACE8 1A D2              		[bp+26]=R1	// QImode move
0000ACE9 05 93              		R1=BP	// QImode move
0000ACEA 0D 05 01 00        		R2=BP+1
0000ACEC 02 97              		R3=R2	// QImode move
0000ACED C3 92              		R1=[R3]	// QImode move
0000ACEE 4A 94              		R2=10	// QImode move
0000ACEF C8 D4              		[SP--]=R2	// QImode move
0000ACF0 C8 D2              		[SP--]=R1	// QImode move
0000ACF1 40 F0 44 BF        		call __modi1	// call with return value
0000ACF3 42 00              		SP=SP+2
0000ACF4 1A 98              		R4=[bp+26]	// QImode move
0000ACF5 C4 D2              		[R4]=R1	// QImode move
00001CC0                    	.debug
00001CC0 2E 00 73 00        		.dw '.stabn 0x44,0,323,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         33 00 2C 00
         00 00 00 00
00001CD4 D0 00 00 00        		.dd LM209-_ShowAndVoic
00001CD6 0D 00 0A 00        		.dw 0x0d,0x0a
0000ACF6                    	.code
                            	LM209:
0000ACF6 05 93              		R1=BP	// QImode move
0000ACF7 0D 03 01 00        		R1=BP+1
0000ACF9 1B D2              		[bp+27]=R1	// QImode move
0000ACFA 05 93              		R1=BP	// QImode move
0000ACFB 0D 05 03 00        		R2=BP+3
0000ACFD 02 97              		R3=R2	// QImode move
0000ACFE C3 92              		R1=[R3]	// QImode move
0000ACFF 0A 95 64 00        		R2=100	// QImode move
0000AD01 C8 D4              		[SP--]=R2	// QImode move
0000AD02 C8 D2              		[SP--]=R1	// QImode move
0000AD03 40 F0 0D BF        		call __divi1	// call with return value
0000AD05 42 00              		SP=SP+2
0000AD06 1B 98              		R4=[bp+27]	// QImode move
0000AD07 C4 D2              		[R4]=R1	// QImode move
00001CD8                    	.debug
00001CD8 2E 00 73 00        		.dw '.stabn 0x44,0,324,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         34 00 2C 00
         00 00 00 00
00001CEC E2 00 00 00        		.dd LM210-_ShowAndVoic
00001CEE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD08                    	.code
                            	LM210:
0000AD08 05 93              		R1=BP	// QImode move
0000AD09 0D 03 0C 00        		R1=BP+12
0000AD0B 1C D2              		[bp+28]=R1	// QImode move
0000AD0C 05 93              		R1=BP	// QImode move
0000AD0D 0D 05 01 00        		R2=BP+1
0000AD0F 02 97              		R3=R2	// QImode move
0000AD10 C3 92              		R1=[R3]	// QImode move
0000AD11 4A 94              		R2=10	// QImode move
0000AD12 C8 D4              		[SP--]=R2	// QImode move
0000AD13 C8 D2              		[SP--]=R1	// QImode move
0000AD14 40 F0 44 BF        		call __modi1	// call with return value
0000AD16 42 00              		SP=SP+2
0000AD17 1C 98              		R4=[bp+28]	// QImode move
0000AD18 C4 D2              		[R4]=R1	// QImode move
00001CF0                    	.debug
00001CF0 2E 00 73 00        		.dw '.stabn 0x44,0,325,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         35 00 2C 00
         00 00 00 00
00001D04 F3 00 00 00        		.dd LM211-_ShowAndVoic
00001D06 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD19                    	.code
                            	LM211:
0000AD19 05 93              		R1=BP	// QImode move
0000AD1A 0D 03 01 00        		R1=BP+1
0000AD1C 1D D2              		[bp+29]=R1	// QImode move
0000AD1D 05 93              		R1=BP	// QImode move
0000AD1E 0D 05 03 00        		R2=BP+3
0000AD20 02 97              		R3=R2	// QImode move
0000AD21 C3 92              		R1=[R3]	// QImode move
0000AD22 0A 95 E8 03        		R2=1000	// QImode move
0000AD24 C8 D4              		[SP--]=R2	// QImode move
0000AD25 C8 D2              		[SP--]=R1	// QImode move
0000AD26 40 F0 0D BF        		call __divi1	// call with return value
0000AD28 42 00              		SP=SP+2
0000AD29 1D 98              		R4=[bp+29]	// QImode move
0000AD2A C4 D2              		[R4]=R1	// QImode move
00001D08                    	.debug
00001D08 2E 00 73 00        		.dw '.stabn 0x44,0,326,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         36 00 2C 00
         00 00 00 00
00001D1C 05 01 00 00        		.dd LM212-_ShowAndVoic
00001D1E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD2B                    	.code
                            	LM212:
0000AD2B 05 93              		R1=BP	// QImode move
0000AD2C 0D 03 0D 00        		R1=BP+13
0000AD2E 1E D2              		[bp+30]=R1	// QImode move
0000AD2F 05 93              		R1=BP	// QImode move
0000AD30 0D 05 01 00        		R2=BP+1
0000AD32 02 97              		R3=R2	// QImode move
0000AD33 C3 92              		R1=[R3]	// QImode move
0000AD34 4A 94              		R2=10	// QImode move
0000AD35 C8 D4              		[SP--]=R2	// QImode move
0000AD36 C8 D2              		[SP--]=R1	// QImode move
0000AD37 40 F0 44 BF        		call __modi1	// call with return value
0000AD39 42 00              		SP=SP+2
0000AD3A 1E 98              		R4=[bp+30]	// QImode move
0000AD3B C4 D2              		[R4]=R1	// QImode move
00001D20                    	.debug
00001D20 2E 00 73 00        		.dw '.stabn 0x44,0,327,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         37 00 2C 00
         00 00 00 00
00001D34 16 01 00 00        		.dd LM213-_ShowAndVoic
00001D36 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD3C                    	.code
                            	LM213:
0000AD3C 05 93              		R1=BP	// QImode move
0000AD3D 0D 03 01 00        		R1=BP+1
0000AD3F 1F D2              		[bp+31]=R1	// QImode move
0000AD40 05 93              		R1=BP	// QImode move
0000AD41 0D 05 03 00        		R2=BP+3
0000AD43 02 97              		R3=R2	// QImode move
0000AD44 C3 92              		R1=[R3]	// QImode move
0000AD45 0A 95 10 27        		R2=10000	// QImode move
0000AD47 C8 D4              		[SP--]=R2	// QImode move
0000AD48 C8 D2              		[SP--]=R1	// QImode move
0000AD49 40 F0 0D BF        		call __divi1	// call with return value
0000AD4B 42 00              		SP=SP+2
0000AD4C 1F 98              		R4=[bp+31]	// QImode move
0000AD4D C4 D2              		[R4]=R1	// QImode move
00001D38                    	.debug
00001D38 2E 00 73 00        		.dw '.stabn 0x44,0,328,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         38 00 2C 00
         00 00 00 00
00001D4C 28 01 00 00        		.dd LM214-_ShowAndVoic
00001D4E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD4E                    	.code
                            	LM214:
0000AD4E 05 93              		R1=BP	// QImode move
0000AD4F 0D 03 0E 00        		R1=BP+14
0000AD51 20 D2              		[bp+32]=R1	// QImode move
0000AD52 05 93              		R1=BP	// QImode move
0000AD53 0D 05 01 00        		R2=BP+1
0000AD55 02 97              		R3=R2	// QImode move
0000AD56 C3 92              		R1=[R3]	// QImode move
0000AD57 4A 94              		R2=10	// QImode move
0000AD58 C8 D4              		[SP--]=R2	// QImode move
0000AD59 C8 D2              		[SP--]=R1	// QImode move
0000AD5A 40 F0 44 BF        		call __modi1	// call with return value
0000AD5C 42 00              		SP=SP+2
0000AD5D 20 98              		R4=[bp+32]	// QImode move
0000AD5E C4 D2              		[R4]=R1	// QImode move
00001D50                    	.debug
00001D50 2E 00 73 00        		.dw '.stabn 0x44,0,329,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         39 00 2C 00
         00 00 00 00
00001D64 39 01 00 00        		.dd LM215-_ShowAndVoic
00001D66 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD5F                    	.code
                            	LM215:
0000AD5F 05 93              		R1=BP	// QImode move
0000AD60 0D 03 01 00        		R1=BP+1
0000AD62 21 D2              		[bp+33]=R1	// QImode move
0000AD63 05 93              		R1=BP	// QImode move
0000AD64 0D 07 03 00        		R3=BP+3
0000AD66 03 99              		R4=R3	// QImode move
0000AD67 40 94              		R2=0	// sign extend
0000AD68 C4 92              		R1=[R4]
0000AD69 01 6E              		jpl 1
0000AD6A 41 64              		R2=-1
0000AD6B 0B 67 60 79        		R3=(-31072)	// HImode immediate to register move
0000AD6D 41 98              		R4=1
0000AD6E 90 D8              		push R3,R4 to [sp]	// pushhi
0000AD6F 90 D4              		push R1,R2 to [sp]	// pushhi
0000AD70 40 F0 82 BE        		call __divi2	// call with return value
0000AD72 44 00              		SP=SP+4
0000AD73 01 97              		R3=R1	// QImode move
0000AD74 21 92              		R1=[bp+33]	// QImode move
0000AD75 C1 D6              		[R1]=R3	// QImode move
00001D68                    	.debug
00001D68 2E 00 73 00        		.dw '.stabn 0x44,0,330,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         30 00 2C 00
         00 00 00 00
00001D7C 50 01 00 00        		.dd LM216-_ShowAndVoic
00001D7E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD76                    	.code
                            	LM216:
0000AD76 05 93              		R1=BP	// QImode move
0000AD77 0D 05 0F 00        		R2=BP+15
0000AD79 22 D4              		[bp+34]=R2	// QImode move
0000AD7A 05 93              		R1=BP	// QImode move
0000AD7B 0D 05 01 00        		R2=BP+1
0000AD7D 02 97              		R3=R2	// QImode move
0000AD7E C3 92              		R1=[R3]	// QImode move
0000AD7F 4A 94              		R2=10	// QImode move
0000AD80 C8 D4              		[SP--]=R2	// QImode move
0000AD81 C8 D2              		[SP--]=R1	// QImode move
0000AD82 40 F0 44 BF        		call __modi1	// call with return value
0000AD84 42 00              		SP=SP+2
0000AD85 22 98              		R4=[bp+34]	// QImode move
0000AD86 C4 D2              		[R4]=R1	// QImode move
                            	L134:
00001D80                    	.debug
00001D80 2E 00 73 00        		.dw '.stabn 0x44,0,333,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         33 00 2C 00
         00 00 00 00
00001D94 61 01 00 00        		.dd LM217-_ShowAndVoic
00001D96 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD87                    	.code
                            	LM217:
0000AD87 05 93              		R1=BP	// QImode move
0000AD88 0D 05 01 00        		R2=BP+1
0000AD8A 40 92              		R1=0	// QImode move
0000AD8B 02 97              		R3=R2	// QImode move
0000AD8C C3 D2              		[R3]=R1	// QImode move
                            	L135:
00001D98                    	.debug
00001D98 2E 00 73 00        		.dw '.stabn 0x44,0,335,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         35 00 2C 00
         00 00 00 00
00001DAC 67 01 00 00        		.dd LM218-_ShowAndVoic
00001DAE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD8D                    	.code
                            	LM218:
                            	LBB17:
0000AD8D 05 95              		R2=BP	// QImode move
0000AD8E 0D 03 01 00        		R1=BP+1
0000AD90 05 95              		R2=BP	// QImode move
0000AD91 0D 07 01 00        		R3=BP+1
0000AD93 03 99              		R4=R3	// QImode move
0000AD94 C4 94              		R2=[R4]	// QImode move
0000AD95 0A 07 01 00        		R3=R2+1
0000AD97 01 95              		R2=R1	// QImode move
0000AD98 C2 D6              		[R2]=R3	// QImode move
00001DB0                    	.debug
00001DB0 2E 00 73 00        		.dw '.stabn 0x44,0,336,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         36 00 2C 00
         00 00 00 00
00001DC4 73 01 00 00        		.dd LM219-_ShowAndVoic
00001DC6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AD99                    	.code
                            	LM219:
0000AD99 05 93              		R1=BP	// QImode move
0000AD9A 0D 05 04 00        		R2=BP+4
0000AD9C 02 97              		R3=R2	// QImode move
0000AD9D C3 92              		R1=[R3]	// QImode move
0000AD9E C8 D2              		[SP--]=R1	// QImode move
0000AD9F 40 92              		R1=0	// QImode move
0000ADA0 C8 D2              		[SP--]=R1	// QImode move
0000ADA1 40 F0 2D DC        		call _singleled	// call with return value
0000ADA3 42 00              		SP=SP+2
00001DC8                    	.debug
00001DC8 2E 00 73 00        		.dw '.stabn 0x44,0,338,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         38 00 2C 00
         00 00 00 00
00001DDC 7E 01 00 00        		.dd LM220-_ShowAndVoic
00001DDE 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADA4                    	.code
                            	LM220:
0000ADA4 41 92              		R1=1	// QImode move
0000ADA5 C5 D2              		[BP]=R1	// QImode move
                            	L138:
0000ADA6 C5 92              		R1=[BP]	// QImode move
0000ADA7 09 43 50 00        		CMP R1,80	// QImode compare
0000ADA9 02 BE              		JG L171	// QImode LE
0000ADAA 0F 9F AE AD        		PC=L141
                            	L171:
0000ADAC 0F 9F B6 AD        		pc=L139	// Indirect jump
                            	L141:
00001DE0                    	.debug
00001DE0 2E 00 73 00        		.dw '.stabn 0x44,0,339,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         39 00 2C 00
         00 00 00 00
00001DF4 88 01 00 00        		.dd LM221-_ShowAndVoic
00001DF6 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADAE                    	.code
                            	LM221:
0000ADAE 40 F0 89 BF        		call _delay	// call with return value
00001DF8                    	.debug
00001DF8 2E 00 73 00        		.dw '.stabn 0x44,0,338,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         38 00 2C 00
         00 00 00 00
00001E0C 8A 01 00 00        		.dd LM222-_ShowAndVoic
00001E0E 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADB0                    	.code
                            	LM222:
                            	L140:
0000ADB0 C5 92              		R1=[BP]	// QImode move
0000ADB1 09 05 01 00        		R2=R1+1
0000ADB3 C5 D4              		[BP]=R2	// QImode move
0000ADB4 0F 9F A6 AD        		pc=L138	// Indirect jump
                            	L139:
00001E10                    	.debug
00001E10 2E 00 73 00        		.dw '.stabn 0x44,0,341,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         31 00 2C 00
         00 00 00 00
00001E24 90 01 00 00        		.dd LM223-_ShowAndVoic
00001E26 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADB6                    	.code
                            	LM223:
0000ADB6 05 93              		R1=BP	// QImode move
0000ADB7 0D 05 05 00        		R2=BP+5
0000ADB9 02 99              		R4=R2	// QImode move
0000ADBA C4 92              		R1=[R4]	// QImode move
0000ADBB C8 D2              		[SP--]=R1	// QImode move
0000ADBC 41 92              		R1=1	// QImode move
0000ADBD C8 D2              		[SP--]=R1	// QImode move
0000ADBE 40 F0 2D DC        		call _singleled	// call with return value
0000ADC0 42 00              		SP=SP+2
00001E28                    	.debug
00001E28 2E 00 73 00        		.dw '.stabn 0x44,0,342,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         32 00 2C 00
         00 00 00 00
00001E3C 9B 01 00 00        		.dd LM224-_ShowAndVoic
00001E3E 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADC1                    	.code
                            	LM224:
0000ADC1 41 92              		R1=1	// QImode move
0000ADC2 C5 D2              		[BP]=R1	// QImode move
                            	L142:
0000ADC3 C5 92              		R1=[BP]	// QImode move
0000ADC4 72 42              		CMP R1,50	// QImode compare
0000ADC5 02 BE              		JG L172	// QImode LE
0000ADC6 0F 9F CA AD        		PC=L145
                            	L172:
0000ADC8 0F 9F D2 AD        		pc=L143	// Indirect jump
                            	L145:
00001E40                    	.debug
00001E40 2E 00 73 00        		.dw '.stabn 0x44,0,343,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         33 00 2C 00
         00 00 00 00
00001E54 A4 01 00 00        		.dd LM225-_ShowAndVoic
00001E56 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADCA                    	.code
                            	LM225:
0000ADCA 40 F0 89 BF        		call _delay	// call with return value
00001E58                    	.debug
00001E58 2E 00 73 00        		.dw '.stabn 0x44,0,342,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         32 00 2C 00
         00 00 00 00
00001E6C A6 01 00 00        		.dd LM226-_ShowAndVoic
00001E6E 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADCC                    	.code
                            	LM226:
                            	L144:
0000ADCC C5 92              		R1=[BP]	// QImode move
0000ADCD 09 05 01 00        		R2=R1+1
0000ADCF C5 D4              		[BP]=R2	// QImode move
0000ADD0 0F 9F C3 AD        		pc=L142	// Indirect jump
                            	L143:
00001E70                    	.debug
00001E70 2E 00 73 00        		.dw '.stabn 0x44,0,344,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         34 00 2C 00
         00 00 00 00
00001E84 AC 01 00 00        		.dd LM227-_ShowAndVoic
00001E86 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADD2                    	.code
                            	LM227:
0000ADD2 05 93              		R1=BP	// QImode move
0000ADD3 0D 05 06 00        		R2=BP+6
0000ADD5 02 97              		R3=R2	// QImode move
0000ADD6 C3 92              		R1=[R3]	// QImode move
0000ADD7 C8 D2              		[SP--]=R1	// QImode move
0000ADD8 42 92              		R1=2	// QImode move
0000ADD9 C8 D2              		[SP--]=R1	// QImode move
0000ADDA 40 F0 2D DC        		call _singleled	// call with return value
0000ADDC 42 00              		SP=SP+2
00001E88                    	.debug
00001E88 2E 00 73 00        		.dw '.stabn 0x44,0,345,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         35 00 2C 00
         00 00 00 00
00001E9C B7 01 00 00        		.dd LM228-_ShowAndVoic
00001E9E 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADDD                    	.code
                            	LM228:
0000ADDD 41 92              		R1=1	// QImode move
0000ADDE C5 D2              		[BP]=R1	// QImode move
                            	L146:
0000ADDF C5 92              		R1=[BP]	// QImode move
0000ADE0 72 42              		CMP R1,50	// QImode compare
0000ADE1 02 BE              		JG L173	// QImode LE
0000ADE2 0F 9F E6 AD        		PC=L149
                            	L173:
0000ADE4 0F 9F EE AD        		pc=L137	// Indirect jump
                            	L149:
00001EA0                    	.debug
00001EA0 2E 00 73 00        		.dw '.stabn 0x44,0,346,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         36 00 2C 00
         00 00 00 00
00001EB4 C0 01 00 00        		.dd LM229-_ShowAndVoic
00001EB6 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADE6                    	.code
                            	LM229:
0000ADE6 40 F0 89 BF        		call _delay	// call with return value
00001EB8                    	.debug
00001EB8 2E 00 73 00        		.dw '.stabn 0x44,0,345,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         35 00 2C 00
         00 00 00 00
00001ECC C2 01 00 00        		.dd LM230-_ShowAndVoic
00001ECE 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADE8                    	.code
                            	LM230:
                            	L148:
0000ADE8 C5 92              		R1=[BP]	// QImode move
0000ADE9 09 05 01 00        		R2=R1+1
0000ADEB C5 D4              		[BP]=R2	// QImode move
0000ADEC 0F 9F DF AD        		pc=L146	// Indirect jump
                            	L147:
00001ED0                    	.debug
00001ED0 2E 00 73 00        		.dw '.stabn 0x44,0,350,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         30 00 2C 00
         00 00 00 00
00001EE4 C8 01 00 00        		.dd LM231-_ShowAndVoic
00001EE6 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADEE                    	.code
                            	LM231:
                            	LBE17:
                            	L137:
00001EE8                    	.debug
00001EE8 2E 00 73 00        		.dw '.stabn 0x44,0,351,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         31 00 2C 00
         00 00 00 00
00001EFC C8 01 00 00        		.dd LM232-_ShowAndVoic
00001EFE 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADEE                    	.code
                            	LM232:
0000ADEE 05 93              		R1=BP	// QImode move
0000ADEF 0D 05 01 00        		R2=BP+1
0000ADF1 02 99              		R4=R2	// QImode move
0000ADF2 C4 92              		R1=[R4]	// QImode move
0000ADF3 09 43 CF 07        		CMP R1,1999	// QImode compare
0000ADF5 02 BE              		JG L174	// QImode LE
0000ADF6 0F 9F FA AD        		PC=L150
                            	L174:
0000ADF8 0F 9F FC AD        		pc=L136	// Indirect jump
                            	L150:
0000ADFA 0F 9F 8D AD        		pc=L135	// Indirect jump
                            	L136:
00001F00                    	.debug
00001F00 2E 00 73 00        		.dw '.stabn 0x44,0,354,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         34 00 2C 00
         00 00 00 00
00001F14 D6 01 00 00        		.dd LM233-_ShowAndVoic
00001F16 0D 00 0A 00        		.dw 0x0d,0x0a
0000ADFC                    	.code
                            	LM233:
0000ADFC 05 93              		R1=BP	// QImode move
0000ADFD 0D 05 01 00        		R2=BP+1
0000ADFF 40 92              		R1=0	// QImode move
0000AE00 02 97              		R3=R2	// QImode move
0000AE01 C3 D2              		[R3]=R1	// QImode move
                            	L151:
00001F18                    	.debug
00001F18 2E 00 73 00        		.dw '.stabn 0x44,0,356,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         36 00 2C 00
         00 00 00 00
00001F2C DC 01 00 00        		.dd LM234-_ShowAndVoic
00001F2E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE02                    	.code
                            	LM234:
                            	LBB18:
0000AE02 05 95              		R2=BP	// QImode move
0000AE03 0D 03 01 00        		R1=BP+1
0000AE05 05 95              		R2=BP	// QImode move
0000AE06 0D 07 01 00        		R3=BP+1
0000AE08 03 99              		R4=R3	// QImode move
0000AE09 C4 94              		R2=[R4]	// QImode move
0000AE0A 0A 07 01 00        		R3=R2+1
0000AE0C 01 95              		R2=R1	// QImode move
0000AE0D C2 D6              		[R2]=R3	// QImode move
00001F30                    	.debug
00001F30 2E 00 73 00        		.dw '.stabn 0x44,0,357,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         37 00 2C 00
         00 00 00 00
00001F44 E8 01 00 00        		.dd LM235-_ShowAndVoic
00001F46 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE0E                    	.code
                            	LM235:
0000AE0E 05 93              		R1=BP	// QImode move
0000AE0F 0D 05 0A 00        		R2=BP+10
0000AE11 02 97              		R3=R2	// QImode move
0000AE12 C3 92              		R1=[R3]	// QImode move
0000AE13 C8 D2              		[SP--]=R1	// QImode move
0000AE14 40 92              		R1=0	// QImode move
0000AE15 C8 D2              		[SP--]=R1	// QImode move
0000AE16 40 F0 2D DC        		call _singleled	// call with return value
0000AE18 42 00              		SP=SP+2
00001F48                    	.debug
00001F48 2E 00 73 00        		.dw '.stabn 0x44,0,359,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         39 00 2C 00
         00 00 00 00
00001F5C F3 01 00 00        		.dd LM236-_ShowAndVoic
00001F5E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE19                    	.code
                            	LM236:
0000AE19 41 92              		R1=1	// QImode move
0000AE1A C5 D2              		[BP]=R1	// QImode move
                            	L154:
0000AE1B C5 92              		R1=[BP]	// QImode move
0000AE1C 09 43 50 00        		CMP R1,80	// QImode compare
0000AE1E 02 BE              		JG L175	// QImode LE
0000AE1F 0F 9F 23 AE        		PC=L157
                            	L175:
0000AE21 0F 9F 2B AE        		pc=L155	// Indirect jump
                            	L157:
00001F60                    	.debug
00001F60 2E 00 73 00        		.dw '.stabn 0x44,0,360,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         30 00 2C 00
         00 00 00 00
00001F74 FD 01 00 00        		.dd LM237-_ShowAndVoic
00001F76 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE23                    	.code
                            	LM237:
0000AE23 40 F0 89 BF        		call _delay	// call with return value
00001F78                    	.debug
00001F78 2E 00 73 00        		.dw '.stabn 0x44,0,359,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         39 00 2C 00
         00 00 00 00
00001F8C FF 01 00 00        		.dd LM238-_ShowAndVoic
00001F8E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE25                    	.code
                            	LM238:
                            	L156:
0000AE25 C5 92              		R1=[BP]	// QImode move
0000AE26 09 05 01 00        		R2=R1+1
0000AE28 C5 D4              		[BP]=R2	// QImode move
0000AE29 0F 9F 1B AE        		pc=L154	// Indirect jump
                            	L155:
00001F90                    	.debug
00001F90 2E 00 73 00        		.dw '.stabn 0x44,0,362,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         32 00 2C 00
         00 00 00 00
00001FA4 05 02 00 00        		.dd LM239-_ShowAndVoic
00001FA6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE2B                    	.code
                            	LM239:
0000AE2B 05 93              		R1=BP	// QImode move
0000AE2C 0D 05 0B 00        		R2=BP+11
0000AE2E 02 99              		R4=R2	// QImode move
0000AE2F C4 92              		R1=[R4]	// QImode move
0000AE30 C8 D2              		[SP--]=R1	// QImode move
0000AE31 41 92              		R1=1	// QImode move
0000AE32 C8 D2              		[SP--]=R1	// QImode move
0000AE33 40 F0 2D DC        		call _singleled	// call with return value
0000AE35 42 00              		SP=SP+2
00001FA8                    	.debug
00001FA8 2E 00 73 00        		.dw '.stabn 0x44,0,363,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         33 00 2C 00
         00 00 00 00
00001FBC 10 02 00 00        		.dd LM240-_ShowAndVoic
00001FBE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE36                    	.code
                            	LM240:
0000AE36 41 92              		R1=1	// QImode move
0000AE37 C5 D2              		[BP]=R1	// QImode move
                            	L158:
0000AE38 C5 92              		R1=[BP]	// QImode move
0000AE39 72 42              		CMP R1,50	// QImode compare
0000AE3A 02 BE              		JG L176	// QImode LE
0000AE3B 0F 9F 3F AE        		PC=L161
                            	L176:
0000AE3D 0F 9F 47 AE        		pc=L159	// Indirect jump
                            	L161:
00001FC0                    	.debug
00001FC0 2E 00 73 00        		.dw '.stabn 0x44,0,364,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         34 00 2C 00
         00 00 00 00
00001FD4 19 02 00 00        		.dd LM241-_ShowAndVoic
00001FD6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE3F                    	.code
                            	LM241:
0000AE3F 40 F0 89 BF        		call _delay	// call with return value
00001FD8                    	.debug
00001FD8 2E 00 73 00        		.dw '.stabn 0x44,0,363,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         33 00 2C 00
         00 00 00 00
00001FEC 1B 02 00 00        		.dd LM242-_ShowAndVoic
00001FEE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE41                    	.code
                            	LM242:
                            	L160:
0000AE41 C5 92              		R1=[BP]	// QImode move
0000AE42 09 05 01 00        		R2=R1+1
0000AE44 C5 D4              		[BP]=R2	// QImode move
0000AE45 0F 9F 38 AE        		pc=L158	// Indirect jump
                            	L159:
00001FF0                    	.debug
00001FF0 2E 00 73 00        		.dw '.stabn 0x44,0,365,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         35 00 2C 00
         00 00 00 00
00002004 21 02 00 00        		.dd LM243-_ShowAndVoic
00002006 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE47                    	.code
                            	LM243:
0000AE47 05 93              		R1=BP	// QImode move
0000AE48 0D 05 0C 00        		R2=BP+12
0000AE4A 02 97              		R3=R2	// QImode move
0000AE4B C3 92              		R1=[R3]	// QImode move
0000AE4C C8 D2              		[SP--]=R1	// QImode move
0000AE4D 42 92              		R1=2	// QImode move
0000AE4E C8 D2              		[SP--]=R1	// QImode move
0000AE4F 40 F0 2D DC        		call _singleled	// call with return value
0000AE51 42 00              		SP=SP+2
00002008                    	.debug
00002008 2E 00 73 00        		.dw '.stabn 0x44,0,366,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         36 00 2C 00
         00 00 00 00
0000201C 2C 02 00 00        		.dd LM244-_ShowAndVoic
0000201E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE52                    	.code
                            	LM244:
0000AE52 41 92              		R1=1	// QImode move
0000AE53 C5 D2              		[BP]=R1	// QImode move
                            	L162:
0000AE54 C5 92              		R1=[BP]	// QImode move
0000AE55 72 42              		CMP R1,50	// QImode compare
0000AE56 02 BE              		JG L177	// QImode LE
0000AE57 0F 9F 5B AE        		PC=L165
                            	L177:
0000AE59 0F 9F 63 AE        		pc=L163	// Indirect jump
                            	L165:
00002020                    	.debug
00002020 2E 00 73 00        		.dw '.stabn 0x44,0,367,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         37 00 2C 00
         00 00 00 00
00002034 35 02 00 00        		.dd LM245-_ShowAndVoic
00002036 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE5B                    	.code
                            	LM245:
0000AE5B 40 F0 89 BF        		call _delay	// call with return value
00002038                    	.debug
00002038 2E 00 73 00        		.dw '.stabn 0x44,0,366,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         36 00 2C 00
         00 00 00 00
0000204C 37 02 00 00        		.dd LM246-_ShowAndVoic
0000204E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE5D                    	.code
                            	LM246:
                            	L164:
0000AE5D C5 92              		R1=[BP]	// QImode move
0000AE5E 09 05 01 00        		R2=R1+1
0000AE60 C5 D4              		[BP]=R2	// QImode move
0000AE61 0F 9F 54 AE        		pc=L162	// Indirect jump
                            	L163:
00002050                    	.debug
00002050 2E 00 73 00        		.dw '.stabn 0x44,0,370,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         30 00 2C 00
         00 00 00 00
00002064 3D 02 00 00        		.dd LM247-_ShowAndVoic
00002066 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE63                    	.code
                            	LM247:
0000AE63 05 93              		R1=BP	// QImode move
0000AE64 0D 05 0D 00        		R2=BP+13
0000AE66 02 99              		R4=R2	// QImode move
0000AE67 C4 92              		R1=[R4]	// QImode move
0000AE68 C8 D2              		[SP--]=R1	// QImode move
0000AE69 43 92              		R1=3	// QImode move
0000AE6A C8 D2              		[SP--]=R1	// QImode move
0000AE6B 40 F0 2D DC        		call _singleled	// call with return value
0000AE6D 42 00              		SP=SP+2
00002068                    	.debug
00002068 2E 00 73 00        		.dw '.stabn 0x44,0,372,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         32 00 2C 00
         00 00 00 00
0000207C 48 02 00 00        		.dd LM248-_ShowAndVoic
0000207E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE6E                    	.code
                            	LM248:
0000AE6E 41 92              		R1=1	// QImode move
0000AE6F C5 D2              		[BP]=R1	// QImode move
                            	L166:
0000AE70 C5 92              		R1=[BP]	// QImode move
0000AE71 09 43 50 00        		CMP R1,80	// QImode compare
0000AE73 02 BE              		JG L178	// QImode LE
0000AE74 0F 9F 78 AE        		PC=L169
                            	L178:
0000AE76 0F 9F 80 AE        		pc=L153	// Indirect jump
                            	L169:
00002080                    	.debug
00002080 2E 00 73 00        		.dw '.stabn 0x44,0,373,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         33 00 2C 00
         00 00 00 00
00002094 52 02 00 00        		.dd LM249-_ShowAndVoic
00002096 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE78                    	.code
                            	LM249:
0000AE78 40 F0 89 BF        		call _delay	// call with return value
00002098                    	.debug
00002098 2E 00 73 00        		.dw '.stabn 0x44,0,372,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         32 00 2C 00
         00 00 00 00
000020AC 54 02 00 00        		.dd LM250-_ShowAndVoic
000020AE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE7A                    	.code
                            	LM250:
                            	L168:
0000AE7A C5 92              		R1=[BP]	// QImode move
0000AE7B 09 05 01 00        		R2=R1+1
0000AE7D C5 D4              		[BP]=R2	// QImode move
0000AE7E 0F 9F 70 AE        		pc=L166	// Indirect jump
                            	L167:
000020B0                    	.debug
000020B0 2E 00 73 00        		.dw '.stabn 0x44,0,374,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         34 00 2C 00
         00 00 00 00
000020C4 5A 02 00 00        		.dd LM251-_ShowAndVoic
000020C6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE80                    	.code
                            	LM251:
                            	LBE18:
                            	L153:
000020C8                    	.debug
000020C8 2E 00 73 00        		.dw '.stabn 0x44,0,375,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         35 00 2C 00
         00 00 00 00
000020DC 5A 02 00 00        		.dd LM252-_ShowAndVoic
000020DE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE80                    	.code
                            	LM252:
0000AE80 05 93              		R1=BP	// QImode move
0000AE81 0D 05 01 00        		R2=BP+1
0000AE83 02 97              		R3=R2	// QImode move
0000AE84 C3 92              		R1=[R3]	// QImode move
0000AE85 09 43 CF 07        		CMP R1,1999	// QImode compare
0000AE87 02 BE              		JG L179	// QImode LE
0000AE88 0F 9F 8C AE        		PC=L170
                            	L179:
0000AE8A 0F 9F 8E AE        		pc=L152	// Indirect jump
                            	L170:
0000AE8C 0F 9F 02 AE        		pc=L151	// Indirect jump
                            	L152:
000020E0                    	.debug
000020E0 2E 00 73 00        		.dw '.stabn 0x44,0,379,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         39 00 2C 00
         00 00 00 00
000020F4 68 02 00 00        		.dd LM253-_ShowAndVoic
000020F6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE8E                    	.code
                            	LM253:
0000AE8E 4C 92              		R1=12	// QImode move
0000AE8F C8 D2              		[SP--]=R1	// QImode move
0000AE90 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AE92 41 00              		SP=SP+1
000020F8                    	.debug
000020F8 2E 00 73 00        		.dw '.stabn 0x44,0,381,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         31 00 2C 00
         00 00 00 00
0000210C 6D 02 00 00        		.dd LM254-_ShowAndVoic
0000210E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE93                    	.code
                            	LM254:
0000AE93 40 F0 89 BF        		call _delay	// call with return value
00002110                    	.debug
00002110 2E 00 73 00        		.dw '.stabn 0x44,0,382,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         32 00 2C 00
         00 00 00 00
00002124 6F 02 00 00        		.dd LM255-_ShowAndVoic
00002126 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE95                    	.code
                            	LM255:
0000AE95 05 93              		R1=BP	// QImode move
0000AE96 0D 05 06 00        		R2=BP+6
0000AE98 02 99              		R4=R2	// QImode move
0000AE99 C4 92              		R1=[R4]	// QImode move
0000AE9A C8 D2              		[SP--]=R1	// QImode move
0000AE9B 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AE9D 41 00              		SP=SP+1
00002128                    	.debug
00002128 2E 00 73 00        		.dw '.stabn 0x44,0,384,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         34 00 2C 00
         00 00 00 00
0000213C 78 02 00 00        		.dd LM256-_ShowAndVoic
0000213E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AE9E                    	.code
                            	LM256:
0000AE9E 40 F0 89 BF        		call _delay	// call with return value
00002140                    	.debug
00002140 2E 00 73 00        		.dw '.stabn 0x44,0,385,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         35 00 2C 00
         00 00 00 00
00002154 7A 02 00 00        		.dd LM257-_ShowAndVoic
00002156 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEA0                    	.code
                            	LM257:
0000AEA0 05 93              		R1=BP	// QImode move
0000AEA1 0D 05 05 00        		R2=BP+5
0000AEA3 02 97              		R3=R2	// QImode move
0000AEA4 C3 92              		R1=[R3]	// QImode move
0000AEA5 C8 D2              		[SP--]=R1	// QImode move
0000AEA6 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AEA8 41 00              		SP=SP+1
00002158                    	.debug
00002158 2E 00 73 00        		.dw '.stabn 0x44,0,387,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         37 00 2C 00
         00 00 00 00
0000216C 83 02 00 00        		.dd LM258-_ShowAndVoic
0000216E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEA9                    	.code
                            	LM258:
0000AEA9 40 F0 89 BF        		call _delay	// call with return value
00002170                    	.debug
00002170 2E 00 73 00        		.dw '.stabn 0x44,0,388,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         38 00 2C 00
         00 00 00 00
00002184 85 02 00 00        		.dd LM259-_ShowAndVoic
00002186 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEAB                    	.code
                            	LM259:
0000AEAB 05 93              		R1=BP	// QImode move
0000AEAC 0D 05 04 00        		R2=BP+4
0000AEAE 02 99              		R4=R2	// QImode move
0000AEAF C4 92              		R1=[R4]	// QImode move
0000AEB0 C8 D2              		[SP--]=R1	// QImode move
0000AEB1 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AEB3 41 00              		SP=SP+1
00002188                    	.debug
00002188 2E 00 73 00        		.dw '.stabn 0x44,0,390,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         30 00 2C 00
         00 00 00 00
0000219C 8E 02 00 00        		.dd LM260-_ShowAndVoic
0000219E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEB4                    	.code
                            	LM260:
0000AEB4 40 F0 89 BF        		call _delay	// call with return value
000021A0                    	.debug
000021A0 2E 00 73 00        		.dw '.stabn 0x44,0,391,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         31 00 2C 00
         00 00 00 00
000021B4 90 02 00 00        		.dd LM261-_ShowAndVoic
000021B6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEB6                    	.code
                            	LM261:
0000AEB6 4B 92              		R1=11	// QImode move
0000AEB7 C8 D2              		[SP--]=R1	// QImode move
0000AEB8 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AEBA 41 00              		SP=SP+1
000021B8                    	.debug
000021B8 2E 00 73 00        		.dw '.stabn 0x44,0,392,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         32 00 2C 00
         00 00 00 00
000021CC 95 02 00 00        		.dd LM262-_ShowAndVoic
000021CE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEBB                    	.code
                            	LM262:
0000AEBB 40 F0 89 BF        		call _delay	// call with return value
000021D0                    	.debug
000021D0 2E 00 73 00        		.dw '.stabn 0x44,0,393,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         33 00 2C 00
         00 00 00 00
000021E4 97 02 00 00        		.dd LM263-_ShowAndVoic
000021E6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEBD                    	.code
                            	LM263:
0000AEBD 40 F0 89 BF        		call _delay	// call with return value
000021E8                    	.debug
000021E8 2E 00 73 00        		.dw '.stabn 0x44,0,394,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         34 00 2C 00
         00 00 00 00
000021FC 99 02 00 00        		.dd LM264-_ShowAndVoic
000021FE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEBF                    	.code
                            	LM264:
0000AEBF 40 F0 89 BF        		call _delay	// call with return value
00002200                    	.debug
00002200 2E 00 73 00        		.dw '.stabn 0x44,0,395,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         35 00 2C 00
         00 00 00 00
00002214 9B 02 00 00        		.dd LM265-_ShowAndVoic
00002216 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEC1                    	.code
                            	LM265:
0000AEC1 40 F0 89 BF        		call _delay	// call with return value
00002218                    	.debug
00002218 2E 00 73 00        		.dw '.stabn 0x44,0,396,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         36 00 2C 00
         00 00 00 00
0000222C 9D 02 00 00        		.dd LM266-_ShowAndVoic
0000222E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEC3                    	.code
                            	LM266:
0000AEC3 40 F0 89 BF        		call _delay	// call with return value
00002230                    	.debug
00002230 2E 00 73 00        		.dw '.stabn 0x44,0,397,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         37 00 2C 00
         00 00 00 00
00002244 9F 02 00 00        		.dd LM267-_ShowAndVoic
00002246 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEC5                    	.code
                            	LM267:
0000AEC5 40 F0 89 BF        		call _delay	// call with return value
00002248                    	.debug
00002248 2E 00 73 00        		.dw '.stabn 0x44,0,398,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         38 00 2C 00
         00 00 00 00
0000225C A1 02 00 00        		.dd LM268-_ShowAndVoic
0000225E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEC7                    	.code
                            	LM268:
0000AEC7 40 F0 89 BF        		call _delay	// call with return value
00002260                    	.debug
00002260 2E 00 73 00        		.dw '.stabn 0x44,0,399,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         39 00 2C 00
         00 00 00 00
00002274 A3 02 00 00        		.dd LM269-_ShowAndVoic
00002276 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEC9                    	.code
                            	LM269:
0000AEC9 40 F0 89 BF        		call _delay	// call with return value
00002278                    	.debug
00002278 2E 00 73 00        		.dw '.stabn 0x44,0,400,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         30 00 2C 00
         00 00 00 00
0000228C A5 02 00 00        		.dd LM270-_ShowAndVoic
0000228E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AECB                    	.code
                            	LM270:
0000AECB 05 93              		R1=BP	// QImode move
0000AECC 0D 05 0D 00        		R2=BP+13
0000AECE 02 97              		R3=R2	// QImode move
0000AECF C3 92              		R1=[R3]	// QImode move
0000AED0 C8 D2              		[SP--]=R1	// QImode move
0000AED1 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AED3 41 00              		SP=SP+1
00002290                    	.debug
00002290 2E 00 73 00        		.dw '.stabn 0x44,0,402,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         32 00 2C 00
         00 00 00 00
000022A4 AE 02 00 00        		.dd LM271-_ShowAndVoic
000022A6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AED4                    	.code
                            	LM271:
0000AED4 40 F0 89 BF        		call _delay	// call with return value
000022A8                    	.debug
000022A8 2E 00 73 00        		.dw '.stabn 0x44,0,403,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         33 00 2C 00
         00 00 00 00
000022BC B0 02 00 00        		.dd LM272-_ShowAndVoic
000022BE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AED6                    	.code
                            	LM272:
0000AED6 05 93              		R1=BP	// QImode move
0000AED7 0D 05 0C 00        		R2=BP+12
0000AED9 02 99              		R4=R2	// QImode move
0000AEDA C4 92              		R1=[R4]	// QImode move
0000AEDB C8 D2              		[SP--]=R1	// QImode move
0000AEDC 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AEDE 41 00              		SP=SP+1
000022C0                    	.debug
000022C0 2E 00 73 00        		.dw '.stabn 0x44,0,405,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         35 00 2C 00
         00 00 00 00
000022D4 B9 02 00 00        		.dd LM273-_ShowAndVoic
000022D6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEDF                    	.code
                            	LM273:
0000AEDF 40 F0 89 BF        		call _delay	// call with return value
000022D8                    	.debug
000022D8 2E 00 73 00        		.dw '.stabn 0x44,0,406,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         36 00 2C 00
         00 00 00 00
000022EC BB 02 00 00        		.dd LM274-_ShowAndVoic
000022EE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEE1                    	.code
                            	LM274:
0000AEE1 05 93              		R1=BP	// QImode move
0000AEE2 0D 05 0B 00        		R2=BP+11
0000AEE4 02 97              		R3=R2	// QImode move
0000AEE5 C3 92              		R1=[R3]	// QImode move
0000AEE6 C8 D2              		[SP--]=R1	// QImode move
0000AEE7 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AEE9 41 00              		SP=SP+1
000022F0                    	.debug
000022F0 2E 00 73 00        		.dw '.stabn 0x44,0,408,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         38 00 2C 00
         00 00 00 00
00002304 C4 02 00 00        		.dd LM275-_ShowAndVoic
00002306 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEEA                    	.code
                            	LM275:
0000AEEA 40 F0 89 BF        		call _delay	// call with return value
00002308                    	.debug
00002308 2E 00 73 00        		.dw '.stabn 0x44,0,409,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         39 00 2C 00
         00 00 00 00
0000231C C6 02 00 00        		.dd LM276-_ShowAndVoic
0000231E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEEC                    	.code
                            	LM276:
0000AEEC 05 93              		R1=BP	// QImode move
0000AEED 0D 05 0A 00        		R2=BP+10
0000AEEF 02 99              		R4=R2	// QImode move
0000AEF0 C4 92              		R1=[R4]	// QImode move
0000AEF1 C8 D2              		[SP--]=R1	// QImode move
0000AEF2 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AEF4 41 00              		SP=SP+1
00002320                    	.debug
00002320 2E 00 73 00        		.dw '.stabn 0x44,0,411,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         31 00 2C 00
         00 00 00 00
00002334 CF 02 00 00        		.dd LM277-_ShowAndVoic
00002336 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEF5                    	.code
                            	LM277:
0000AEF5 40 F0 89 BF        		call _delay	// call with return value
00002338                    	.debug
00002338 2E 00 73 00        		.dw '.stabn 0x44,0,412,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         32 00 2C 00
         00 00 00 00
0000234C D1 02 00 00        		.dd LM278-_ShowAndVoic
0000234E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEF7                    	.code
                            	LM278:
0000AEF7 4D 92              		R1=13	// QImode move
0000AEF8 C8 D2              		[SP--]=R1	// QImode move
0000AEF9 40 F0 00 A7        		call _PlayRespond	// call without return value
0000AEFB 41 00              		SP=SP+1
00002350                    	.debug
00002350 2E 00 73 00        		.dw '.stabn 0x44,0,414,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         34 00 2C 00
         00 00 00 00
00002364 D6 02 00 00        		.dd LM279-_ShowAndVoic
00002366 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEFC                    	.code
                            	LM279:
0000AEFC 40 F0 89 BF        		call _delay	// call with return value
00002368                    	.debug
00002368 2E 00 73 00        		.dw '.stabn 0x44,0,416,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         36 00 2C 00
         00 00 00 00
0000237C D8 02 00 00        		.dd LM280-_ShowAndVoic
0000237E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEFE                    	.code
                            	LM280:
                            	LBE16:
00002380                    	.debug
00002380 2E 00 73 00        		.dw '.stabn 0x44,0,416,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         36 00 2C 00
         00 00 00 00
00002394 D8 02 00 00        		.dd LM281-_ShowAndVoic
00002396 0D 00 0A 00        		.dw 0x0d,0x0a
0000AEFE                    	.code
                            	LM281:
                            	L133:
                            	
0000AEFE 64 00              		sp+=36
0000AEFF 88 98              		pop bp from [sp]
0000AF00 90 9A              		retf
                            		.endp	// end of ShowAndVoic
                            	
00002398                    	.debug
00002398 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000023AA 07 00 00 00        		.dd LBB16-_ShowAndVoic
000023AC 0D 00 0A 00        		.dw 0x0d,0x0a
0000AF01                    	.code
000023AE                    	.debug
000023AE 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000AF01                    	.CODE
000023C6                    	.debug
000023C6 2E 00 73 00        		.dw '.stabs "t:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000AF01                    	.CODE
000023DE                    	.debug
000023DE 2E 00 73 00        		.dw '.stabs "time:1",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 69 00
         6D 00 65 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
0000AF01                    	.CODE
000023F9                    	.debug
000023F9 2E 00 73 00        		.dw '.stabs "carlong:1",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 61 00
         72 00 6C 00
         6F 00 6E 00
         67 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
0000AF01                    	.CODE
00002417                    	.debug
00002417 2E 00 73 00        		.dw '.stabs "tm0:1",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         30 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000AF01                    	.CODE
00002431                    	.debug
00002431 2E 00 73 00        		.dw '.stabs "tm1:1",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         31 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000AF01                    	.CODE
0000244B                    	.debug
0000244B 2E 00 73 00        		.dw '.stabs "tm2:1",128,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         32 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000AF01                    	.CODE
00002465                    	.debug
00002465 2E 00 73 00        		.dw '.stabs "tm3:1",128,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         33 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 37 00
         0D 00 0A 00
0000AF01                    	.CODE
0000247F                    	.debug
0000247F 2E 00 73 00        		.dw '.stabs "second:1",128,0,0,8',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 65 00
         63 00 6F 00
         6E 00 64 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         38 00 0D 00
         0A 00      
0000AF01                    	.CODE
0000249C                    	.debug
0000249C 2E 00 73 00        		.dw '.stabs "distance:1",128,0,0,9',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 69 00
         73 00 74 00
         61 00 6E 00
         63 00 65 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         39 00 0D 00
         0A 00      
0000AF01                    	.CODE
000024BB                    	.debug
000024BB 2E 00 73 00        		.dw '.stabs "dst0:1",128,0,0,10',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 30 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 30 00
         0D 00 0A 00
0000AF01                    	.CODE
000024D7                    	.debug
000024D7 2E 00 73 00        		.dw '.stabs "dst1:1",128,0,0,11',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 31 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 31 00
         0D 00 0A 00
0000AF01                    	.CODE
000024F3                    	.debug
000024F3 2E 00 73 00        		.dw '.stabs "dst2:1",128,0,0,12',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 32 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 32 00
         0D 00 0A 00
0000AF01                    	.CODE
0000250F                    	.debug
0000250F 2E 00 73 00        		.dw '.stabs "dst3:1",128,0,0,13',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 33 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 33 00
         0D 00 0A 00
0000AF01                    	.CODE
0000252B                    	.debug
0000252B 2E 00 73 00        		.dw '.stabs "dst4:1",128,0,0,14',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 34 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 34 00
         0D 00 0A 00
0000AF01                    	.CODE
00002547                    	.debug
00002547 2E 00 73 00        		.dw '.stabs "dst5:1",128,0,0,15',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 35 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 35 00
         0D 00 0A 00
0000AF01                    	.CODE
00002563                    	.debug
00002563 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00002575 67 01 00 00        		.dd LBB17-_ShowAndVoic
00002577 0D 00 0A 00        		.dw 0x0d,0x0a
0000AF01                    	.code
00002579                    	.debug
00002579 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000258B C8 01 00 00        		.dd LBE17-_ShowAndVoic
0000258D 0D 00 0A 00        		.dw 0x0d,0x0a
0000AF01                    	.code
0000258F                    	.debug
0000258F 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000025A1 DC 01 00 00        		.dd LBB18-_ShowAndVoic
000025A3 0D 00 0A 00        		.dw 0x0d,0x0a
0000AF01                    	.code
000025A5                    	.debug
000025A5 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000025B7 5A 02 00 00        		.dd LBE18-_ShowAndVoic
000025B9 0D 00 0A 00        		.dw 0x0d,0x0a
0000AF01                    	.code
000025BB                    	.debug
000025BB 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000025CD D8 02 00 00        		.dd LBE16-_ShowAndVoic
000025CF 0D 00 0A 00        		.dw 0x0d,0x0a
0000AF01                    	.code
000025D1                    	.debug
000025D1 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000025DA DB 02 00 00        		.dd LME5-_ShowAndVoic
000025DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000AF01                    	.code
                            	LME5:
                            	.external _delay
                            	.external _singleled
                            	.external _car_long
                            	.external _car_time
                            	.external _F_Delay
                            	.external _BSR_GetResult
                            	.external _SP_Export
                            	.external _BSR_DeleteSDGroup
                            	.external _SP_Init_IOB
                            	.external _F_Speed
                            	.external _BSR_Train
                            	.external _SACM_S480_Stop
                            	.external _SACM_S480_ServiceLoop
                            	.external _SACM_S480_Status
                            	.external _SACM_S480_Play
                            	.external _SACM_S480_Initial
                            	.external _BSR_EnableCPUIndicator
                            	.external _BSR_InitRecognizer
                            	.external _SACM_A2000_Stop
                            	.external _ClearWatchDog
                            	.external _SACM_A2000_ServiceLoop
                            	.external _SACM_A2000_Status
                            	.external _SACM_A2000_Play
                            	.external _SACM_A2000_Initial
                            	.external _BSR_StopRecognizer
                            	.external __modi1
                            	.external __divi2
                            	.external __divi1
                            		.end
0 error(s), 0 warning(s).

