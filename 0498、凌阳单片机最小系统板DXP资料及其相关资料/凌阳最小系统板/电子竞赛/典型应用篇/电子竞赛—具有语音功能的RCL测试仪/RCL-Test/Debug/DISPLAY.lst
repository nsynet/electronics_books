Sunplus u'nSP Assembler - Ver. 1.8.0
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.10
                            	// Command: E:\PROGRA~1\Sunplus\UNSPID~3\IDE180\cc1.exe C:\DOCUME~1\Àî»ªÀö.DOMAIN\LOCALS~1\Temp\cccxaaaa.i -fkeep-inline-functions -quiet -dumpbase DISPLAY.c -gstabs -o .\Debug/DISPLAY.asm
                            	// gcc2_compiled.:
                            	
00008AC8                    	.code
                            	Ltext0:
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
0000002C                    	.debug
0000002C 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
00000052                    	.debug
00000052 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008AC8                    	.CODE
0000008D                    	.debug
0000008D 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
000000BD                    	.debug
000000BD 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
000000F7                    	.debug
000000F7 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
00000137                    	.debug
00000137 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008AC8                    	.CODE
00000176                    	.debug
00000176 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
000001A8                    	.debug
000001A8 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
000001DE                    	.debug
000001DE 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
00000214                    	.debug
00000214 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008AC8                    	.CODE
00000247                    	.debug
00000247 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
0000026D                    	.debug
0000026D 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008AC8                    	.CODE
00000294                    	.debug
00000294 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
000002C0                    	.debug
000002C0 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008AC8                    	.CODE
00000301                    	.debug
00000301 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008AC8                    	.CODE
00000330                    	.debug
00000330 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
00000360                    	.debug
00000360 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008AC8                    	.CODE
00000395                    	.debug
00000395 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008AC8                    	.CODE
00008AC8                    	.code
000003B5                    	.debug
000003B5 2E 00 73 00        		.dw '.stabs "R_display:F19",36,0,0,',0,0,offset _R_display,seg _R_display,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 5F 00
         64 00 69 00
         73 00 70 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008AC8                    	.CODE
                            	.public _R_display
                            	_R_display:	.proc
000003D9                    	.debug
000003D9 2E 00 73 00        		.dw '.stabn 0x44,0,8,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 2C 00
         00 00 00 00
000003EB 00 00 00 00        		.dd LM1-_R_display
000003ED 0D 00 0A 00        		.dw 0x0d,0x0a
00008AC8                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008AC8 88 DA              		push bp to [sp]
00008AC9 41 20              		sp-=1
00008ACA 08 0B 01 00        		bp=sp+1
                            	
00008ACC 0D 03 04 00        		R1=BP+4
00008ACE C5 D2              		[BP]=R1	// QImode move
000003EF                    	.debug
000003EF 2E 00 73 00        		.dw '.stabn 0x44,0,9,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 2C 00
         00 00 00 00
00000401 07 00 00 00        		.dd LM2-_R_display
00000403 0D 00 0A 00        		.dw 0x0d,0x0a
00008ACF                    	.code
                            	LM2:
00008ACF C5 96              		R3=[BP]	// QImode move
00008AD0 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008AD1 CB 94              		R2=[R3--]
00008AD2 40 96              		R3=0	// HFmode immediate to register move
00008AD3 0C 99 C8 42        		R4=17096
00008AD5 90 D8              		push R3,R4 to [sp]	// pushhf
00008AD6 90 D4              		push R1,R2 to [sp]	// pushhf
00008AD7 40 F0 05 96        		call __cmpf2	// call with return value
00008AD9 44 00              		SP=SP+4
00008ADA 41 42              		CMP R1,1	// QImode compare
00008ADB 02 3E              		JL L13	// QImode GE
00008ADC 0F 9F F0 8A        		PC=L3
                            	L13:
00000405                    	.debug
00000405 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
00000418 16 00 00 00        		.dd LM3-_R_display
0000041A 0D 00 0A 00        		.dw 0x0d,0x0a
00008ADE                    	.code
                            	LM3:
00008ADE 45 92              		R1=5	// QImode move
00008ADF 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
0000041C                    	.debug
0000041C 2E 00 73 00        		.dw '.stabn 0x44,0,12,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         2C 00 00 00
         00 00      
0000042F 19 00 00 00        		.dd LM4-_R_display
00000431 0D 00 0A 00        		.dw 0x0d,0x0a
00008AE1                    	.code
                            	LM4:
00008AE1 45 92              		R1=5	// QImode move
00008AE2 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
00000433                    	.debug
00000433 2E 00 73 00        		.dw '.stabn 0x44,0,13,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         2C 00 00 00
         00 00      
00000446 1C 00 00 00        		.dd LM5-_R_display
00000448 0D 00 0A 00        		.dw 0x0d,0x0a
00008AE4                    	.code
                            	LM5:
00008AE4 45 92              		R1=5	// QImode move
00008AE5 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
0000044A                    	.debug
0000044A 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
0000045D 1F 00 00 00        		.dd LM6-_R_display
0000045F 0D 00 0A 00        		.dw 0x0d,0x0a
00008AE7                    	.code
                            	LM6:
00008AE7 45 92              		R1=5	// QImode move
00008AE8 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000461                    	.debug
00000461 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
00000474 22 00 00 00        		.dd LM7-_R_display
00000476 0D 00 0A 00        		.dw 0x0d,0x0a
00008AEA                    	.code
                            	LM7:
00008AEA 41 92              		R1=1	// QImode move
00008AEB 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00000478                    	.debug
00000478 2E 00 73 00        		.dw '.stabn 0x44,0,18,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         2C 00 00 00
         00 00      
0000048B 25 00 00 00        		.dd LM8-_R_display
0000048D 0D 00 0A 00        		.dw 0x0d,0x0a
00008AED                    	.code
                            	LM8:
00008AED 54 92              		R1=20	// QImode move
00008AEE 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
                            	L3:
0000048F                    	.debug
0000048F 2E 00 73 00        		.dw '.stabn 0x44,0,20,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         2C 00 00 00
         00 00      
000004A2 28 00 00 00        		.dd LM9-_R_display
000004A4 0D 00 0A 00        		.dw 0x0d,0x0a
00008AF0                    	.code
                            	LM9:
00008AF0 C5 96              		R3=[BP]	// QImode move
00008AF1 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008AF2 CB 94              		R2=[R3--]
00008AF3 40 96              		R3=0	// HFmode immediate to register move
00008AF4 0C 99 C8 42        		R4=17096
00008AF6 90 D8              		push R3,R4 to [sp]	// pushhf
00008AF7 90 D4              		push R1,R2 to [sp]	// pushhf
00008AF8 40 F0 05 96        		call __cmpf2	// call with return value
00008AFA 44 00              		SP=SP+4
00008AFB 41 42              		CMP R1,1	// QImode compare
00008AFC 02 2E              		JNL L14	// QImode LT
00008AFD 0F 9F 68 8B        		PC=L4
                            	L14:
00008AFF C5 96              		R3=[BP]	// QImode move
00008B00 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008B01 CB 94              		R2=[R3--]
00008B02 0B 97 00 C0        		R3=49152	// HFmode immediate to register move
00008B04 0C 99 79 44        		R4=17529
00008B06 90 D8              		push R3,R4 to [sp]	// pushhf
00008B07 90 D4              		push R1,R2 to [sp]	// pushhf
00008B08 40 F0 05 96        		call __cmpf2	// call with return value
00008B0A 44 00              		SP=SP+4
00008B0B 41 42              		CMP R1,1	// QImode compare
00008B0C 02 AE              		JNG L15	// QImode GT
00008B0D 0F 9F 68 8B        		PC=L4
                            	L15:
000004A6                    	.debug
000004A6 2E 00 73 00        		.dw '.stabn 0x44,0,22,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         2C 00 00 00
         00 00      
000004B9 47 00 00 00        		.dd LM10-_R_display
000004BB 0D 00 0A 00        		.dw 0x0d,0x0a
00008B0F                    	.code
                            	LM10:
00008B0F C5 96              		R3=[BP]	// QImode move
00008B10 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008B11 CB 94              		R2=[R3--]
00008B12 90 D4              		push R1,R2 to [sp]	// pushhf
00008B13 40 F0 33 96        		call __cvf2i1	// call with return value
00008B15 42 00              		SP=SP+2
00008B16 19 D3 E5 01        		[_g_uiAx]=R1	// QImode move
000004BD                    	.debug
000004BD 2E 00 73 00        		.dw '.stabn 0x44,0,23,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         2C 00 00 00
         00 00      
000004D0 50 00 00 00        		.dd LM11-_R_display
000004D2 0D 00 0A 00        		.dw 0x0d,0x0a
00008B18                    	.code
                            	LM11:
00008B18 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008B1A 0A 95 64 00        		R2=100	// QImode move
00008B1C C8 D4              		[SP--]=R2	// QImode move
00008B1D C8 D2              		[SP--]=R1	// QImode move
00008B1E 40 F0 8C 95        		call __divu1	// call with return value
00008B20 42 00              		SP=SP+2
00008B21 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
000004D4                    	.debug
000004D4 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
000004E7 5B 00 00 00        		.dd LM12-_R_display
000004E9 0D 00 0A 00        		.dw 0x0d,0x0a
00008B23                    	.code
                            	LM12:
00008B23 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008B25 0A 95 64 00        		R2=100	// QImode move
00008B27 C8 D4              		[SP--]=R2	// QImode move
00008B28 C8 D2              		[SP--]=R1	// QImode move
00008B29 40 F0 BE 96        		call __modu1	// call with return value
00008B2B 42 00              		SP=SP+2
00008B2C 4A 94              		R2=10	// QImode move
00008B2D C8 D4              		[SP--]=R2	// QImode move
00008B2E C8 D2              		[SP--]=R1	// QImode move
00008B2F 40 F0 8C 95        		call __divu1	// call with return value
00008B31 42 00              		SP=SP+2
00008B32 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
000004EB                    	.debug
000004EB 2E 00 73 00        		.dw '.stabn 0x44,0,25,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         2C 00 00 00
         00 00      
000004FE 6C 00 00 00        		.dd LM13-_R_display
00000500 0D 00 0A 00        		.dw 0x0d,0x0a
00008B34                    	.code
                            	LM13:
00008B34 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008B36 0A 95 64 00        		R2=100	// QImode move
00008B38 C8 D4              		[SP--]=R2	// QImode move
00008B39 C8 D2              		[SP--]=R1	// QImode move
00008B3A 40 F0 BE 96        		call __modu1	// call with return value
00008B3C 42 00              		SP=SP+2
00008B3D 4A 94              		R2=10	// QImode move
00008B3E C8 D4              		[SP--]=R2	// QImode move
00008B3F C8 D2              		[SP--]=R1	// QImode move
00008B40 40 F0 BE 96        		call __modu1	// call with return value
00008B42 42 00              		SP=SP+2
00008B43 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00000502                    	.debug
00000502 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
00000515 7D 00 00 00        		.dd LM14-_R_display
00000517 0D 00 0A 00        		.dw 0x0d,0x0a
00008B45                    	.code
                            	LM14:
00008B45 40 92              		R1=0	// QImode move
00008B46 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000519                    	.debug
00000519 2E 00 73 00        		.dw '.stabn 0x44,0,29,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         2C 00 00 00
         00 00      
0000052C 80 00 00 00        		.dd LM15-_R_display
0000052E 0D 00 0A 00        		.dw 0x0d,0x0a
00008B48                    	.code
                            	LM15:
00008B48 11 93 FF 01        		R1=[_g_array+3]	// QImode move
00008B4A 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
00000530                    	.debug
00000530 2E 00 73 00        		.dw '.stabn 0x44,0,30,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         2C 00 00 00
         00 00      
00000543 84 00 00 00        		.dd LM16-_R_display
00000545 0D 00 0A 00        		.dw 0x0d,0x0a
00008B4C                    	.code
                            	LM16:
00008B4C 4C 92              		R1=12	// QImode move
00008B4D 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
00000547                    	.debug
00000547 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
0000055A 87 00 00 00        		.dd LM17-_R_display
0000055C 0D 00 0A 00        		.dw 0x0d,0x0a
00008B4F                    	.code
                            	LM17:
00008B4F 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008B51 40 42              		CMP R1,0	// QImode test
00008B52 02 5E              		JZ L16	// QImode NE
00008B53 0F 9F 5B 8B        		PC=L5
                            	L16:
0000055E                    	.debug
0000055E 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
00000571 8D 00 00 00        		.dd LM18-_R_display
00000573 0D 00 0A 00        		.dw 0x0d,0x0a
00008B55                    	.code
                            	LM18:
00008B55 43 92              		R1=3	// QImode move
00008B56 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00000575                    	.debug
00000575 2E 00 73 00        		.dw '.stabn 0x44,0,33,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         2C 00 00 00
         00 00      
00000588 90 00 00 00        		.dd LM19-_R_display
0000058A 0D 00 0A 00        		.dw 0x0d,0x0a
00008B58                    	.code
                            	LM19:
00008B58 50 92              		R1=16	// QImode move
00008B59 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
                            	L5:
0000058C                    	.debug
0000058C 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
0000059F 93 00 00 00        		.dd LM20-_R_display
000005A1 0D 00 0A 00        		.dw 0x0d,0x0a
00008B5B                    	.code
                            	LM20:
00008B5B 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008B5D 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
000005A3                    	.debug
000005A3 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
000005B6 97 00 00 00        		.dd LM21-_R_display
000005B8 0D 00 0A 00        		.dw 0x0d,0x0a
00008B5F                    	.code
                            	LM21:
00008B5F 4B 92              		R1=11	// QImode move
00008B60 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
000005BA                    	.debug
000005BA 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
000005CD 9A 00 00 00        		.dd LM22-_R_display
000005CF 0D 00 0A 00        		.dw 0x0d,0x0a
00008B62                    	.code
                            	LM22:
00008B62 50 92              		R1=16	// QImode move
00008B63 19 D3 FA 01        		[_g_Speechary+4]=R1	// QImode move
000005D1                    	.debug
000005D1 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
000005E4 9D 00 00 00        		.dd LM23-_R_display
000005E6 0D 00 0A 00        		.dw 0x0d,0x0a
00008B65                    	.code
                            	LM23:
00008B65 45 92              		R1=5	// QImode move
00008B66 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L4:
000005E8                    	.debug
000005E8 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
000005FB A0 00 00 00        		.dd LM24-_R_display
000005FD 0D 00 0A 00        		.dw 0x0d,0x0a
00008B68                    	.code
                            	LM24:
00008B68 C5 96              		R3=[BP]	// QImode move
00008B69 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008B6A CB 94              		R2=[R3--]
00008B6B 40 96              		R3=0	// HFmode immediate to register move
00008B6C 0C 99 7A 44        		R4=17530
00008B6E 90 D8              		push R3,R4 to [sp]	// pushhf
00008B6F 90 D4              		push R1,R2 to [sp]	// pushhf
00008B70 40 F0 05 96        		call __cmpf2	// call with return value
00008B72 44 00              		SP=SP+4
00008B73 41 42              		CMP R1,1	// QImode compare
00008B74 02 2E              		JNL L17	// QImode LT
00008B75 0F 9F DC 8B        		PC=L6
                            	L17:
00008B77 C5 96              		R3=[BP]	// QImode move
00008B78 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008B79 CB 94              		R2=[R3--]
00008B7A 0B 97 00 3C        		R3=15360	// HFmode immediate to register move
00008B7C 0C 99 1C 46        		R4=17948
00008B7E 90 D8              		push R3,R4 to [sp]	// pushhf
00008B7F 90 D4              		push R1,R2 to [sp]	// pushhf
00008B80 40 F0 05 96        		call __cmpf2	// call with return value
00008B82 44 00              		SP=SP+4
00008B83 41 42              		CMP R1,1	// QImode compare
00008B84 02 AE              		JNG L18	// QImode GT
00008B85 0F 9F DC 8B        		PC=L6
                            	L18:
000005FF                    	.debug
000005FF 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00000612 BF 00 00 00        		.dd LM25-_R_display
00000614 0D 00 0A 00        		.dw 0x0d,0x0a
00008B87                    	.code
                            	LM25:
00008B87 C5 96              		R3=[BP]	// QImode move
00008B88 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008B89 CB 94              		R2=[R3--]
00008B8A 90 D4              		push R1,R2 to [sp]	// pushhf
00008B8B 40 F0 33 96        		call __cvf2i1	// call with return value
00008B8D 42 00              		SP=SP+2
00008B8E 19 D3 E5 01        		[_g_uiAx]=R1	// QImode move
00000616                    	.debug
00000616 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
00000629 C8 00 00 00        		.dd LM26-_R_display
0000062B 0D 00 0A 00        		.dw 0x0d,0x0a
00008B90                    	.code
                            	LM26:
00008B90 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008B92 0A 95 E8 03        		R2=1000	// QImode move
00008B94 C8 D4              		[SP--]=R2	// QImode move
00008B95 C8 D2              		[SP--]=R1	// QImode move
00008B96 40 F0 8C 95        		call __divu1	// call with return value
00008B98 42 00              		SP=SP+2
00008B99 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
0000062D                    	.debug
0000062D 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
00000640 D3 00 00 00        		.dd LM27-_R_display
00000642 0D 00 0A 00        		.dw 0x0d,0x0a
00008B9B                    	.code
                            	LM27:
00008B9B 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008B9D 0A 95 E8 03        		R2=1000	// QImode move
00008B9F C8 D4              		[SP--]=R2	// QImode move
00008BA0 C8 D2              		[SP--]=R1	// QImode move
00008BA1 40 F0 BE 96        		call __modu1	// call with return value
00008BA3 42 00              		SP=SP+2
00008BA4 0A 95 64 00        		R2=100	// QImode move
00008BA6 C8 D4              		[SP--]=R2	// QImode move
00008BA7 C8 D2              		[SP--]=R1	// QImode move
00008BA8 40 F0 8C 95        		call __divu1	// call with return value
00008BAA 42 00              		SP=SP+2
00008BAB 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
00000644                    	.debug
00000644 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00000657 E5 00 00 00        		.dd LM28-_R_display
00000659 0D 00 0A 00        		.dw 0x0d,0x0a
00008BAD                    	.code
                            	LM28:
00008BAD 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008BAF 0A 95 E8 03        		R2=1000	// QImode move
00008BB1 C8 D4              		[SP--]=R2	// QImode move
00008BB2 C8 D2              		[SP--]=R1	// QImode move
00008BB3 40 F0 BE 96        		call __modu1	// call with return value
00008BB5 42 00              		SP=SP+2
00008BB6 0A 95 64 00        		R2=100	// QImode move
00008BB8 C8 D4              		[SP--]=R2	// QImode move
00008BB9 C8 D2              		[SP--]=R1	// QImode move
00008BBA 40 F0 BE 96        		call __modu1	// call with return value
00008BBC 42 00              		SP=SP+2
00008BBD 4A 94              		R2=10	// QImode move
00008BBE C8 D4              		[SP--]=R2	// QImode move
00008BBF C8 D2              		[SP--]=R1	// QImode move
00008BC0 40 F0 8C 95        		call __divu1	// call with return value
00008BC2 42 00              		SP=SP+2
00008BC3 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
0000065B                    	.debug
0000065B 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
0000066E FD 00 00 00        		.dd LM29-_R_display
00000670 0D 00 0A 00        		.dw 0x0d,0x0a
00008BC5                    	.code
                            	LM29:
00008BC5 41 92              		R1=1	// QImode move
00008BC6 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000672                    	.debug
00000672 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
00000685 00 01 00 00        		.dd LM30-_R_display
00000687 0D 00 0A 00        		.dw 0x0d,0x0a
00008BC8                    	.code
                            	LM30:
00008BC8 11 93 FF 01        		R1=[_g_array+3]	// QImode move
00008BCA 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
00000689                    	.debug
00000689 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
0000069C 04 01 00 00        		.dd LM31-_R_display
0000069E 0D 00 0A 00        		.dw 0x0d,0x0a
00008BCC                    	.code
                            	LM31:
00008BCC 4A 92              		R1=10	// QImode move
00008BCD 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
000006A0                    	.debug
000006A0 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
000006B3 07 01 00 00        		.dd LM32-_R_display
000006B5 0D 00 0A 00        		.dw 0x0d,0x0a
00008BCF                    	.code
                            	LM32:
00008BCF 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008BD1 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
000006B7                    	.debug
000006B7 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
000006CA 0B 01 00 00        		.dd LM33-_R_display
000006CC 0D 00 0A 00        		.dw 0x0d,0x0a
00008BD3                    	.code
                            	LM33:
00008BD3 4D 92              		R1=13	// QImode move
00008BD4 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
000006CE                    	.debug
000006CE 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
000006E1 0E 01 00 00        		.dd LM34-_R_display
000006E3 0D 00 0A 00        		.dw 0x0d,0x0a
00008BD6                    	.code
                            	LM34:
00008BD6 50 92              		R1=16	// QImode move
00008BD7 19 D3 FA 01        		[_g_Speechary+4]=R1	// QImode move
000006E5                    	.debug
000006E5 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
000006F8 11 01 00 00        		.dd LM35-_R_display
000006FA 0D 00 0A 00        		.dw 0x0d,0x0a
00008BD9                    	.code
                            	LM35:
00008BD9 45 92              		R1=5	// QImode move
00008BDA 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L6:
000006FC                    	.debug
000006FC 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
0000070F 14 01 00 00        		.dd LM36-_R_display
00000711 0D 00 0A 00        		.dw 0x0d,0x0a
00008BDC                    	.code
                            	LM36:
00008BDC C5 96              		R3=[BP]	// QImode move
00008BDD D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008BDE CB 94              		R2=[R3--]
00008BDF 0B 97 00 40        		R3=16384	// HFmode immediate to register move
00008BE1 0C 99 1C 46        		R4=17948
00008BE3 90 D8              		push R3,R4 to [sp]	// pushhf
00008BE4 90 D4              		push R1,R2 to [sp]	// pushhf
00008BE5 40 F0 05 96        		call __cmpf2	// call with return value
00008BE7 44 00              		SP=SP+4
00008BE8 41 42              		CMP R1,1	// QImode compare
00008BE9 02 2E              		JNL L19	// QImode LT
00008BEA 0F 9F 57 8C        		PC=L7
                            	L19:
00008BEC C5 96              		R3=[BP]	// QImode move
00008BED D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008BEE CB 94              		R2=[R3--]
00008BEF 0B 97 80 4F        		R3=20352	// HFmode immediate to register move
00008BF1 0C 99 C3 47        		R4=18371
00008BF3 90 D8              		push R3,R4 to [sp]	// pushhf
00008BF4 90 D4              		push R1,R2 to [sp]	// pushhf
00008BF5 40 F0 05 96        		call __cmpf2	// call with return value
00008BF7 44 00              		SP=SP+4
00008BF8 41 42              		CMP R1,1	// QImode compare
00008BF9 02 AE              		JNG L20	// QImode GT
00008BFA 0F 9F 57 8C        		PC=L7
                            	L20:
00000713                    	.debug
00000713 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
00000726 34 01 00 00        		.dd LM37-_R_display
00000728 0D 00 0A 00        		.dw 0x0d,0x0a
00008BFC                    	.code
                            	LM37:
00008BFC C5 96              		R3=[BP]	// QImode move
00008BFD D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008BFE CB 94              		R2=[R3--]
00008BFF 40 96              		R3=0	// HFmode immediate to register move
00008C00 0C 99 C8 42        		R4=17096
00008C02 90 D8              		push R3,R4 to [sp]	// pushhf
00008C03 90 D4              		push R1,R2 to [sp]	// pushhf
00008C04 40 F0 03 93        		call __divf2	// call with return value
00008C06 44 00              		SP=SP+4
00008C07 C5 96              		R3=[BP]	// QImode move
00008C08 D3 D2              		[R3++]=R1	// [RD]=RS HFmode, RD!=RS+1
00008C09 CB D4              		[R3--]=R2
0000072A                    	.debug
0000072A 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
0000073D 42 01 00 00        		.dd LM38-_R_display
0000073F 0D 00 0A 00        		.dw 0x0d,0x0a
00008C0A                    	.code
                            	LM38:
00008C0A C5 96              		R3=[BP]	// QImode move
00008C0B D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008C0C CB 94              		R2=[R3--]
00008C0D 90 D4              		push R1,R2 to [sp]	// pushhf
00008C0E 40 F0 33 96        		call __cvf2i1	// call with return value
00008C10 42 00              		SP=SP+2
00008C11 19 D3 E5 01        		[_g_uiAx]=R1	// QImode move
00000741                    	.debug
00000741 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00000754 4B 01 00 00        		.dd LM39-_R_display
00000756 0D 00 0A 00        		.dw 0x0d,0x0a
00008C13                    	.code
                            	LM39:
00008C13 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008C15 0A 95 64 00        		R2=100	// QImode move
00008C17 C8 D4              		[SP--]=R2	// QImode move
00008C18 C8 D2              		[SP--]=R1	// QImode move
00008C19 40 F0 8C 95        		call __divu1	// call with return value
00008C1B 42 00              		SP=SP+2
00008C1C 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00000758                    	.debug
00000758 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
0000076B 56 01 00 00        		.dd LM40-_R_display
0000076D 0D 00 0A 00        		.dw 0x0d,0x0a
00008C1E                    	.code
                            	LM40:
00008C1E 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008C20 0A 95 64 00        		R2=100	// QImode move
00008C22 C8 D4              		[SP--]=R2	// QImode move
00008C23 C8 D2              		[SP--]=R1	// QImode move
00008C24 40 F0 BE 96        		call __modu1	// call with return value
00008C26 42 00              		SP=SP+2
00008C27 4A 94              		R2=10	// QImode move
00008C28 C8 D4              		[SP--]=R2	// QImode move
00008C29 C8 D2              		[SP--]=R1	// QImode move
00008C2A 40 F0 8C 95        		call __divu1	// call with return value
00008C2C 42 00              		SP=SP+2
00008C2D 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
0000076F                    	.debug
0000076F 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
00000782 67 01 00 00        		.dd LM41-_R_display
00000784 0D 00 0A 00        		.dw 0x0d,0x0a
00008C2F                    	.code
                            	LM41:
00008C2F 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008C31 0A 95 64 00        		R2=100	// QImode move
00008C33 C8 D4              		[SP--]=R2	// QImode move
00008C34 C8 D2              		[SP--]=R1	// QImode move
00008C35 40 F0 BE 96        		call __modu1	// call with return value
00008C37 42 00              		SP=SP+2
00008C38 4A 94              		R2=10	// QImode move
00008C39 C8 D4              		[SP--]=R2	// QImode move
00008C3A C8 D2              		[SP--]=R1	// QImode move
00008C3B 40 F0 BE 96        		call __modu1	// call with return value
00008C3D 42 00              		SP=SP+2
00008C3E 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00000786                    	.debug
00000786 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
00000799 78 01 00 00        		.dd LM42-_R_display
0000079B 0D 00 0A 00        		.dw 0x0d,0x0a
00008C40                    	.code
                            	LM42:
00008C40 42 92              		R1=2	// QImode move
00008C41 19 D3 FC 01        		[_g_array]=R1	// QImode move
0000079D                    	.debug
0000079D 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
000007B0 7B 01 00 00        		.dd LM43-_R_display
000007B2 0D 00 0A 00        		.dw 0x0d,0x0a
00008C43                    	.code
                            	LM43:
00008C43 11 93 FF 01        		R1=[_g_array+3]	// QImode move
00008C45 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
000007B4                    	.debug
000007B4 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000007C7 7F 01 00 00        		.dd LM44-_R_display
000007C9 0D 00 0A 00        		.dw 0x0d,0x0a
00008C47                    	.code
                            	LM44:
00008C47 4B 92              		R1=11	// QImode move
00008C48 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
000007CB                    	.debug
000007CB 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
000007DE 82 01 00 00        		.dd LM45-_R_display
000007E0 0D 00 0A 00        		.dw 0x0d,0x0a
00008C4A                    	.code
                            	LM45:
00008C4A 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008C4C 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
000007E2                    	.debug
000007E2 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
000007F5 86 01 00 00        		.dd LM46-_R_display
000007F7 0D 00 0A 00        		.dw 0x0d,0x0a
00008C4E                    	.code
                            	LM46:
00008C4E 4D 92              		R1=13	// QImode move
00008C4F 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
000007F9                    	.debug
000007F9 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
0000080C 89 01 00 00        		.dd LM47-_R_display
0000080E 0D 00 0A 00        		.dw 0x0d,0x0a
00008C51                    	.code
                            	LM47:
00008C51 50 92              		R1=16	// QImode move
00008C52 19 D3 FA 01        		[_g_Speechary+4]=R1	// QImode move
00000810                    	.debug
00000810 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
00000823 8C 01 00 00        		.dd LM48-_R_display
00000825 0D 00 0A 00        		.dw 0x0d,0x0a
00008C54                    	.code
                            	LM48:
00008C54 45 92              		R1=5	// QImode move
00008C55 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L7:
00000827                    	.debug
00000827 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
0000083A 8F 01 00 00        		.dd LM49-_R_display
0000083C 0D 00 0A 00        		.dw 0x0d,0x0a
00008C57                    	.code
                            	LM49:
00008C57 C5 96              		R3=[BP]	// QImode move
00008C58 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008C59 CB 94              		R2=[R3--]
00008C5A 0B 97 00 50        		R3=20480	// HFmode immediate to register move
00008C5C 0C 99 C3 47        		R4=18371
00008C5E 90 D8              		push R3,R4 to [sp]	// pushhf
00008C5F 90 D4              		push R1,R2 to [sp]	// pushhf
00008C60 40 F0 05 96        		call __cmpf2	// call with return value
00008C62 44 00              		SP=SP+4
00008C63 41 42              		CMP R1,1	// QImode compare
00008C64 02 2E              		JNL L21	// QImode LT
00008C65 0F 9F E6 8C        		PC=L8
                            	L21:
00008C67 C5 96              		R3=[BP]	// QImode move
00008C68 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008C69 CB 94              		R2=[R3--]
00008C6A 0B 97 F0 23        		R3=9200	// HFmode immediate to register move
00008C6C 0C 99 74 49        		R4=18804
00008C6E 90 D8              		push R3,R4 to [sp]	// pushhf
00008C6F 90 D4              		push R1,R2 to [sp]	// pushhf
00008C70 40 F0 05 96        		call __cmpf2	// call with return value
00008C72 44 00              		SP=SP+4
00008C73 41 42              		CMP R1,1	// QImode compare
00008C74 02 AE              		JNG L22	// QImode GT
00008C75 0F 9F E6 8C        		PC=L8
                            	L22:
0000083E                    	.debug
0000083E 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00000851 AF 01 00 00        		.dd LM50-_R_display
00000853 0D 00 0A 00        		.dw 0x0d,0x0a
00008C77                    	.code
                            	LM50:
00008C77 C5 96              		R3=[BP]	// QImode move
00008C78 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008C79 CB 94              		R2=[R3--]
00008C7A 40 96              		R3=0	// HFmode immediate to register move
00008C7B 0C 99 7A 44        		R4=17530
00008C7D 90 D8              		push R3,R4 to [sp]	// pushhf
00008C7E 90 D4              		push R1,R2 to [sp]	// pushhf
00008C7F 40 F0 03 93        		call __divf2	// call with return value
00008C81 44 00              		SP=SP+4
00008C82 C5 96              		R3=[BP]	// QImode move
00008C83 D3 D2              		[R3++]=R1	// [RD]=RS HFmode, RD!=RS+1
00008C84 CB D4              		[R3--]=R2
00000855                    	.debug
00000855 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
00000868 BD 01 00 00        		.dd LM51-_R_display
0000086A 0D 00 0A 00        		.dw 0x0d,0x0a
00008C85                    	.code
                            	LM51:
00008C85 C5 96              		R3=[BP]	// QImode move
00008C86 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008C87 CB 94              		R2=[R3--]
00008C88 90 D4              		push R1,R2 to [sp]	// pushhf
00008C89 40 F0 33 96        		call __cvf2i1	// call with return value
00008C8B 42 00              		SP=SP+2
00008C8C 19 D3 E5 01        		[_g_uiAx]=R1	// QImode move
0000086C                    	.debug
0000086C 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
0000087F C6 01 00 00        		.dd LM52-_R_display
00000881 0D 00 0A 00        		.dw 0x0d,0x0a
00008C8E                    	.code
                            	LM52:
00008C8E 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008C90 0A 95 64 00        		R2=100	// QImode move
00008C92 C8 D4              		[SP--]=R2	// QImode move
00008C93 C8 D2              		[SP--]=R1	// QImode move
00008C94 40 F0 8C 95        		call __divu1	// call with return value
00008C96 42 00              		SP=SP+2
00008C97 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00000883                    	.debug
00000883 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00000896 D1 01 00 00        		.dd LM53-_R_display
00000898 0D 00 0A 00        		.dw 0x0d,0x0a
00008C99                    	.code
                            	LM53:
00008C99 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008C9B 0A 95 64 00        		R2=100	// QImode move
00008C9D C8 D4              		[SP--]=R2	// QImode move
00008C9E C8 D2              		[SP--]=R1	// QImode move
00008C9F 40 F0 BE 96        		call __modu1	// call with return value
00008CA1 42 00              		SP=SP+2
00008CA2 4A 94              		R2=10	// QImode move
00008CA3 C8 D4              		[SP--]=R2	// QImode move
00008CA4 C8 D2              		[SP--]=R1	// QImode move
00008CA5 40 F0 8C 95        		call __divu1	// call with return value
00008CA7 42 00              		SP=SP+2
00008CA8 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
0000089A                    	.debug
0000089A 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
000008AD E2 01 00 00        		.dd LM54-_R_display
000008AF 0D 00 0A 00        		.dw 0x0d,0x0a
00008CAA                    	.code
                            	LM54:
00008CAA 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008CAC 0A 95 64 00        		R2=100	// QImode move
00008CAE C8 D4              		[SP--]=R2	// QImode move
00008CAF C8 D2              		[SP--]=R1	// QImode move
00008CB0 40 F0 BE 96        		call __modu1	// call with return value
00008CB2 42 00              		SP=SP+2
00008CB3 4A 94              		R2=10	// QImode move
00008CB4 C8 D4              		[SP--]=R2	// QImode move
00008CB5 C8 D2              		[SP--]=R1	// QImode move
00008CB6 40 F0 BE 96        		call __modu1	// call with return value
00008CB8 42 00              		SP=SP+2
00008CB9 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
000008B1                    	.debug
000008B1 2E 00 73 00        		.dw '.stabn 0x44,0,82,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 32 00
         2C 00 00 00
         00 00      
000008C4 F3 01 00 00        		.dd LM55-_R_display
000008C6 0D 00 0A 00        		.dw 0x0d,0x0a
00008CBB                    	.code
                            	LM55:
00008CBB 43 92              		R1=3	// QImode move
00008CBC 19 D3 FC 01        		[_g_array]=R1	// QImode move
000008C8                    	.debug
000008C8 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
000008DB F6 01 00 00        		.dd LM56-_R_display
000008DD 0D 00 0A 00        		.dw 0x0d,0x0a
00008CBE                    	.code
                            	LM56:
00008CBE 11 93 FF 01        		R1=[_g_array+3]	// QImode move
00008CC0 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
000008DF                    	.debug
000008DF 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
000008F2 FA 01 00 00        		.dd LM57-_R_display
000008F4 0D 00 0A 00        		.dw 0x0d,0x0a
00008CC2                    	.code
                            	LM57:
00008CC2 4C 92              		R1=12	// QImode move
00008CC3 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
000008F6                    	.debug
000008F6 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
00000909 FD 01 00 00        		.dd LM58-_R_display
0000090B 0D 00 0A 00        		.dw 0x0d,0x0a
00008CC5                    	.code
                            	LM58:
00008CC5 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008CC7 40 42              		CMP R1,0	// QImode test
00008CC8 02 5E              		JZ L23	// QImode NE
00008CC9 0F 9F D6 8C        		PC=L9
                            	L23:
0000090D                    	.debug
0000090D 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
00000920 03 02 00 00        		.dd LM59-_R_display
00000922 0D 00 0A 00        		.dw 0x0d,0x0a
00008CCB                    	.code
                            	LM59:
00008CCB 4D 92              		R1=13	// QImode move
00008CCC 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00000924                    	.debug
00000924 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00000937 06 02 00 00        		.dd LM60-_R_display
00000939 0D 00 0A 00        		.dw 0x0d,0x0a
00008CCE                    	.code
                            	LM60:
00008CCE 50 92              		R1=16	// QImode move
00008CCF 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
0000093B                    	.debug
0000093B 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
0000094E 09 02 00 00        		.dd LM61-_R_display
00000950 0D 00 0A 00        		.dw 0x0d,0x0a
00008CD1                    	.code
                            	LM61:
00008CD1 44 92              		R1=4	// QImode move
00008CD2 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00000952                    	.debug
00000952 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
00000965 0C 02 00 00        		.dd LM62-_R_display
00000967 0D 00 0A 00        		.dw 0x0d,0x0a
00008CD4                    	.code
                            	LM62:
00008CD4 0F 9F E6 8C        		pc=L8	// jump
                            	L9:
00000969                    	.debug
00000969 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
0000097C 0E 02 00 00        		.dd LM63-_R_display
0000097E 0D 00 0A 00        		.dw 0x0d,0x0a
00008CD6                    	.code
                            	LM63:
00008CD6 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008CD8 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00000980                    	.debug
00000980 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
00000993 12 02 00 00        		.dd LM64-_R_display
00000995 0D 00 0A 00        		.dw 0x0d,0x0a
00008CDA                    	.code
                            	LM64:
00008CDA 4B 92              		R1=11	// QImode move
00008CDB 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
00000997                    	.debug
00000997 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
000009AA 15 02 00 00        		.dd LM65-_R_display
000009AC 0D 00 0A 00        		.dw 0x0d,0x0a
00008CDD                    	.code
                            	LM65:
00008CDD 4D 92              		R1=13	// QImode move
00008CDE 19 D3 FA 01        		[_g_Speechary+4]=R1	// QImode move
000009AE                    	.debug
000009AE 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
000009C1 18 02 00 00        		.dd LM66-_R_display
000009C3 0D 00 0A 00        		.dw 0x0d,0x0a
00008CE0                    	.code
                            	LM66:
00008CE0 50 92              		R1=16	// QImode move
00008CE1 19 D3 FB 01        		[_g_Speechary+5]=R1	// QImode move
000009C5                    	.debug
000009C5 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
000009D8 1B 02 00 00        		.dd LM67-_R_display
000009DA 0D 00 0A 00        		.dw 0x0d,0x0a
00008CE3                    	.code
                            	LM67:
00008CE3 46 92              		R1=6	// QImode move
00008CE4 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L10:
                            	L8:
000009DC                    	.debug
000009DC 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
000009F0 1E 02 00 00        		.dd LM68-_R_display
000009F2 0D 00 0A 00        		.dw 0x0d,0x0a
00008CE6                    	.code
                            	LM68:
00008CE6 C5 96              		R3=[BP]	// QImode move
00008CE7 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008CE8 CB 94              		R2=[R3--]
00008CE9 0B 97 00 24        		R3=9216	// HFmode immediate to register move
00008CEB 0C 99 74 49        		R4=18804
00008CED 90 D8              		push R3,R4 to [sp]	// pushhf
00008CEE 90 D4              		push R1,R2 to [sp]	// pushhf
00008CEF 40 F0 05 96        		call __cmpf2	// call with return value
00008CF1 44 00              		SP=SP+4
00008CF2 41 42              		CMP R1,1	// QImode compare
00008CF3 02 5E              		JZ L24	// QImode NE
00008CF4 0F 9F 0E 8D        		PC=L11
                            	L24:
000009F4                    	.debug
000009F4 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000A08 2E 02 00 00        		.dd LM69-_R_display
00000A0A 0D 00 0A 00        		.dw 0x0d,0x0a
00008CF6                    	.code
                            	LM69:
00008CF6 41 92              		R1=1	// QImode move
00008CF7 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00000A0C                    	.debug
00000A0C 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000A20 31 02 00 00        		.dd LM70-_R_display
00000A22 0D 00 0A 00        		.dw 0x0d,0x0a
00008CF9                    	.code
                            	LM70:
00008CF9 40 92              		R1=0	// QImode move
00008CFA 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
00000A24                    	.debug
00000A24 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000A38 34 02 00 00        		.dd LM71-_R_display
00000A3A 0D 00 0A 00        		.dw 0x0d,0x0a
00008CFC                    	.code
                            	LM71:
00008CFC 40 92              		R1=0	// QImode move
00008CFD 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00000A3C                    	.debug
00000A3C 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000A50 37 02 00 00        		.dd LM72-_R_display
00000A52 0D 00 0A 00        		.dw 0x0d,0x0a
00008CFF                    	.code
                            	LM72:
00008CFF 44 92              		R1=4	// QImode move
00008D00 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000A54                    	.debug
00000A54 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000A68 3A 02 00 00        		.dd LM73-_R_display
00000A6A 0D 00 0A 00        		.dw 0x0d,0x0a
00008D02                    	.code
                            	LM73:
00008D02 41 92              		R1=1	// QImode move
00008D03 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
00000A6C                    	.debug
00000A6C 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000A80 3D 02 00 00        		.dd LM74-_R_display
00000A82 0D 00 0A 00        		.dw 0x0d,0x0a
00008D05                    	.code
                            	LM74:
00008D05 4F 92              		R1=15	// QImode move
00008D06 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
00000A84                    	.debug
00000A84 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000A98 40 02 00 00        		.dd LM75-_R_display
00000A9A 0D 00 0A 00        		.dw 0x0d,0x0a
00008D08                    	.code
                            	LM75:
00008D08 50 92              		R1=16	// QImode move
00008D09 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00000A9C                    	.debug
00000A9C 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000AB0 43 02 00 00        		.dd LM76-_R_display
00000AB2 0D 00 0A 00        		.dw 0x0d,0x0a
00008D0B                    	.code
                            	LM76:
00008D0B 43 92              		R1=3	// QImode move
00008D0C 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L11:
00000AB4                    	.debug
00000AB4 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000AC8 46 02 00 00        		.dd LM77-_R_display
00000ACA 0D 00 0A 00        		.dw 0x0d,0x0a
00008D0E                    	.code
                            	LM77:
00008D0E C5 96              		R3=[BP]	// QImode move
00008D0F D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008D10 CB 94              		R2=[R3--]
00008D11 0B 97 00 24        		R3=9216	// HFmode immediate to register move
00008D13 0C 99 74 49        		R4=18804
00008D15 90 D8              		push R3,R4 to [sp]	// pushhf
00008D16 90 D4              		push R1,R2 to [sp]	// pushhf
00008D17 40 F0 05 96        		call __cmpf2	// call with return value
00008D19 44 00              		SP=SP+4
00008D1A 41 42              		CMP R1,1	// QImode compare
00008D1B 02 BE              		JG L25	// QImode LE
00008D1C 0F 9F 30 8D        		PC=L12
                            	L25:
00000ACC                    	.debug
00000ACC 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000AE0 56 02 00 00        		.dd LM78-_R_display
00000AE2 0D 00 0A 00        		.dw 0x0d,0x0a
00008D1E                    	.code
                            	LM78:
00008D1E 40 92              		R1=0	// QImode move
00008D1F 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00000AE4                    	.debug
00000AE4 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000AF8 59 02 00 00        		.dd LM79-_R_display
00000AFA 0D 00 0A 00        		.dw 0x0d,0x0a
00008D21                    	.code
                            	LM79:
00008D21 40 92              		R1=0	// QImode move
00008D22 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
00000AFC                    	.debug
00000AFC 2E 00 73 00        		.dw '.stabn 0x44,0,119,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         39 00 2C 00
         00 00 00 00
00000B10 5C 02 00 00        		.dd LM80-_R_display
00000B12 0D 00 0A 00        		.dw 0x0d,0x0a
00008D24                    	.code
                            	LM80:
00008D24 40 92              		R1=0	// QImode move
00008D25 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00000B14                    	.debug
00000B14 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
00000B28 5F 02 00 00        		.dd LM81-_R_display
00000B2A 0D 00 0A 00        		.dw 0x0d,0x0a
00008D27                    	.code
                            	LM81:
00008D27 40 92              		R1=0	// QImode move
00008D28 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000B2C                    	.debug
00000B2C 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
00000B40 62 02 00 00        		.dd LM82-_R_display
00000B42 0D 00 0A 00        		.dw 0x0d,0x0a
00008D2A                    	.code
                            	LM82:
00008D2A 41 92              		R1=1	// QImode move
00008D2B 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00000B44                    	.debug
00000B44 2E 00 73 00        		.dw '.stabn 0x44,0,124,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         34 00 2C 00
         00 00 00 00
00000B58 65 02 00 00        		.dd LM83-_R_display
00000B5A 0D 00 0A 00        		.dw 0x0d,0x0a
00008D2D                    	.code
                            	LM83:
00008D2D 55 92              		R1=21	// QImode move
00008D2E 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
                            	L12:
00000B5C                    	.debug
00000B5C 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000B70 68 02 00 00        		.dd LM84-_R_display
00000B72 0D 00 0A 00        		.dw 0x0d,0x0a
00008D30                    	.code
                            	LM84:
00000B74                    	.debug
00000B74 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000B88 68 02 00 00        		.dd LM85-_R_display
00000B8A 0D 00 0A 00        		.dw 0x0d,0x0a
00008D30                    	.code
                            	LM85:
                            	L2:
                            	
00008D30 41 00              		sp+=1
00008D31 88 98              		pop bp from [sp]
00008D32 90 9A              		retf
                            		.endp	// end of R_display
                            	
00000B8C                    	.debug
00000B8C 2E 00 73 00        		.dw '.stabs "Rx:p12",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 78 00
         3A 00 70 00
         31 00 32 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
00008D33                    	.CODE
00000BA7                    	.debug
00000BA7 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000BB0 6B 02 00 00        		.dd LME1-_R_display
00000BB2 0D 00 0A 00        		.dw 0x0d,0x0a
00008D33                    	.code
                            	LME1:
00008D33                    	.code
00000BB4                    	.debug
00000BB4 2E 00 73 00        		.dw '.stabs "C_display:F19",36,0,0,',0,0,offset _C_display,seg _C_display,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 5F 00
         64 00 69 00
         73 00 70 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         6B 02 00 00
         0D 00 0A 00
00008D33                    	.CODE
                            	.public _C_display
                            	_C_display:	.proc
00000BD8                    	.debug
00000BD8 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000BEC 00 00 00 00        		.dd LM86-_C_display
00000BEE 0D 00 0A 00        		.dw 0x0d,0x0a
00008D33                    	.code
                            	LM86:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008D33 88 DA              		push bp to [sp]
00008D34 41 20              		sp-=1
00008D35 08 0B 01 00        		bp=sp+1
                            	
00008D37 0D 03 04 00        		R1=BP+4
00008D39 C5 D2              		[BP]=R1	// QImode move
00000BF0                    	.debug
00000BF0 2E 00 73 00        		.dw '.stabn 0x44,0,132,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         32 00 2C 00
         00 00 00 00
00000C04 07 00 00 00        		.dd LM87-_C_display
00000C06 0D 00 0A 00        		.dw 0x0d,0x0a
00008D3A                    	.code
                            	LM87:
00008D3A C5 96              		R3=[BP]	// QImode move
00008D3B D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008D3C CB 94              		R2=[R3--]
00008D3D 40 96              		R3=0	// HFmode immediate to register move
00008D3E 0C 99 C8 42        		R4=17096
00008D40 90 D8              		push R3,R4 to [sp]	// pushhf
00008D41 90 D4              		push R1,R2 to [sp]	// pushhf
00008D42 40 F0 05 96        		call __cmpf2	// call with return value
00008D44 44 00              		SP=SP+4
00008D45 41 42              		CMP R1,1	// QImode compare
00008D46 02 3E              		JL L35	// QImode GE
00008D47 0F 9F 5B 8D        		PC=L27
                            	L35:
00000C08                    	.debug
00000C08 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00000C1C 16 00 00 00        		.dd LM88-_C_display
00000C1E 0D 00 0A 00        		.dw 0x0d,0x0a
00008D49                    	.code
                            	LM88:
00008D49 45 92              		R1=5	// QImode move
00008D4A 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00000C20                    	.debug
00000C20 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000C34 19 00 00 00        		.dd LM89-_C_display
00000C36 0D 00 0A 00        		.dw 0x0d,0x0a
00008D4C                    	.code
                            	LM89:
00008D4C 45 92              		R1=5	// QImode move
00008D4D 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
00000C38                    	.debug
00000C38 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
00000C4C 1C 00 00 00        		.dd LM90-_C_display
00000C4E 0D 00 0A 00        		.dw 0x0d,0x0a
00008D4F                    	.code
                            	LM90:
00008D4F 45 92              		R1=5	// QImode move
00008D50 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00000C50                    	.debug
00000C50 2E 00 73 00        		.dw '.stabn 0x44,0,137,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         37 00 2C 00
         00 00 00 00
00000C64 1F 00 00 00        		.dd LM91-_C_display
00000C66 0D 00 0A 00        		.dw 0x0d,0x0a
00008D52                    	.code
                            	LM91:
00008D52 45 92              		R1=5	// QImode move
00008D53 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000C68                    	.debug
00000C68 2E 00 73 00        		.dw '.stabn 0x44,0,139,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         39 00 2C 00
         00 00 00 00
00000C7C 22 00 00 00        		.dd LM92-_C_display
00000C7E 0D 00 0A 00        		.dw 0x0d,0x0a
00008D55                    	.code
                            	LM92:
00008D55 41 92              		R1=1	// QImode move
00008D56 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00000C80                    	.debug
00000C80 2E 00 73 00        		.dw '.stabn 0x44,0,140,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         30 00 2C 00
         00 00 00 00
00000C94 25 00 00 00        		.dd LM93-_C_display
00000C96 0D 00 0A 00        		.dw 0x0d,0x0a
00008D58                    	.code
                            	LM93:
00008D58 56 92              		R1=22	// QImode move
00008D59 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
                            	L27:
00000C98                    	.debug
00000C98 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
00000CAC 28 00 00 00        		.dd LM94-_C_display
00000CAE 0D 00 0A 00        		.dw 0x0d,0x0a
00008D5B                    	.code
                            	LM94:
00008D5B C5 96              		R3=[BP]	// QImode move
00008D5C D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008D5D CB 94              		R2=[R3--]
00008D5E 40 96              		R3=0	// HFmode immediate to register move
00008D5F 0C 99 C8 42        		R4=17096
00008D61 90 D8              		push R3,R4 to [sp]	// pushhf
00008D62 90 D4              		push R1,R2 to [sp]	// pushhf
00008D63 40 F0 05 96        		call __cmpf2	// call with return value
00008D65 44 00              		SP=SP+4
00008D66 41 42              		CMP R1,1	// QImode compare
00008D67 02 2E              		JNL L36	// QImode LT
00008D68 0F 9F D3 8D        		PC=L28
                            	L36:
00008D6A C5 96              		R3=[BP]	// QImode move
00008D6B D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008D6C CB 94              		R2=[R3--]
00008D6D 0B 97 00 C0        		R3=49152	// HFmode immediate to register move
00008D6F 0C 99 79 44        		R4=17529
00008D71 90 D8              		push R3,R4 to [sp]	// pushhf
00008D72 90 D4              		push R1,R2 to [sp]	// pushhf
00008D73 40 F0 05 96        		call __cmpf2	// call with return value
00008D75 44 00              		SP=SP+4
00008D76 41 42              		CMP R1,1	// QImode compare
00008D77 02 AE              		JNG L37	// QImode GT
00008D78 0F 9F D3 8D        		PC=L28
                            	L37:
00000CB0                    	.debug
00000CB0 2E 00 73 00        		.dw '.stabn 0x44,0,144,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         34 00 2C 00
         00 00 00 00
00000CC4 47 00 00 00        		.dd LM95-_C_display
00000CC6 0D 00 0A 00        		.dw 0x0d,0x0a
00008D7A                    	.code
                            	LM95:
00008D7A C5 96              		R3=[BP]	// QImode move
00008D7B D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008D7C CB 94              		R2=[R3--]
00008D7D 90 D4              		push R1,R2 to [sp]	// pushhf
00008D7E 40 F0 33 96        		call __cvf2i1	// call with return value
00008D80 42 00              		SP=SP+2
00008D81 19 D3 E5 01        		[_g_uiAx]=R1	// QImode move
00000CC8                    	.debug
00000CC8 2E 00 73 00        		.dw '.stabn 0x44,0,145,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         35 00 2C 00
         00 00 00 00
00000CDC 50 00 00 00        		.dd LM96-_C_display
00000CDE 0D 00 0A 00        		.dw 0x0d,0x0a
00008D83                    	.code
                            	LM96:
00008D83 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008D85 0A 95 64 00        		R2=100	// QImode move
00008D87 C8 D4              		[SP--]=R2	// QImode move
00008D88 C8 D2              		[SP--]=R1	// QImode move
00008D89 40 F0 8C 95        		call __divu1	// call with return value
00008D8B 42 00              		SP=SP+2
00008D8C 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00000CE0                    	.debug
00000CE0 2E 00 73 00        		.dw '.stabn 0x44,0,146,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         36 00 2C 00
         00 00 00 00
00000CF4 5B 00 00 00        		.dd LM97-_C_display
00000CF6 0D 00 0A 00        		.dw 0x0d,0x0a
00008D8E                    	.code
                            	LM97:
00008D8E 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008D90 0A 95 64 00        		R2=100	// QImode move
00008D92 C8 D4              		[SP--]=R2	// QImode move
00008D93 C8 D2              		[SP--]=R1	// QImode move
00008D94 40 F0 BE 96        		call __modu1	// call with return value
00008D96 42 00              		SP=SP+2
00008D97 4A 94              		R2=10	// QImode move
00008D98 C8 D4              		[SP--]=R2	// QImode move
00008D99 C8 D2              		[SP--]=R1	// QImode move
00008D9A 40 F0 8C 95        		call __divu1	// call with return value
00008D9C 42 00              		SP=SP+2
00008D9D 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
00000CF8                    	.debug
00000CF8 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
00000D0C 6C 00 00 00        		.dd LM98-_C_display
00000D0E 0D 00 0A 00        		.dw 0x0d,0x0a
00008D9F                    	.code
                            	LM98:
00008D9F 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008DA1 0A 95 64 00        		R2=100	// QImode move
00008DA3 C8 D4              		[SP--]=R2	// QImode move
00008DA4 C8 D2              		[SP--]=R1	// QImode move
00008DA5 40 F0 BE 96        		call __modu1	// call with return value
00008DA7 42 00              		SP=SP+2
00008DA8 4A 94              		R2=10	// QImode move
00008DA9 C8 D4              		[SP--]=R2	// QImode move
00008DAA C8 D2              		[SP--]=R1	// QImode move
00008DAB 40 F0 BE 96        		call __modu1	// call with return value
00008DAD 42 00              		SP=SP+2
00008DAE 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00000D10                    	.debug
00000D10 2E 00 73 00        		.dw '.stabn 0x44,0,148,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         38 00 2C 00
         00 00 00 00
00000D24 7D 00 00 00        		.dd LM99-_C_display
00000D26 0D 00 0A 00        		.dw 0x0d,0x0a
00008DB0                    	.code
                            	LM99:
00008DB0 40 92              		R1=0	// QImode move
00008DB1 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000D28                    	.debug
00000D28 2E 00 73 00        		.dw '.stabn 0x44,0,151,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         31 00 2C 00
         00 00 00 00
00000D3C 80 00 00 00        		.dd LM100-_C_display
00000D3E 0D 00 0A 00        		.dw 0x0d,0x0a
00008DB3                    	.code
                            	LM100:
00008DB3 11 93 FF 01        		R1=[_g_array+3]	// QImode move
00008DB5 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
00000D40                    	.debug
00000D40 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
00000D54 84 00 00 00        		.dd LM101-_C_display
00000D56 0D 00 0A 00        		.dw 0x0d,0x0a
00008DB7                    	.code
                            	LM101:
00008DB7 4C 92              		R1=12	// QImode move
00008DB8 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
00000D58                    	.debug
00000D58 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
00000D6C 87 00 00 00        		.dd LM102-_C_display
00000D6E 0D 00 0A 00        		.dw 0x0d,0x0a
00008DBA                    	.code
                            	LM102:
00008DBA 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008DBC 40 42              		CMP R1,0	// QImode test
00008DBD 02 5E              		JZ L38	// QImode NE
00008DBE 0F 9F C6 8D        		PC=L29
                            	L38:
00000D70                    	.debug
00000D70 2E 00 73 00        		.dw '.stabn 0x44,0,154,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         34 00 2C 00
         00 00 00 00
00000D84 8D 00 00 00        		.dd LM103-_C_display
00000D86 0D 00 0A 00        		.dw 0x0d,0x0a
00008DC0                    	.code
                            	LM103:
00008DC0 43 92              		R1=3	// QImode move
00008DC1 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00000D88                    	.debug
00000D88 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
00000D9C 90 00 00 00        		.dd LM104-_C_display
00000D9E 0D 00 0A 00        		.dw 0x0d,0x0a
00008DC3                    	.code
                            	LM104:
00008DC3 51 92              		R1=17	// QImode move
00008DC4 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
                            	L29:
00000DA0                    	.debug
00000DA0 2E 00 73 00        		.dw '.stabn 0x44,0,157,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         37 00 2C 00
         00 00 00 00
00000DB4 93 00 00 00        		.dd LM105-_C_display
00000DB6 0D 00 0A 00        		.dw 0x0d,0x0a
00008DC6                    	.code
                            	LM105:
00008DC6 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008DC8 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00000DB8                    	.debug
00000DB8 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
00000DCC 97 00 00 00        		.dd LM106-_C_display
00000DCE 0D 00 0A 00        		.dw 0x0d,0x0a
00008DCA                    	.code
                            	LM106:
00008DCA 4B 92              		R1=11	// QImode move
00008DCB 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
00000DD0                    	.debug
00000DD0 2E 00 73 00        		.dw '.stabn 0x44,0,159,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         39 00 2C 00
         00 00 00 00
00000DE4 9A 00 00 00        		.dd LM107-_C_display
00000DE6 0D 00 0A 00        		.dw 0x0d,0x0a
00008DCD                    	.code
                            	LM107:
00008DCD 51 92              		R1=17	// QImode move
00008DCE 19 D3 FA 01        		[_g_Speechary+4]=R1	// QImode move
00000DE8                    	.debug
00000DE8 2E 00 73 00        		.dw '.stabn 0x44,0,160,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         30 00 2C 00
         00 00 00 00
00000DFC 9D 00 00 00        		.dd LM108-_C_display
00000DFE 0D 00 0A 00        		.dw 0x0d,0x0a
00008DD0                    	.code
                            	LM108:
00008DD0 45 92              		R1=5	// QImode move
00008DD1 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L28:
00000E00                    	.debug
00000E00 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
00000E14 A0 00 00 00        		.dd LM109-_C_display
00000E16 0D 00 0A 00        		.dw 0x0d,0x0a
00008DD3                    	.code
                            	LM109:
00008DD3 C5 96              		R3=[BP]	// QImode move
00008DD4 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008DD5 CB 94              		R2=[R3--]
00008DD6 40 96              		R3=0	// HFmode immediate to register move
00008DD7 0C 99 7A 44        		R4=17530
00008DD9 90 D8              		push R3,R4 to [sp]	// pushhf
00008DDA 90 D4              		push R1,R2 to [sp]	// pushhf
00008DDB 40 F0 05 96        		call __cmpf2	// call with return value
00008DDD 44 00              		SP=SP+4
00008DDE 41 42              		CMP R1,1	// QImode compare
00008DDF 02 2E              		JNL L39	// QImode LT
00008DE0 0F 9F 55 8E        		PC=L30
                            	L39:
00008DE2 C5 96              		R3=[BP]	// QImode move
00008DE3 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008DE4 CB 94              		R2=[R3--]
00008DE5 0B 97 00 3C        		R3=15360	// HFmode immediate to register move
00008DE7 0C 99 1C 46        		R4=17948
00008DE9 90 D8              		push R3,R4 to [sp]	// pushhf
00008DEA 90 D4              		push R1,R2 to [sp]	// pushhf
00008DEB 40 F0 05 96        		call __cmpf2	// call with return value
00008DED 44 00              		SP=SP+4
00008DEE 41 42              		CMP R1,1	// QImode compare
00008DEF 02 AE              		JNG L40	// QImode GT
00008DF0 0F 9F 55 8E        		PC=L30
                            	L40:
00000E18                    	.debug
00000E18 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
00000E2C BF 00 00 00        		.dd LM110-_C_display
00000E2E 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF2                    	.code
                            	LM110:
00008DF2 C5 96              		R3=[BP]	// QImode move
00008DF3 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008DF4 CB 94              		R2=[R3--]
00008DF5 90 D4              		push R1,R2 to [sp]	// pushhf
00008DF6 40 F0 33 96        		call __cvf2i1	// call with return value
00008DF8 42 00              		SP=SP+2
00008DF9 19 D3 E5 01        		[_g_uiAx]=R1	// QImode move
00000E30                    	.debug
00000E30 2E 00 73 00        		.dw '.stabn 0x44,0,166,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         36 00 2C 00
         00 00 00 00
00000E44 C8 00 00 00        		.dd LM111-_C_display
00000E46 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFB                    	.code
                            	LM111:
00008DFB 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008DFD 0A 95 E8 03        		R2=1000	// QImode move
00008DFF C8 D4              		[SP--]=R2	// QImode move
00008E00 C8 D2              		[SP--]=R1	// QImode move
00008E01 40 F0 8C 95        		call __divu1	// call with return value
00008E03 42 00              		SP=SP+2
00008E04 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00000E48                    	.debug
00000E48 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
00000E5C D3 00 00 00        		.dd LM112-_C_display
00000E5E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E06                    	.code
                            	LM112:
00008E06 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008E08 0A 95 E8 03        		R2=1000	// QImode move
00008E0A C8 D4              		[SP--]=R2	// QImode move
00008E0B C8 D2              		[SP--]=R1	// QImode move
00008E0C 40 F0 BE 96        		call __modu1	// call with return value
00008E0E 42 00              		SP=SP+2
00008E0F 0A 95 64 00        		R2=100	// QImode move
00008E11 C8 D4              		[SP--]=R2	// QImode move
00008E12 C8 D2              		[SP--]=R1	// QImode move
00008E13 40 F0 8C 95        		call __divu1	// call with return value
00008E15 42 00              		SP=SP+2
00008E16 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
00000E60                    	.debug
00000E60 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
00000E74 E5 00 00 00        		.dd LM113-_C_display
00000E76 0D 00 0A 00        		.dw 0x0d,0x0a
00008E18                    	.code
                            	LM113:
00008E18 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008E1A 0A 95 E8 03        		R2=1000	// QImode move
00008E1C C8 D4              		[SP--]=R2	// QImode move
00008E1D C8 D2              		[SP--]=R1	// QImode move
00008E1E 40 F0 BE 96        		call __modu1	// call with return value
00008E20 42 00              		SP=SP+2
00008E21 0A 95 64 00        		R2=100	// QImode move
00008E23 C8 D4              		[SP--]=R2	// QImode move
00008E24 C8 D2              		[SP--]=R1	// QImode move
00008E25 40 F0 BE 96        		call __modu1	// call with return value
00008E27 42 00              		SP=SP+2
00008E28 4A 94              		R2=10	// QImode move
00008E29 C8 D4              		[SP--]=R2	// QImode move
00008E2A C8 D2              		[SP--]=R1	// QImode move
00008E2B 40 F0 8C 95        		call __divu1	// call with return value
00008E2D 42 00              		SP=SP+2
00008E2E 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00000E78                    	.debug
00000E78 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
00000E8C FD 00 00 00        		.dd LM114-_C_display
00000E8E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E30                    	.code
                            	LM114:
00008E30 41 92              		R1=1	// QImode move
00008E31 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000E90                    	.debug
00000E90 2E 00 73 00        		.dw '.stabn 0x44,0,172,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         32 00 2C 00
         00 00 00 00
00000EA4 00 01 00 00        		.dd LM115-_C_display
00000EA6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E33                    	.code
                            	LM115:
00008E33 11 93 FF 01        		R1=[_g_array+3]	// QImode move
00008E35 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
00000EA8                    	.debug
00000EA8 2E 00 73 00        		.dw '.stabn 0x44,0,173,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         33 00 2C 00
         00 00 00 00
00000EBC 04 01 00 00        		.dd LM116-_C_display
00000EBE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E37                    	.code
                            	LM116:
00008E37 5B 92              		R1=27	// QImode move
00008E38 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
00000EC0                    	.debug
00000EC0 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
00000ED4 07 01 00 00        		.dd LM117-_C_display
00000ED6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E3A                    	.code
                            	LM117:
00008E3A 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008E3C 40 42              		CMP R1,0	// QImode test
00008E3D 02 5E              		JZ L41	// QImode NE
00008E3E 0F 9F 48 8E        		PC=L31
                            	L41:
00000ED8                    	.debug
00000ED8 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
00000EEC 0D 01 00 00        		.dd LM118-_C_display
00000EEE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E40                    	.code
                            	LM118:
00008E40 43 92              		R1=3	// QImode move
00008E41 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00000EF0                    	.debug
00000EF0 2E 00 73 00        		.dw '.stabn 0x44,0,176,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         36 00 2C 00
         00 00 00 00
00000F04 10 01 00 00        		.dd LM119-_C_display
00000F06 0D 00 0A 00        		.dw 0x0d,0x0a
00008E43                    	.code
                            	LM119:
00008E43 51 92              		R1=17	// QImode move
00008E44 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00000F08                    	.debug
00000F08 2E 00 73 00        		.dw '.stabn 0x44,0,177,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         37 00 2C 00
         00 00 00 00
00000F1C 13 01 00 00        		.dd LM120-_C_display
00000F1E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E46                    	.code
                            	LM120:
00008E46 0F 9F 55 8E        		pc=L30	// jump
                            	L31:
00000F20                    	.debug
00000F20 2E 00 73 00        		.dw '.stabn 0x44,0,180,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         30 00 2C 00
         00 00 00 00
00000F34 15 01 00 00        		.dd LM121-_C_display
00000F36 0D 00 0A 00        		.dw 0x0d,0x0a
00008E48                    	.code
                            	LM121:
00008E48 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008E4A 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00000F38                    	.debug
00000F38 2E 00 73 00        		.dw '.stabn 0x44,0,181,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         31 00 2C 00
         00 00 00 00
00000F4C 19 01 00 00        		.dd LM122-_C_display
00000F4E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E4C                    	.code
                            	LM122:
00008E4C 4C 92              		R1=12	// QImode move
00008E4D 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
00000F50                    	.debug
00000F50 2E 00 73 00        		.dw '.stabn 0x44,0,182,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         32 00 2C 00
         00 00 00 00
00000F64 1C 01 00 00        		.dd LM123-_C_display
00000F66 0D 00 0A 00        		.dw 0x0d,0x0a
00008E4F                    	.code
                            	LM123:
00008E4F 51 92              		R1=17	// QImode move
00008E50 19 D3 FA 01        		[_g_Speechary+4]=R1	// QImode move
00000F68                    	.debug
00000F68 2E 00 73 00        		.dw '.stabn 0x44,0,183,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         33 00 2C 00
         00 00 00 00
00000F7C 1F 01 00 00        		.dd LM124-_C_display
00000F7E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E52                    	.code
                            	LM124:
00008E52 45 92              		R1=5	// QImode move
00008E53 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L32:
                            	L30:
00000F80                    	.debug
00000F80 2E 00 73 00        		.dw '.stabn 0x44,0,187,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         37 00 2C 00
         00 00 00 00
00000F94 22 01 00 00        		.dd LM125-_C_display
00000F96 0D 00 0A 00        		.dw 0x0d,0x0a
00008E55                    	.code
                            	LM125:
00008E55 C5 96              		R3=[BP]	// QImode move
00008E56 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008E57 CB 94              		R2=[R3--]
00008E58 0B 97 00 40        		R3=16384	// HFmode immediate to register move
00008E5A 0C 99 1C 46        		R4=17948
00008E5C 90 D8              		push R3,R4 to [sp]	// pushhf
00008E5D 90 D4              		push R1,R2 to [sp]	// pushhf
00008E5E 40 F0 05 96        		call __cmpf2	// call with return value
00008E60 44 00              		SP=SP+4
00008E61 41 42              		CMP R1,1	// QImode compare
00008E62 02 5E              		JZ L42	// QImode NE
00008E63 0F 9F 7D 8E        		PC=L33
                            	L42:
00000F98                    	.debug
00000F98 2E 00 73 00        		.dw '.stabn 0x44,0,189,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         39 00 2C 00
         00 00 00 00
00000FAC 32 01 00 00        		.dd LM126-_C_display
00000FAE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E65                    	.code
                            	LM126:
00008E65 41 92              		R1=1	// QImode move
00008E66 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00000FB0                    	.debug
00000FB0 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
00000FC4 35 01 00 00        		.dd LM127-_C_display
00000FC6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E68                    	.code
                            	LM127:
00008E68 40 92              		R1=0	// QImode move
00008E69 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
00000FC8                    	.debug
00000FC8 2E 00 73 00        		.dw '.stabn 0x44,0,191,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         31 00 2C 00
         00 00 00 00
00000FDC 38 01 00 00        		.dd LM128-_C_display
00000FDE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E6B                    	.code
                            	LM128:
00008E6B 40 92              		R1=0	// QImode move
00008E6C 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00000FE0                    	.debug
00000FE0 2E 00 73 00        		.dw '.stabn 0x44,0,192,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         32 00 2C 00
         00 00 00 00
00000FF4 3B 01 00 00        		.dd LM129-_C_display
00000FF6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E6E                    	.code
                            	LM129:
00008E6E 42 92              		R1=2	// QImode move
00008E6F 19 D3 FC 01        		[_g_array]=R1	// QImode move
00000FF8                    	.debug
00000FF8 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
0000100C 3E 01 00 00        		.dd LM130-_C_display
0000100E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E71                    	.code
                            	LM130:
00008E71 41 92              		R1=1	// QImode move
00008E72 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
00001010                    	.debug
00001010 2E 00 73 00        		.dw '.stabn 0x44,0,195,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         35 00 2C 00
         00 00 00 00
00001024 41 01 00 00        		.dd LM131-_C_display
00001026 0D 00 0A 00        		.dw 0x0d,0x0a
00008E74                    	.code
                            	LM131:
00008E74 4E 92              		R1=14	// QImode move
00008E75 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
00001028                    	.debug
00001028 2E 00 73 00        		.dw '.stabn 0x44,0,196,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         36 00 2C 00
         00 00 00 00
0000103C 44 01 00 00        		.dd LM132-_C_display
0000103E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E77                    	.code
                            	LM132:
00008E77 50 92              		R1=16	// QImode move
00008E78 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00001040                    	.debug
00001040 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
00001054 47 01 00 00        		.dd LM133-_C_display
00001056 0D 00 0A 00        		.dw 0x0d,0x0a
00008E7A                    	.code
                            	LM133:
00008E7A 43 92              		R1=3	// QImode move
00008E7B 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L33:
00001058                    	.debug
00001058 2E 00 73 00        		.dw '.stabn 0x44,0,199,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         39 00 2C 00
         00 00 00 00
0000106C 4A 01 00 00        		.dd LM134-_C_display
0000106E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E7D                    	.code
                            	LM134:
00008E7D C5 96              		R3=[BP]	// QImode move
00008E7E D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008E7F CB 94              		R2=[R3--]
00008E80 0B 97 00 40        		R3=16384	// HFmode immediate to register move
00008E82 0C 99 1C 46        		R4=17948
00008E84 90 D8              		push R3,R4 to [sp]	// pushhf
00008E85 90 D4              		push R1,R2 to [sp]	// pushhf
00008E86 40 F0 05 96        		call __cmpf2	// call with return value
00008E88 44 00              		SP=SP+4
00008E89 41 42              		CMP R1,1	// QImode compare
00008E8A 02 BE              		JG L43	// QImode LE
00008E8B 0F 9F 9F 8E        		PC=L34
                            	L43:
00001070                    	.debug
00001070 2E 00 73 00        		.dw '.stabn 0x44,0,202,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         32 00 2C 00
         00 00 00 00
00001084 5A 01 00 00        		.dd LM135-_C_display
00001086 0D 00 0A 00        		.dw 0x0d,0x0a
00008E8D                    	.code
                            	LM135:
00008E8D 40 92              		R1=0	// QImode move
00008E8E 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00001088                    	.debug
00001088 2E 00 73 00        		.dw '.stabn 0x44,0,203,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         33 00 2C 00
         00 00 00 00
0000109C 5D 01 00 00        		.dd LM136-_C_display
0000109E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E90                    	.code
                            	LM136:
00008E90 40 92              		R1=0	// QImode move
00008E91 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
000010A0                    	.debug
000010A0 2E 00 73 00        		.dw '.stabn 0x44,0,204,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         34 00 2C 00
         00 00 00 00
000010B4 60 01 00 00        		.dd LM137-_C_display
000010B6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E93                    	.code
                            	LM137:
00008E93 40 92              		R1=0	// QImode move
00008E94 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
000010B8                    	.debug
000010B8 2E 00 73 00        		.dw '.stabn 0x44,0,205,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         35 00 2C 00
         00 00 00 00
000010CC 63 01 00 00        		.dd LM138-_C_display
000010CE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E96                    	.code
                            	LM138:
00008E96 40 92              		R1=0	// QImode move
00008E97 19 D3 FC 01        		[_g_array]=R1	// QImode move
000010D0                    	.debug
000010D0 2E 00 73 00        		.dw '.stabn 0x44,0,208,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         38 00 2C 00
         00 00 00 00
000010E4 66 01 00 00        		.dd LM139-_C_display
000010E6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E99                    	.code
                            	LM139:
00008E99 41 92              		R1=1	// QImode move
00008E9A 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
000010E8                    	.debug
000010E8 2E 00 73 00        		.dw '.stabn 0x44,0,209,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         39 00 2C 00
         00 00 00 00
000010FC 69 01 00 00        		.dd LM140-_C_display
000010FE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E9C                    	.code
                            	LM140:
00008E9C 57 92              		R1=23	// QImode move
00008E9D 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
                            	L34:
00001100                    	.debug
00001100 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
00001114 6C 01 00 00        		.dd LM141-_C_display
00001116 0D 00 0A 00        		.dw 0x0d,0x0a
00008E9F                    	.code
                            	LM141:
00001118                    	.debug
00001118 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
0000112C 6C 01 00 00        		.dd LM142-_C_display
0000112E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E9F                    	.code
                            	LM142:
                            	L26:
                            	
00008E9F 41 00              		sp+=1
00008EA0 88 98              		pop bp from [sp]
00008EA1 90 9A              		retf
                            		.endp	// end of C_display
                            	
00001130                    	.debug
00001130 2E 00 73 00        		.dw '.stabs "Cx:p12",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 78 00
         3A 00 70 00
         31 00 32 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
00008EA2                    	.CODE
0000114B                    	.debug
0000114B 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001154 6F 01 00 00        		.dd LME2-_C_display
00001156 0D 00 0A 00        		.dw 0x0d,0x0a
00008EA2                    	.code
                            	LME2:
00008EA2                    	.code
00001158                    	.debug
00001158 2E 00 73 00        		.dw '.stabs "L_display:F19",36,0,0,',0,0,offset _L_display,seg _L_display,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4C 00 5F 00
         64 00 69 00
         73 00 70 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         DA 03 00 00
         0D 00 0A 00
00008EA2                    	.CODE
                            	.public _L_display
                            	_L_display:	.proc
0000117C                    	.debug
0000117C 2E 00 73 00        		.dw '.stabn 0x44,0,215,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         35 00 2C 00
         00 00 00 00
00001190 00 00 00 00        		.dd LM143-_L_display
00001192 0D 00 0A 00        		.dw 0x0d,0x0a
00008EA2                    	.code
                            	LM143:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008EA2 88 DA              		push bp to [sp]
00008EA3 41 20              		sp-=1
00008EA4 08 0B 01 00        		bp=sp+1
                            	
00008EA6 0D 03 04 00        		R1=BP+4
00008EA8 C5 D2              		[BP]=R1	// QImode move
00001194                    	.debug
00001194 2E 00 73 00        		.dw '.stabn 0x44,0,216,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         36 00 2C 00
         00 00 00 00
000011A8 07 00 00 00        		.dd LM144-_L_display
000011AA 0D 00 0A 00        		.dw 0x0d,0x0a
00008EA9                    	.code
                            	LM144:
00008EA9 C5 96              		R3=[BP]	// QImode move
00008EAA D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008EAB CB 94              		R2=[R3--]
00008EAC 40 96              		R3=0	// HFmode immediate to register move
00008EAD 0C 99 C8 42        		R4=17096
00008EAF 90 D8              		push R3,R4 to [sp]	// pushhf
00008EB0 90 D4              		push R1,R2 to [sp]	// pushhf
00008EB1 40 F0 05 96        		call __cmpf2	// call with return value
00008EB3 44 00              		SP=SP+4
00008EB4 41 42              		CMP R1,1	// QImode compare
00008EB5 02 3E              		JL L52	// QImode GE
00008EB6 0F 9F CA 8E        		PC=L45
                            	L52:
000011AC                    	.debug
000011AC 2E 00 73 00        		.dw '.stabn 0x44,0,218,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         38 00 2C 00
         00 00 00 00
000011C0 16 00 00 00        		.dd LM145-_L_display
000011C2 0D 00 0A 00        		.dw 0x0d,0x0a
00008EB8                    	.code
                            	LM145:
00008EB8 45 92              		R1=5	// QImode move
00008EB9 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
000011C4                    	.debug
000011C4 2E 00 73 00        		.dw '.stabn 0x44,0,219,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         39 00 2C 00
         00 00 00 00
000011D8 19 00 00 00        		.dd LM146-_L_display
000011DA 0D 00 0A 00        		.dw 0x0d,0x0a
00008EBB                    	.code
                            	LM146:
00008EBB 45 92              		R1=5	// QImode move
00008EBC 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
000011DC                    	.debug
000011DC 2E 00 73 00        		.dw '.stabn 0x44,0,220,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         30 00 2C 00
         00 00 00 00
000011F0 1C 00 00 00        		.dd LM147-_L_display
000011F2 0D 00 0A 00        		.dw 0x0d,0x0a
00008EBE                    	.code
                            	LM147:
00008EBE 45 92              		R1=5	// QImode move
00008EBF 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
000011F4                    	.debug
000011F4 2E 00 73 00        		.dw '.stabn 0x44,0,221,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         31 00 2C 00
         00 00 00 00
00001208 1F 00 00 00        		.dd LM148-_L_display
0000120A 0D 00 0A 00        		.dw 0x0d,0x0a
00008EC1                    	.code
                            	LM148:
00008EC1 45 92              		R1=5	// QImode move
00008EC2 19 D3 FC 01        		[_g_array]=R1	// QImode move
0000120C                    	.debug
0000120C 2E 00 73 00        		.dw '.stabn 0x44,0,224,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         34 00 2C 00
         00 00 00 00
00001220 22 00 00 00        		.dd LM149-_L_display
00001222 0D 00 0A 00        		.dw 0x0d,0x0a
00008EC4                    	.code
                            	LM149:
00008EC4 41 92              		R1=1	// QImode move
00008EC5 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00001224                    	.debug
00001224 2E 00 73 00        		.dw '.stabn 0x44,0,225,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         35 00 2C 00
         00 00 00 00
00001238 25 00 00 00        		.dd LM150-_L_display
0000123A 0D 00 0A 00        		.dw 0x0d,0x0a
00008EC7                    	.code
                            	LM150:
00008EC7 58 92              		R1=24	// QImode move
00008EC8 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
                            	L45:
0000123C                    	.debug
0000123C 2E 00 73 00        		.dw '.stabn 0x44,0,227,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         37 00 2C 00
         00 00 00 00
00001250 28 00 00 00        		.dd LM151-_L_display
00001252 0D 00 0A 00        		.dw 0x0d,0x0a
00008ECA                    	.code
                            	LM151:
00008ECA C5 96              		R3=[BP]	// QImode move
00008ECB D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008ECC CB 94              		R2=[R3--]
00008ECD 40 96              		R3=0	// HFmode immediate to register move
00008ECE 0C 99 C8 42        		R4=17096
00008ED0 90 D8              		push R3,R4 to [sp]	// pushhf
00008ED1 90 D4              		push R1,R2 to [sp]	// pushhf
00008ED2 40 F0 05 96        		call __cmpf2	// call with return value
00008ED4 44 00              		SP=SP+4
00008ED5 41 42              		CMP R1,1	// QImode compare
00008ED6 02 2E              		JNL L53	// QImode LT
00008ED7 0F 9F 44 8F        		PC=L46
                            	L53:
00008ED9 C5 96              		R3=[BP]	// QImode move
00008EDA D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008EDB CB 94              		R2=[R3--]
00008EDC 0B 97 00 C0        		R3=49152	// HFmode immediate to register move
00008EDE 0C 99 79 44        		R4=17529
00008EE0 90 D8              		push R3,R4 to [sp]	// pushhf
00008EE1 90 D4              		push R1,R2 to [sp]	// pushhf
00008EE2 40 F0 05 96        		call __cmpf2	// call with return value
00008EE4 44 00              		SP=SP+4
00008EE5 41 42              		CMP R1,1	// QImode compare
00008EE6 02 AE              		JNG L54	// QImode GT
00008EE7 0F 9F 44 8F        		PC=L46
                            	L54:
00001254                    	.debug
00001254 2E 00 73 00        		.dw '.stabn 0x44,0,229,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         39 00 2C 00
         00 00 00 00
00001268 47 00 00 00        		.dd LM152-_L_display
0000126A 0D 00 0A 00        		.dw 0x0d,0x0a
00008EE9                    	.code
                            	LM152:
00008EE9 C5 96              		R3=[BP]	// QImode move
00008EEA D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008EEB CB 94              		R2=[R3--]
00008EEC 90 D4              		push R1,R2 to [sp]	// pushhf
00008EED 40 F0 33 96        		call __cvf2i1	// call with return value
00008EEF 42 00              		SP=SP+2
00008EF0 19 D3 E5 01        		[_g_uiAx]=R1	// QImode move
0000126C                    	.debug
0000126C 2E 00 73 00        		.dw '.stabn 0x44,0,230,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         30 00 2C 00
         00 00 00 00
00001280 50 00 00 00        		.dd LM153-_L_display
00001282 0D 00 0A 00        		.dw 0x0d,0x0a
00008EF2                    	.code
                            	LM153:
00008EF2 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008EF4 0A 95 64 00        		R2=100	// QImode move
00008EF6 C8 D4              		[SP--]=R2	// QImode move
00008EF7 C8 D2              		[SP--]=R1	// QImode move
00008EF8 40 F0 8C 95        		call __divu1	// call with return value
00008EFA 42 00              		SP=SP+2
00008EFB 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00001284                    	.debug
00001284 2E 00 73 00        		.dw '.stabn 0x44,0,231,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         31 00 2C 00
         00 00 00 00
00001298 5B 00 00 00        		.dd LM154-_L_display
0000129A 0D 00 0A 00        		.dw 0x0d,0x0a
00008EFD                    	.code
                            	LM154:
00008EFD 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008EFF 0A 95 64 00        		R2=100	// QImode move
00008F01 C8 D4              		[SP--]=R2	// QImode move
00008F02 C8 D2              		[SP--]=R1	// QImode move
00008F03 40 F0 BE 96        		call __modu1	// call with return value
00008F05 42 00              		SP=SP+2
00008F06 4A 94              		R2=10	// QImode move
00008F07 C8 D4              		[SP--]=R2	// QImode move
00008F08 C8 D2              		[SP--]=R1	// QImode move
00008F09 40 F0 8C 95        		call __divu1	// call with return value
00008F0B 42 00              		SP=SP+2
00008F0C 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
0000129C                    	.debug
0000129C 2E 00 73 00        		.dw '.stabn 0x44,0,232,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         32 00 2C 00
         00 00 00 00
000012B0 6C 00 00 00        		.dd LM155-_L_display
000012B2 0D 00 0A 00        		.dw 0x0d,0x0a
00008F0E                    	.code
                            	LM155:
00008F0E 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008F10 0A 95 64 00        		R2=100	// QImode move
00008F12 C8 D4              		[SP--]=R2	// QImode move
00008F13 C8 D2              		[SP--]=R1	// QImode move
00008F14 40 F0 BE 96        		call __modu1	// call with return value
00008F16 42 00              		SP=SP+2
00008F17 4A 94              		R2=10	// QImode move
00008F18 C8 D4              		[SP--]=R2	// QImode move
00008F19 C8 D2              		[SP--]=R1	// QImode move
00008F1A 40 F0 BE 96        		call __modu1	// call with return value
00008F1C 42 00              		SP=SP+2
00008F1D 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
000012B4                    	.debug
000012B4 2E 00 73 00        		.dw '.stabn 0x44,0,233,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         33 00 2C 00
         00 00 00 00
000012C8 7D 00 00 00        		.dd LM156-_L_display
000012CA 0D 00 0A 00        		.dw 0x0d,0x0a
00008F1F                    	.code
                            	LM156:
00008F1F 40 92              		R1=0	// QImode move
00008F20 19 D3 FC 01        		[_g_array]=R1	// QImode move
000012CC                    	.debug
000012CC 2E 00 73 00        		.dw '.stabn 0x44,0,236,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         36 00 2C 00
         00 00 00 00
000012E0 80 00 00 00        		.dd LM157-_L_display
000012E2 0D 00 0A 00        		.dw 0x0d,0x0a
00008F22                    	.code
                            	LM157:
00008F22 11 93 FF 01        		R1=[_g_array+3]	// QImode move
00008F24 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
000012E4                    	.debug
000012E4 2E 00 73 00        		.dw '.stabn 0x44,0,237,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         37 00 2C 00
         00 00 00 00
000012F8 84 00 00 00        		.dd LM158-_L_display
000012FA 0D 00 0A 00        		.dw 0x0d,0x0a
00008F26                    	.code
                            	LM158:
00008F26 4C 92              		R1=12	// QImode move
00008F27 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
000012FC                    	.debug
000012FC 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
00001310 87 00 00 00        		.dd LM159-_L_display
00001312 0D 00 0A 00        		.dw 0x0d,0x0a
00008F29                    	.code
                            	LM159:
00008F29 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008F2B 40 42              		CMP R1,0	// QImode test
00008F2C 02 5E              		JZ L55	// QImode NE
00008F2D 0F 9F 37 8F        		PC=L47
                            	L55:
00001314                    	.debug
00001314 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
00001328 8D 00 00 00        		.dd LM160-_L_display
0000132A 0D 00 0A 00        		.dw 0x0d,0x0a
00008F2F                    	.code
                            	LM160:
00008F2F 43 92              		R1=3	// QImode move
00008F30 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
0000132C                    	.debug
0000132C 2E 00 73 00        		.dw '.stabn 0x44,0,240,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         30 00 2C 00
         00 00 00 00
00001340 90 00 00 00        		.dd LM161-_L_display
00001342 0D 00 0A 00        		.dw 0x0d,0x0a
00008F32                    	.code
                            	LM161:
00008F32 52 92              		R1=18	// QImode move
00008F33 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00001344                    	.debug
00001344 2E 00 73 00        		.dw '.stabn 0x44,0,241,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         31 00 2C 00
         00 00 00 00
00001358 93 00 00 00        		.dd LM162-_L_display
0000135A 0D 00 0A 00        		.dw 0x0d,0x0a
00008F35                    	.code
                            	LM162:
00008F35 0F 9F 44 8F        		pc=L46	// jump
                            	L47:
0000135C                    	.debug
0000135C 2E 00 73 00        		.dw '.stabn 0x44,0,244,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         34 00 2C 00
         00 00 00 00
00001370 95 00 00 00        		.dd LM163-_L_display
00001372 0D 00 0A 00        		.dw 0x0d,0x0a
00008F37                    	.code
                            	LM163:
00008F37 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008F39 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00001374                    	.debug
00001374 2E 00 73 00        		.dw '.stabn 0x44,0,245,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         35 00 2C 00
         00 00 00 00
00001388 99 00 00 00        		.dd LM164-_L_display
0000138A 0D 00 0A 00        		.dw 0x0d,0x0a
00008F3B                    	.code
                            	LM164:
00008F3B 4B 92              		R1=11	// QImode move
00008F3C 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
0000138C                    	.debug
0000138C 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
000013A0 9C 00 00 00        		.dd LM165-_L_display
000013A2 0D 00 0A 00        		.dw 0x0d,0x0a
00008F3E                    	.code
                            	LM165:
00008F3E 52 92              		R1=18	// QImode move
00008F3F 19 D3 FA 01        		[_g_Speechary+4]=R1	// QImode move
000013A4                    	.debug
000013A4 2E 00 73 00        		.dw '.stabn 0x44,0,247,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         37 00 2C 00
         00 00 00 00
000013B8 9F 00 00 00        		.dd LM166-_L_display
000013BA 0D 00 0A 00        		.dw 0x0d,0x0a
00008F41                    	.code
                            	LM166:
00008F41 45 92              		R1=5	// QImode move
00008F42 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L48:
                            	L46:
000013BC                    	.debug
000013BC 2E 00 73 00        		.dw '.stabn 0x44,0,250,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         30 00 2C 00
         00 00 00 00
000013D0 A2 00 00 00        		.dd LM167-_L_display
000013D2 0D 00 0A 00        		.dw 0x0d,0x0a
00008F44                    	.code
                            	LM167:
00008F44 C5 96              		R3=[BP]	// QImode move
00008F45 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008F46 CB 94              		R2=[R3--]
00008F47 40 96              		R3=0	// HFmode immediate to register move
00008F48 0C 99 7A 44        		R4=17530
00008F4A 90 D8              		push R3,R4 to [sp]	// pushhf
00008F4B 90 D4              		push R1,R2 to [sp]	// pushhf
00008F4C 40 F0 05 96        		call __cmpf2	// call with return value
00008F4E 44 00              		SP=SP+4
00008F4F 41 42              		CMP R1,1	// QImode compare
00008F50 02 2E              		JNL L56	// QImode LT
00008F51 0F 9F B5 8F        		PC=L49
                            	L56:
00008F53 C5 96              		R3=[BP]	// QImode move
00008F54 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008F55 CB 94              		R2=[R3--]
00008F56 0B 97 00 3C        		R3=15360	// HFmode immediate to register move
00008F58 0C 99 1C 46        		R4=17948
00008F5A 90 D8              		push R3,R4 to [sp]	// pushhf
00008F5B 90 D4              		push R1,R2 to [sp]	// pushhf
00008F5C 40 F0 05 96        		call __cmpf2	// call with return value
00008F5E 44 00              		SP=SP+4
00008F5F 41 42              		CMP R1,1	// QImode compare
00008F60 02 AE              		JNG L57	// QImode GT
00008F61 0F 9F B5 8F        		PC=L49
                            	L57:
000013D4                    	.debug
000013D4 2E 00 73 00        		.dw '.stabn 0x44,0,253,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         33 00 2C 00
         00 00 00 00
000013E8 C1 00 00 00        		.dd LM168-_L_display
000013EA 0D 00 0A 00        		.dw 0x0d,0x0a
00008F63                    	.code
                            	LM168:
00008F63 C5 96              		R3=[BP]	// QImode move
00008F64 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008F65 CB 94              		R2=[R3--]
00008F66 90 D4              		push R1,R2 to [sp]	// pushhf
00008F67 40 F0 33 96        		call __cvf2i1	// call with return value
00008F69 42 00              		SP=SP+2
00008F6A 19 D3 E5 01        		[_g_uiAx]=R1	// QImode move
000013EC                    	.debug
000013EC 2E 00 73 00        		.dw '.stabn 0x44,0,254,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         34 00 2C 00
         00 00 00 00
00001400 CA 00 00 00        		.dd LM169-_L_display
00001402 0D 00 0A 00        		.dw 0x0d,0x0a
00008F6C                    	.code
                            	LM169:
00008F6C 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008F6E 0A 95 E8 03        		R2=1000	// QImode move
00008F70 C8 D4              		[SP--]=R2	// QImode move
00008F71 C8 D2              		[SP--]=R1	// QImode move
00008F72 40 F0 8C 95        		call __divu1	// call with return value
00008F74 42 00              		SP=SP+2
00008F75 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
00001404                    	.debug
00001404 2E 00 73 00        		.dw '.stabn 0x44,0,255,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         35 00 2C 00
         00 00 00 00
00001418 D5 00 00 00        		.dd LM170-_L_display
0000141A 0D 00 0A 00        		.dw 0x0d,0x0a
00008F77                    	.code
                            	LM170:
00008F77 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008F79 0A 95 E8 03        		R2=1000	// QImode move
00008F7B C8 D4              		[SP--]=R2	// QImode move
00008F7C C8 D2              		[SP--]=R1	// QImode move
00008F7D 40 F0 BE 96        		call __modu1	// call with return value
00008F7F 42 00              		SP=SP+2
00008F80 0A 95 64 00        		R2=100	// QImode move
00008F82 C8 D4              		[SP--]=R2	// QImode move
00008F83 C8 D2              		[SP--]=R1	// QImode move
00008F84 40 F0 8C 95        		call __divu1	// call with return value
00008F86 42 00              		SP=SP+2
00008F87 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
0000141C                    	.debug
0000141C 2E 00 73 00        		.dw '.stabn 0x44,0,256,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         36 00 2C 00
         00 00 00 00
00001430 E7 00 00 00        		.dd LM171-_L_display
00001432 0D 00 0A 00        		.dw 0x0d,0x0a
00008F89                    	.code
                            	LM171:
00008F89 11 93 E5 01        		R1=[_g_uiAx]	// QImode move
00008F8B 0A 95 E8 03        		R2=1000	// QImode move
00008F8D C8 D4              		[SP--]=R2	// QImode move
00008F8E C8 D2              		[SP--]=R1	// QImode move
00008F8F 40 F0 BE 96        		call __modu1	// call with return value
00008F91 42 00              		SP=SP+2
00008F92 0A 95 64 00        		R2=100	// QImode move
00008F94 C8 D4              		[SP--]=R2	// QImode move
00008F95 C8 D2              		[SP--]=R1	// QImode move
00008F96 40 F0 BE 96        		call __modu1	// call with return value
00008F98 42 00              		SP=SP+2
00008F99 4A 94              		R2=10	// QImode move
00008F9A C8 D4              		[SP--]=R2	// QImode move
00008F9B C8 D2              		[SP--]=R1	// QImode move
00008F9C 40 F0 8C 95        		call __divu1	// call with return value
00008F9E 42 00              		SP=SP+2
00008F9F 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00001434                    	.debug
00001434 2E 00 73 00        		.dw '.stabn 0x44,0,257,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         37 00 2C 00
         00 00 00 00
00001448 FF 00 00 00        		.dd LM172-_L_display
0000144A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA1                    	.code
                            	LM172:
00008FA1 41 92              		R1=1	// QImode move
00008FA2 19 D3 FC 01        		[_g_array]=R1	// QImode move
0000144C                    	.debug
0000144C 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
00001460 02 01 00 00        		.dd LM173-_L_display
00001462 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA4                    	.code
                            	LM173:
00008FA4 11 93 FF 01        		R1=[_g_array+3]	// QImode move
00008FA6 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
00001464                    	.debug
00001464 2E 00 73 00        		.dw '.stabn 0x44,0,261,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         31 00 2C 00
         00 00 00 00
00001478 06 01 00 00        		.dd LM174-_L_display
0000147A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA8                    	.code
                            	LM174:
00008FA8 4A 92              		R1=10	// QImode move
00008FA9 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
0000147C                    	.debug
0000147C 2E 00 73 00        		.dw '.stabn 0x44,0,262,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         32 00 2C 00
         00 00 00 00
00001490 09 01 00 00        		.dd LM175-_L_display
00001492 0D 00 0A 00        		.dw 0x0d,0x0a
00008FAB                    	.code
                            	LM175:
00008FAB 11 93 FE 01        		R1=[_g_array+2]	// QImode move
00008FAD 19 D3 F8 01        		[_g_Speechary+2]=R1	// QImode move
00001494                    	.debug
00001494 2E 00 73 00        		.dw '.stabn 0x44,0,263,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         33 00 2C 00
         00 00 00 00
000014A8 0D 01 00 00        		.dd LM176-_L_display
000014AA 0D 00 0A 00        		.dw 0x0d,0x0a
00008FAF                    	.code
                            	LM176:
00008FAF 53 92              		R1=19	// QImode move
00008FB0 19 D3 F9 01        		[_g_Speechary+3]=R1	// QImode move
000014AC                    	.debug
000014AC 2E 00 73 00        		.dw '.stabn 0x44,0,264,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         34 00 2C 00
         00 00 00 00
000014C0 10 01 00 00        		.dd LM177-_L_display
000014C2 0D 00 0A 00        		.dw 0x0d,0x0a
00008FB2                    	.code
                            	LM177:
00008FB2 44 92              		R1=4	// QImode move
00008FB3 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L49:
000014C4                    	.debug
000014C4 2E 00 73 00        		.dw '.stabn 0x44,0,267,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         37 00 2C 00
         00 00 00 00
000014D8 13 01 00 00        		.dd LM178-_L_display
000014DA 0D 00 0A 00        		.dw 0x0d,0x0a
00008FB5                    	.code
                            	LM178:
00008FB5 C5 96              		R3=[BP]	// QImode move
00008FB6 D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008FB7 CB 94              		R2=[R3--]
00008FB8 0B 97 00 40        		R3=16384	// HFmode immediate to register move
00008FBA 0C 99 1C 46        		R4=17948
00008FBC 90 D8              		push R3,R4 to [sp]	// pushhf
00008FBD 90 D4              		push R1,R2 to [sp]	// pushhf
00008FBE 40 F0 05 96        		call __cmpf2	// call with return value
00008FC0 44 00              		SP=SP+4
00008FC1 41 42              		CMP R1,1	// QImode compare
00008FC2 02 5E              		JZ L58	// QImode NE
00008FC3 0F 9F DA 8F        		PC=L50
                            	L58:
000014DC                    	.debug
000014DC 2E 00 73 00        		.dw '.stabn 0x44,0,269,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         39 00 2C 00
         00 00 00 00
000014F0 23 01 00 00        		.dd LM179-_L_display
000014F2 0D 00 0A 00        		.dw 0x0d,0x0a
00008FC5                    	.code
                            	LM179:
00008FC5 41 92              		R1=1	// QImode move
00008FC6 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
000014F4                    	.debug
000014F4 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
00001508 26 01 00 00        		.dd LM180-_L_display
0000150A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FC8                    	.code
                            	LM180:
00008FC8 40 92              		R1=0	// QImode move
00008FC9 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
0000150C                    	.debug
0000150C 2E 00 73 00        		.dw '.stabn 0x44,0,271,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         31 00 2C 00
         00 00 00 00
00001520 29 01 00 00        		.dd LM181-_L_display
00001522 0D 00 0A 00        		.dw 0x0d,0x0a
00008FCB                    	.code
                            	LM181:
00008FCB 40 92              		R1=0	// QImode move
00008FCC 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
00001524                    	.debug
00001524 2E 00 73 00        		.dw '.stabn 0x44,0,272,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         32 00 2C 00
         00 00 00 00
00001538 2C 01 00 00        		.dd LM182-_L_display
0000153A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FCE                    	.code
                            	LM182:
00008FCE 42 92              		R1=2	// QImode move
00008FCF 19 D3 FC 01        		[_g_array]=R1	// QImode move
0000153C                    	.debug
0000153C 2E 00 73 00        		.dw '.stabn 0x44,0,275,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         35 00 2C 00
         00 00 00 00
00001550 2F 01 00 00        		.dd LM183-_L_display
00001552 0D 00 0A 00        		.dw 0x0d,0x0a
00008FD1                    	.code
                            	LM183:
00008FD1 4B 92              		R1=11	// QImode move
00008FD2 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
00001554                    	.debug
00001554 2E 00 73 00        		.dw '.stabn 0x44,0,276,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         36 00 2C 00
         00 00 00 00
00001568 32 01 00 00        		.dd LM184-_L_display
0000156A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FD4                    	.code
                            	LM184:
00008FD4 53 92              		R1=19	// QImode move
00008FD5 19 D3 F7 01        		[_g_Speechary+1]=R1	// QImode move
0000156C                    	.debug
0000156C 2E 00 73 00        		.dw '.stabn 0x44,0,277,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         37 00 2C 00
         00 00 00 00
00001580 35 01 00 00        		.dd LM185-_L_display
00001582 0D 00 0A 00        		.dw 0x0d,0x0a
00008FD7                    	.code
                            	LM185:
00008FD7 42 92              		R1=2	// QImode move
00008FD8 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
                            	L50:
00001584                    	.debug
00001584 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
00001598 38 01 00 00        		.dd LM186-_L_display
0000159A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FDA                    	.code
                            	LM186:
00008FDA C5 96              		R3=[BP]	// QImode move
00008FDB D3 92              		R1=[R3++]	// RD=[RS] HFmode, RD!=RS
00008FDC CB 94              		R2=[R3--]
00008FDD 0B 97 00 40        		R3=16384	// HFmode immediate to register move
00008FDF 0C 99 1C 46        		R4=17948
00008FE1 90 D8              		push R3,R4 to [sp]	// pushhf
00008FE2 90 D4              		push R1,R2 to [sp]	// pushhf
00008FE3 40 F0 05 96        		call __cmpf2	// call with return value
00008FE5 44 00              		SP=SP+4
00008FE6 41 42              		CMP R1,1	// QImode compare
00008FE7 02 BE              		JG L59	// QImode LE
00008FE8 0F 9F FC 8F        		PC=L51
                            	L59:
0000159C                    	.debug
0000159C 2E 00 73 00        		.dw '.stabn 0x44,0,282,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         32 00 2C 00
         00 00 00 00
000015B0 48 01 00 00        		.dd LM187-_L_display
000015B2 0D 00 0A 00        		.dw 0x0d,0x0a
00008FEA                    	.code
                            	LM187:
00008FEA 40 92              		R1=0	// QImode move
00008FEB 19 D3 FF 01        		[_g_array+3]=R1	// QImode move
000015B4                    	.debug
000015B4 2E 00 73 00        		.dw '.stabn 0x44,0,283,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         33 00 2C 00
         00 00 00 00
000015C8 4B 01 00 00        		.dd LM188-_L_display
000015CA 0D 00 0A 00        		.dw 0x0d,0x0a
00008FED                    	.code
                            	LM188:
00008FED 40 92              		R1=0	// QImode move
00008FEE 19 D3 FE 01        		[_g_array+2]=R1	// QImode move
000015CC                    	.debug
000015CC 2E 00 73 00        		.dw '.stabn 0x44,0,284,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         34 00 2C 00
         00 00 00 00
000015E0 4E 01 00 00        		.dd LM189-_L_display
000015E2 0D 00 0A 00        		.dw 0x0d,0x0a
00008FF0                    	.code
                            	LM189:
00008FF0 40 92              		R1=0	// QImode move
00008FF1 19 D3 FD 01        		[_g_array+1]=R1	// QImode move
000015E4                    	.debug
000015E4 2E 00 73 00        		.dw '.stabn 0x44,0,285,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         35 00 2C 00
         00 00 00 00
000015F8 51 01 00 00        		.dd LM190-_L_display
000015FA 0D 00 0A 00        		.dw 0x0d,0x0a
00008FF3                    	.code
                            	LM190:
00008FF3 40 92              		R1=0	// QImode move
00008FF4 19 D3 FC 01        		[_g_array]=R1	// QImode move
000015FC                    	.debug
000015FC 2E 00 73 00        		.dw '.stabn 0x44,0,288,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         38 00 2C 00
         00 00 00 00
00001610 54 01 00 00        		.dd LM191-_L_display
00001612 0D 00 0A 00        		.dw 0x0d,0x0a
00008FF6                    	.code
                            	LM191:
00008FF6 41 92              		R1=1	// QImode move
00008FF7 19 D3 F4 01        		[_g_speechID]=R1	// QImode move
00001614                    	.debug
00001614 2E 00 73 00        		.dw '.stabn 0x44,0,289,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         39 00 2C 00
         00 00 00 00
00001628 57 01 00 00        		.dd LM192-_L_display
0000162A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FF9                    	.code
                            	LM192:
00008FF9 59 92              		R1=25	// QImode move
00008FFA 19 D3 F6 01        		[_g_Speechary]=R1	// QImode move
                            	L51:
0000162C                    	.debug
0000162C 2E 00 73 00        		.dw '.stabn 0x44,0,292,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         32 00 2C 00
         00 00 00 00
00001640 5A 01 00 00        		.dd LM193-_L_display
00001642 0D 00 0A 00        		.dw 0x0d,0x0a
00008FFC                    	.code
                            	LM193:
00001644                    	.debug
00001644 2E 00 73 00        		.dw '.stabn 0x44,0,292,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         32 00 2C 00
         00 00 00 00
00001658 5A 01 00 00        		.dd LM194-_L_display
0000165A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FFC                    	.code
                            	LM194:
                            	L44:
                            	
00008FFC 41 00              		sp+=1
00008FFD 88 98              		pop bp from [sp]
00008FFE 90 9A              		retf
                            		.endp	// end of L_display
                            	
0000165C                    	.debug
0000165C 2E 00 73 00        		.dw '.stabs "Lx:p12",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4C 00 78 00
         3A 00 70 00
         31 00 32 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
00008FFF                    	.CODE
00001677                    	.debug
00001677 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001680 5D 01 00 00        		.dd LME3-_L_display
00001682 0D 00 0A 00        		.dw 0x0d,0x0a
00008FFF                    	.code
                            	LME3:
00001684                    	.debug
00001684 2E 00 73 00        		.dw '.stabs "g_uiAx:G4",32,0,0,',0,0,offset _g_uiAx,seg _g_uiAx,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 5F 00
         75 00 69 00
         41 00 78 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008FFF                    	.CODE
000001E5                    	.ram
                            	.public _g_uiAx
                            	_g_uiAx:
000001E5 00 00              		.dw 0
                            	.external _g_Speechary
                            	.external _g_speechID
                            	.external _g_array
                            	.external __cmpf2
                            	.external __divu1
                            	.external __modu1
                            	.external __rshu1
                            	.external __cvf2i1
                            	.external __divf2
                            		.end
0 error(s), 0 warning(s).

