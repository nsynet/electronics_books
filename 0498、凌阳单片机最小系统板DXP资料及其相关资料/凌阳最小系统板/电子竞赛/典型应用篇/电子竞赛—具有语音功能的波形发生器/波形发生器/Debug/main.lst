Sunplus u'nSP Assembler - Ver. 1.8.0
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.10
                            	// Command: D:\PROGRA~1\Sunplus\UNSPID~1\IDE180\cc1.exe D:\DOCUME~1\ÁõÐÂÑÕ\LOCALS~1\Temp\ccKEaaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -gstabs -o .\Debug/main.asm
                            	// gcc2_compiled.:
                            	
00008235                    	.code
                            	Ltext0:
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
0000002C                    	.debug
0000002C 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
00000052                    	.debug
00000052 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
0000008D                    	.debug
0000008D 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
000000BD                    	.debug
000000BD 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
000000F7                    	.debug
000000F7 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
00000137                    	.debug
00000137 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
00000176                    	.debug
00000176 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
000001A8                    	.debug
000001A8 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
000001DE                    	.debug
000001DE 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
00000214                    	.debug
00000214 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
00000247                    	.debug
00000247 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
0000026D                    	.debug
0000026D 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
00000294                    	.debug
00000294 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
000002C0                    	.debug
000002C0 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
00000301                    	.debug
00000301 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
00000330                    	.debug
00000330 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
00000360                    	.debug
00000360 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
00000395                    	.debug
00000395 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008235                    	.CODE
000003B5                    	.debug
000003B5 2E 00 73 00        		.dw '.stabs "complex:T20=s4x:12,0,32;y:12,32,32;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 3A 00
         54 00 32 00
         30 00 3D 00
         73 00 34 00
         78 00 3A 00
         31 00 32 00
         2C 00 30 00
         2C 00 33 00
         32 00 3B 00
         79 00 3A 00
         31 00 32 00
         2C 00 33 00
         32 00 2C 00
         33 00 32 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
000003EE                    	.debug
000003EE 2E 00 73 00        		.dw '.stabs "exception:T21=s9type:1,0,16;name:22=*2,16,16;\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         65 00 78 00
         63 00 65 00
         70 00 74 00
         69 00 6F 00
         6E 00 3A 00
         54 00 32 00
         31 00 3D 00
         73 00 39 00
         74 00 79 00
         70 00 65 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         6E 00 61 00
         6D 00 65 00
         3A 00 32 00
         32 00 3D 00
         2A 00 32 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 5C 00
         5C 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00000432 2E 00 73 00        		.DW '.stabs "arg1:13,32,32;arg2:13,64,32;retval:13,96,32;\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         61 00 72 00
         67 00 31 00
         3A 00 31 00
         33 00 2C 00
         33 00 32 00
         2C 00 33 00
         32 00 3B 00
         61 00 72 00
         67 00 32 00
         3A 00 31 00
         33 00 2C 00
         36 00 34 00
         2C 00 33 00
         32 00 3B 00
         72 00 65 00
         74 00 76 00
         61 00 6C 00
         3A 00 31 00
         33 00 2C 00
         39 00 36 00
         2C 00 33 00
         32 00 3B 00
         5C 00 5C 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00000475 2E 00 73 00        		.DW '.stabs "err:1,128,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         65 00 72 00
         72 00 3A 00
         31 00 2C 00
         31 00 32 00
         38 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
00000498                    	.debug
00000498 2E 00 73 00        		.dw '.stabs "ieee_float_shape_type:t23=24=u2value:12,0,32;word:3,0,32;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 65 00
         65 00 65 00
         5F 00 66 00
         6C 00 6F 00
         61 00 74 00
         5F 00 73 00
         68 00 61 00
         70 00 65 00
         5F 00 74 00
         79 00 70 00
         65 00 3A 00
         74 00 32 00
         33 00 3D 00
         32 00 34 00
         3D 00 75 00
         32 00 76 00
         61 00 6C 00
         75 00 65 00
         3A 00 31 00
         32 00 2C 00
         30 00 2C 00
         33 00 32 00
         3B 00 77 00
         6F 00 72 00
         64 00 3A 00
         33 00 2C 00
         30 00 2C 00
         33 00 32 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008235                    	.CODE
00008235                    	.code
000004E7                    	.debug
000004E7 2E 00 73 00        		.dw '.stabs "playS480:F19",36,0,0,',0,0,offset _playS480,seg _playS480,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         70 00 6C 00
         61 00 79 00
         53 00 34 00
         38 00 30 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008235                    	.CODE
                            	.public _playS480
                            	_playS480:	.proc
0000050A                    	.debug
0000050A 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
0000051D 00 00 00 00        		.dd LM1-_playS480
0000051F 0D 00 0A 00        		.dw 0x0d,0x0a
00008235                    	.code
                            	LM1:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
00008235 88 DA              		push bp to [sp]
00008236 42 20              		sp-=2
00008237 08 0B 01 00        		bp=sp+1
                            	
00008239 0D 03 05 00        		R1=BP+5
0000823B 01 D2              		[bp+1]=R1	// QImode move
00000521                    	.debug
00000521 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
00000534 07 00 00 00        		.dd LM2-_playS480
00000536 0D 00 0A 00        		.dw 0x0d,0x0a
0000823C                    	.code
                            	LM2:
                            	LBB2:
00000538                    	.debug
00000538 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
0000054B 07 00 00 00        		.dd LM3-_playS480
0000054D 0D 00 0A 00        		.dw 0x0d,0x0a
0000823C                    	.code
                            	LM3:
0000823C 40 92              		R1=0	// QImode move
0000823D C5 D2              		[BP]=R1	// QImode move
                            	L3:
0000823E C5 92              		R1=[BP]	// QImode move
0000823F 40 42              		CMP R1,0	// QImode test
00008240 02 4E              		JNZ L10	// QImode EQ
00008241 0F 9F 45 82        		PC=L6
                            	L10:
00008243 0F 9F 6A 82        		pc=L4	// jump
                            	L6:
0000054F                    	.debug
0000054F 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
00000562 10 00 00 00        		.dd LM4-_playS480
00000564 0D 00 0A 00        		.dw 0x0d,0x0a
00008245                    	.code
                            	LM4:
                            	LBB3:
00008245 40 F0 D7 A8        		call _Turnoff_INT_64Hz	// call with return value
00000566                    	.debug
00000566 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
00000579 12 00 00 00        		.dd LM5-_playS480
0000057B 0D 00 0A 00        		.dw 0x0d,0x0a
00008247                    	.code
                            	LM5:
00008247 41 92              		R1=1	// QImode move
00008248 C8 D2              		[SP--]=R1	// QImode move
00008249 40 F0 B0 8D        		call _SACM_S480_Initial	// call with return value
0000824B 41 00              		SP=SP+1
0000057D                    	.debug
0000057D 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
00000590 17 00 00 00        		.dd LM6-_playS480
00000592 0D 00 0A 00        		.dw 0x0d,0x0a
0000824C                    	.code
                            	LM6:
0000824C 43 92              		R1=3	// QImode move
0000824D C8 D2              		[SP--]=R1	// QImode move
0000824E 43 92              		R1=3	// QImode move
0000824F C8 D2              		[SP--]=R1	// QImode move
00008250 01 94              		R2=[bp+1]	// QImode move
00008251 C2 92              		R1=[R2]	// QImode move
00008252 C8 D2              		[SP--]=R1	// QImode move
00008253 40 F0 99 8C        		call _SACM_S480_Play	// call with return value
00008255 43 00              		SP=SP+3
00000594                    	.debug
00000594 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
000005A7 21 00 00 00        		.dd LM7-_playS480
000005A9 0D 00 0A 00        		.dw 0x0d,0x0a
00008256                    	.code
                            	LM7:
                            	L7:
00008256 40 F0 D4 8D        		call _SACM_S480_Status	// call with return value
00008258 09 B5 01 00        		R2=R1&1
0000825A 40 44              		CMP R2,0	// QImode test
0000825B 02 5E              		JZ L11	// QImode NE
0000825C 0F 9F 60 82        		PC=L9
                            	L11:
0000825E 0F 9F 64 82        		pc=L5	// jump
                            	L9:
000005AB                    	.debug
000005AB 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
000005BE 2B 00 00 00        		.dd LM8-_playS480
000005C0 0D 00 0A 00        		.dw 0x0d,0x0a
00008260                    	.code
                            	LM8:
00008260 40 F0 DC 8D        		call _SACM_S480_ServiceLoop	// call with return value
00008262 0F 9F 56 82        		pc=L7	// jump
                            	L8:
000005C2                    	.debug
000005C2 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
000005D5 2F 00 00 00        		.dd LM9-_playS480
000005D7 0D 00 0A 00        		.dw 0x0d,0x0a
00008264                    	.code
                            	LM9:
                            	LBE3:
000005D9                    	.debug
000005D9 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
000005EC 2F 00 00 00        		.dd LM10-_playS480
000005EE 0D 00 0A 00        		.dw 0x0d,0x0a
00008264                    	.code
                            	LM10:
                            	L5:
00008264 C5 92              		R1=[BP]	// QImode move
00008265 09 05 01 00        		R2=R1+1
00008267 C5 D4              		[BP]=R2	// QImode move
00008268 0F 9F 3E 82        		pc=L3	// jump
                            	L4:
000005F0                    	.debug
000005F0 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
00000603 35 00 00 00        		.dd LM11-_playS480
00000605 0D 00 0A 00        		.dw 0x0d,0x0a
0000826A                    	.code
                            	LM11:
0000826A 40 F0 CB A8        		call _SP_INT_64Hz	// call with return value
00000607                    	.debug
00000607 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
0000061A 37 00 00 00        		.dd LM12-_playS480
0000061C 0D 00 0A 00        		.dw 0x0d,0x0a
0000826C                    	.code
                            	LM12:
                            	LBE2:
0000061E                    	.debug
0000061E 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
00000631 37 00 00 00        		.dd LM13-_playS480
00000633 0D 00 0A 00        		.dw 0x0d,0x0a
0000826C                    	.code
                            	LM13:
                            	L2:
                            	
0000826C 42 00              		sp+=2
0000826D 88 98              		pop bp from [sp]
0000826E 90 9A              		retf
                            		.endp	// end of playS480
                            	
00000635                    	.debug
00000635 2E 00 73 00        		.dw '.stabs "num:p11",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6E 00 75 00
         6D 00 3A 00
         70 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000826F                    	.CODE
00000651                    	.debug
00000651 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000663 07 00 00 00        		.dd LBB2-_playS480
00000665 0D 00 0A 00        		.dw 0x0d,0x0a
0000826F                    	.code
00000667                    	.debug
00000667 2E 00 73 00        		.dw '.stabs "i:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000826F                    	.CODE
0000067F                    	.debug
0000067F 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000691 10 00 00 00        		.dd LBB3-_playS480
00000693 0D 00 0A 00        		.dw 0x0d,0x0a
0000826F                    	.code
00000695                    	.debug
00000695 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000006A7 2F 00 00 00        		.dd LBE3-_playS480
000006A9 0D 00 0A 00        		.dw 0x0d,0x0a
0000826F                    	.code
000006AB                    	.debug
000006AB 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000006BD 37 00 00 00        		.dd LBE2-_playS480
000006BF 0D 00 0A 00        		.dw 0x0d,0x0a
0000826F                    	.code
000006C1                    	.debug
000006C1 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000006CA 3A 00 00 00        		.dd LME1-_playS480
000006CC 0D 00 0A 00        		.dw 0x0d,0x0a
0000826F                    	.code
                            	LME1:
0000826F                    	.code
000006CE                    	.debug
000006CE 2E 00 73 00        		.dw '.stabs "showled:F19",36,0,0,',0,0,offset _showled,seg _showled,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 77 00
         6C 00 65 00
         64 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         3A 00 00 00
         0D 00 0A 00
0000826F                    	.CODE
                            	.public _showled
                            	_showled:	.proc
000006F0                    	.debug
000006F0 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00000703 00 00 00 00        		.dd LM14-_showled
00000705 0D 00 0A 00        		.dw 0x0d,0x0a
0000826F                    	.code
                            	LM14:
                            		// total=35, vars=35
                            		// frame_pointer_needed: 1
0000826F 88 DA              		push bp to [sp]
00008270 63 20              		sp-=35
00008271 08 0B 01 00        		bp=sp+1
                            	
00008273 0D 03 26 00        		R1=BP+38
00008275 10 D2              		[bp+16]=R1	// QImode move
00000707                    	.debug
00000707 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
0000071A 07 00 00 00        		.dd LM15-_showled
0000071C 0D 00 0A 00        		.dw 0x0d,0x0a
00008276                    	.code
                            	LM15:
                            	LBB4:
0000071E                    	.debug
0000071E 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
00000731 07 00 00 00        		.dd LM16-_showled
00000733 0D 00 0A 00        		.dw 0x0d,0x0a
00008276                    	.code
                            	LM16:
00008276 05 93              		R1=BP	// QImode move
00008277 0D 05 04 00        		R2=BP+4
00008279 11 D4              		[bp+17]=R2	// QImode move
0000827A 10 96              		R3=[bp+16]	// QImode move
0000827B C3 92              		R1=[R3]	// QImode move
0000827C 4A 94              		R2=10	// QImode move
0000827D C8 D4              		[SP--]=R2	// QImode move
0000827E C8 D2              		[SP--]=R1	// QImode move
0000827F 40 F0 31 A7        		call __modi1	// call with return value
00008281 42 00              		SP=SP+2
00008282 11 98              		R4=[bp+17]	// QImode move
00008283 C4 D2              		[R4]=R1	// QImode move
00000735                    	.debug
00000735 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
00000748 15 00 00 00        		.dd LM17-_showled
0000074A 0D 00 0A 00        		.dw 0x0d,0x0a
00008284                    	.code
                            	LM17:
00008284 05 93              		R1=BP	// QImode move
00008285 0D 03 01 00        		R1=BP+1
00008287 12 D2              		[bp+18]=R1	// QImode move
00008288 10 94              		R2=[bp+16]	// QImode move
00008289 C2 92              		R1=[R2]	// QImode move
0000828A 4A 94              		R2=10	// QImode move
0000828B C8 D4              		[SP--]=R2	// QImode move
0000828C C8 D2              		[SP--]=R1	// QImode move
0000828D 40 F0 6A A6        		call __divi1	// call with return value
0000828F 42 00              		SP=SP+2
00008290 12 96              		R3=[bp+18]	// QImode move
00008291 C3 D2              		[R3]=R1	// QImode move
0000074C                    	.debug
0000074C 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
0000075F 23 00 00 00        		.dd LM18-_showled
00000761 0D 00 0A 00        		.dw 0x0d,0x0a
00008292                    	.code
                            	LM18:
00008292 05 93              		R1=BP	// QImode move
00008293 0D 09 05 00        		R4=BP+5
00008295 13 D8              		[bp+19]=R4	// QImode move
00008296 05 93              		R1=BP	// QImode move
00008297 0D 05 01 00        		R2=BP+1
00008299 02 97              		R3=R2	// QImode move
0000829A C3 92              		R1=[R3]	// QImode move
0000829B 4A 94              		R2=10	// QImode move
0000829C C8 D4              		[SP--]=R2	// QImode move
0000829D C8 D2              		[SP--]=R1	// QImode move
0000829E 40 F0 31 A7        		call __modi1	// call with return value
000082A0 42 00              		SP=SP+2
000082A1 13 98              		R4=[bp+19]	// QImode move
000082A2 C4 D2              		[R4]=R1	// QImode move
00000763                    	.debug
00000763 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00000776 34 00 00 00        		.dd LM19-_showled
00000778 0D 00 0A 00        		.dw 0x0d,0x0a
000082A3                    	.code
                            	LM19:
000082A3 05 93              		R1=BP	// QImode move
000082A4 0D 03 01 00        		R1=BP+1
000082A6 14 D2              		[bp+20]=R1	// QImode move
000082A7 10 94              		R2=[bp+16]	// QImode move
000082A8 C2 92              		R1=[R2]	// QImode move
000082A9 0A 95 64 00        		R2=100	// QImode move
000082AB C8 D4              		[SP--]=R2	// QImode move
000082AC C8 D2              		[SP--]=R1	// QImode move
000082AD 40 F0 6A A6        		call __divi1	// call with return value
000082AF 42 00              		SP=SP+2
000082B0 14 96              		R3=[bp+20]	// QImode move
000082B1 C3 D2              		[R3]=R1	// QImode move
0000077A                    	.debug
0000077A 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
0000078D 43 00 00 00        		.dd LM20-_showled
0000078F 0D 00 0A 00        		.dw 0x0d,0x0a
000082B2                    	.code
                            	LM20:
000082B2 05 93              		R1=BP	// QImode move
000082B3 0D 09 06 00        		R4=BP+6
000082B5 15 D8              		[bp+21]=R4	// QImode move
000082B6 05 93              		R1=BP	// QImode move
000082B7 0D 05 01 00        		R2=BP+1
000082B9 02 97              		R3=R2	// QImode move
000082BA C3 92              		R1=[R3]	// QImode move
000082BB 4A 94              		R2=10	// QImode move
000082BC C8 D4              		[SP--]=R2	// QImode move
000082BD C8 D2              		[SP--]=R1	// QImode move
000082BE 40 F0 31 A7        		call __modi1	// call with return value
000082C0 42 00              		SP=SP+2
000082C1 15 98              		R4=[bp+21]	// QImode move
000082C2 C4 D2              		[R4]=R1	// QImode move
00000791                    	.debug
00000791 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000007A4 54 00 00 00        		.dd LM21-_showled
000007A6 0D 00 0A 00        		.dw 0x0d,0x0a
000082C3                    	.code
                            	LM21:
000082C3 05 93              		R1=BP	// QImode move
000082C4 0D 03 01 00        		R1=BP+1
000082C6 16 D2              		[bp+22]=R1	// QImode move
000082C7 10 94              		R2=[bp+16]	// QImode move
000082C8 C2 92              		R1=[R2]	// QImode move
000082C9 0A 95 E8 03        		R2=1000	// QImode move
000082CB C8 D4              		[SP--]=R2	// QImode move
000082CC C8 D2              		[SP--]=R1	// QImode move
000082CD 40 F0 6A A6        		call __divi1	// call with return value
000082CF 42 00              		SP=SP+2
000082D0 16 96              		R3=[bp+22]	// QImode move
000082D1 C3 D2              		[R3]=R1	// QImode move
000007A8                    	.debug
000007A8 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
000007BB 63 00 00 00        		.dd LM22-_showled
000007BD 0D 00 0A 00        		.dw 0x0d,0x0a
000082D2                    	.code
                            	LM22:
000082D2 05 93              		R1=BP	// QImode move
000082D3 0D 09 07 00        		R4=BP+7
000082D5 17 D8              		[bp+23]=R4	// QImode move
000082D6 05 93              		R1=BP	// QImode move
000082D7 0D 05 01 00        		R2=BP+1
000082D9 02 97              		R3=R2	// QImode move
000082DA C3 92              		R1=[R3]	// QImode move
000082DB 4A 94              		R2=10	// QImode move
000082DC C8 D4              		[SP--]=R2	// QImode move
000082DD C8 D2              		[SP--]=R1	// QImode move
000082DE 40 F0 31 A7        		call __modi1	// call with return value
000082E0 42 00              		SP=SP+2
000082E1 17 98              		R4=[bp+23]	// QImode move
000082E2 C4 D2              		[R4]=R1	// QImode move
000007BF                    	.debug
000007BF 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
000007D2 74 00 00 00        		.dd LM23-_showled
000007D4 0D 00 0A 00        		.dw 0x0d,0x0a
000082E3                    	.code
                            	LM23:
000082E3 05 93              		R1=BP	// QImode move
000082E4 0D 03 0A 00        		R1=BP+10
000082E6 18 D2              		[bp+24]=R1	// QImode move
000082E7 10 92              		R1=[bp+16]	// QImode move
000082E8 10 96              		R3=[bp+16]	// QImode move
000082E9 0B 05 01 00        		R2=R3+1
000082EB 02 99              		R4=R2	// QImode move
000082EC C4 92              		R1=[R4]	// QImode move
000082ED 4A 94              		R2=10	// QImode move
000082EE C8 D4              		[SP--]=R2	// QImode move
000082EF C8 D2              		[SP--]=R1	// QImode move
000082F0 40 F0 31 A7        		call __modi1	// call with return value
000082F2 42 00              		SP=SP+2
000082F3 18 94              		R2=[bp+24]	// QImode move
000082F4 C2 D2              		[R2]=R1	// QImode move
000007D6                    	.debug
000007D6 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
000007E9 86 00 00 00        		.dd LM24-_showled
000007EB 0D 00 0A 00        		.dw 0x0d,0x0a
000082F5                    	.code
                            	LM24:
000082F5 05 93              		R1=BP	// QImode move
000082F6 0D 07 01 00        		R3=BP+1
000082F8 19 D6              		[bp+25]=R3	// QImode move
000082F9 10 92              		R1=[bp+16]	// QImode move
000082FA 10 98              		R4=[bp+16]	// QImode move
000082FB 0C 05 01 00        		R2=R4+1
000082FD 02 97              		R3=R2	// QImode move
000082FE C3 92              		R1=[R3]	// QImode move
000082FF 4A 94              		R2=10	// QImode move
00008300 C8 D4              		[SP--]=R2	// QImode move
00008301 C8 D2              		[SP--]=R1	// QImode move
00008302 40 F0 6A A6        		call __divi1	// call with return value
00008304 42 00              		SP=SP+2
00008305 19 98              		R4=[bp+25]	// QImode move
00008306 C4 D2              		[R4]=R1	// QImode move
000007ED                    	.debug
000007ED 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
00000800 98 00 00 00        		.dd LM25-_showled
00000802 0D 00 0A 00        		.dw 0x0d,0x0a
00008307                    	.code
                            	LM25:
00008307 05 93              		R1=BP	// QImode move
00008308 0D 03 0B 00        		R1=BP+11
0000830A 1A D2              		[bp+26]=R1	// QImode move
0000830B 05 93              		R1=BP	// QImode move
0000830C 0D 05 01 00        		R2=BP+1
0000830E 02 97              		R3=R2	// QImode move
0000830F C3 92              		R1=[R3]	// QImode move
00008310 4A 94              		R2=10	// QImode move
00008311 C8 D4              		[SP--]=R2	// QImode move
00008312 C8 D2              		[SP--]=R1	// QImode move
00008313 40 F0 31 A7        		call __modi1	// call with return value
00008315 42 00              		SP=SP+2
00008316 1A 98              		R4=[bp+26]	// QImode move
00008317 C4 D2              		[R4]=R1	// QImode move
00000804                    	.debug
00000804 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
00000817 A9 00 00 00        		.dd LM26-_showled
00000819 0D 00 0A 00        		.dw 0x0d,0x0a
00008318                    	.code
                            	LM26:
00008318 05 93              		R1=BP	// QImode move
00008319 0D 03 01 00        		R1=BP+1
0000831B 1B D2              		[bp+27]=R1	// QImode move
0000831C 10 92              		R1=[bp+16]	// QImode move
0000831D 10 96              		R3=[bp+16]	// QImode move
0000831E 0B 05 01 00        		R2=R3+1
00008320 02 99              		R4=R2	// QImode move
00008321 C4 92              		R1=[R4]	// QImode move
00008322 0A 95 64 00        		R2=100	// QImode move
00008324 C8 D4              		[SP--]=R2	// QImode move
00008325 C8 D2              		[SP--]=R1	// QImode move
00008326 40 F0 6A A6        		call __divi1	// call with return value
00008328 42 00              		SP=SP+2
00008329 1B 94              		R2=[bp+27]	// QImode move
0000832A C2 D2              		[R2]=R1	// QImode move
0000081B                    	.debug
0000081B 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
0000082E BC 00 00 00        		.dd LM27-_showled
00000830 0D 00 0A 00        		.dw 0x0d,0x0a
0000832B                    	.code
                            	LM27:
0000832B 05 93              		R1=BP	// QImode move
0000832C 0D 07 0C 00        		R3=BP+12
0000832E 1C D6              		[bp+28]=R3	// QImode move
0000832F 05 93              		R1=BP	// QImode move
00008330 0D 05 01 00        		R2=BP+1
00008332 02 99              		R4=R2	// QImode move
00008333 C4 92              		R1=[R4]	// QImode move
00008334 4A 94              		R2=10	// QImode move
00008335 C8 D4              		[SP--]=R2	// QImode move
00008336 C8 D2              		[SP--]=R1	// QImode move
00008337 40 F0 31 A7        		call __modi1	// call with return value
00008339 42 00              		SP=SP+2
0000833A 1C 94              		R2=[bp+28]	// QImode move
0000833B C2 D2              		[R2]=R1	// QImode move
00000832                    	.debug
00000832 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
00000845 CD 00 00 00        		.dd LM28-_showled
00000847 0D 00 0A 00        		.dw 0x0d,0x0a
0000833C                    	.code
                            	LM28:
0000833C 05 93              		R1=BP	// QImode move
0000833D 0D 07 01 00        		R3=BP+1
0000833F 1D D6              		[bp+29]=R3	// QImode move
00008340 10 92              		R1=[bp+16]	// QImode move
00008341 10 98              		R4=[bp+16]	// QImode move
00008342 0C 05 01 00        		R2=R4+1
00008344 02 97              		R3=R2	// QImode move
00008345 C3 92              		R1=[R3]	// QImode move
00008346 0A 95 E8 03        		R2=1000	// QImode move
00008348 C8 D4              		[SP--]=R2	// QImode move
00008349 C8 D2              		[SP--]=R1	// QImode move
0000834A 40 F0 6A A6        		call __divi1	// call with return value
0000834C 42 00              		SP=SP+2
0000834D 1D 98              		R4=[bp+29]	// QImode move
0000834E C4 D2              		[R4]=R1	// QImode move
00000849                    	.debug
00000849 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
0000085C E0 00 00 00        		.dd LM29-_showled
0000085E 0D 00 0A 00        		.dw 0x0d,0x0a
0000834F                    	.code
                            	LM29:
0000834F 05 93              		R1=BP	// QImode move
00008350 0D 03 0D 00        		R1=BP+13
00008352 1E D2              		[bp+30]=R1	// QImode move
00008353 05 93              		R1=BP	// QImode move
00008354 0D 05 01 00        		R2=BP+1
00008356 02 97              		R3=R2	// QImode move
00008357 C3 92              		R1=[R3]	// QImode move
00008358 4A 94              		R2=10	// QImode move
00008359 C8 D4              		[SP--]=R2	// QImode move
0000835A C8 D2              		[SP--]=R1	// QImode move
0000835B 40 F0 31 A7        		call __modi1	// call with return value
0000835D 42 00              		SP=SP+2
0000835E 1E 98              		R4=[bp+30]	// QImode move
0000835F C4 D2              		[R4]=R1	// QImode move
00000860                    	.debug
00000860 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
00000873 F1 00 00 00        		.dd LM30-_showled
00000875 0D 00 0A 00        		.dw 0x0d,0x0a
00008360                    	.code
                            	LM30:
00008360 05 93              		R1=BP	// QImode move
00008361 0D 03 01 00        		R1=BP+1
00008363 1F D2              		[bp+31]=R1	// QImode move
00008364 10 92              		R1=[bp+16]	// QImode move
00008365 10 96              		R3=[bp+16]	// QImode move
00008366 0B 05 01 00        		R2=R3+1
00008368 02 99              		R4=R2	// QImode move
00008369 C4 92              		R1=[R4]	// QImode move
0000836A 0A 95 10 27        		R2=10000	// QImode move
0000836C C8 D4              		[SP--]=R2	// QImode move
0000836D C8 D2              		[SP--]=R1	// QImode move
0000836E 40 F0 6A A6        		call __divi1	// call with return value
00008370 42 00              		SP=SP+2
00008371 1F 94              		R2=[bp+31]	// QImode move
00008372 C2 D2              		[R2]=R1	// QImode move
00000877                    	.debug
00000877 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
0000088A 04 01 00 00        		.dd LM31-_showled
0000088C 0D 00 0A 00        		.dw 0x0d,0x0a
00008373                    	.code
                            	LM31:
00008373 05 93              		R1=BP	// QImode move
00008374 0D 07 0E 00        		R3=BP+14
00008376 20 D6              		[bp+32]=R3	// QImode move
00008377 05 93              		R1=BP	// QImode move
00008378 0D 05 01 00        		R2=BP+1
0000837A 02 99              		R4=R2	// QImode move
0000837B C4 92              		R1=[R4]	// QImode move
0000837C 4A 94              		R2=10	// QImode move
0000837D C8 D4              		[SP--]=R2	// QImode move
0000837E C8 D2              		[SP--]=R1	// QImode move
0000837F 40 F0 31 A7        		call __modi1	// call with return value
00008381 42 00              		SP=SP+2
00008382 20 94              		R2=[bp+32]	// QImode move
00008383 C2 D2              		[R2]=R1	// QImode move
0000088E                    	.debug
0000088E 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
000008A1 15 01 00 00        		.dd LM32-_showled
000008A3 0D 00 0A 00        		.dw 0x0d,0x0a
00008384                    	.code
                            	LM32:
00008384 05 93              		R1=BP	// QImode move
00008385 0D 07 01 00        		R3=BP+1
00008387 21 D6              		[bp+33]=R3	// QImode move
00008388 10 92              		R1=[bp+16]	// QImode move
00008389 10 98              		R4=[bp+16]	// QImode move
0000838A 0C 07 01 00        		R3=R4+1
0000838C 03 99              		R4=R3	// QImode move
0000838D 40 94              		R2=0	// sign extend
0000838E C4 92              		R1=[R4]
0000838F 01 6E              		jpl 1
00008390 41 64              		R2=-1
00008391 0B 67 60 79        		R3=(-31072)	// HImode immediate to register move
00008393 41 98              		R4=1
00008394 90 D8              		push R3,R4 to [sp]	// pushhi
00008395 90 D4              		push R1,R2 to [sp]	// pushhi
00008396 40 F0 DF A5        		call __divi2	// call with return value
00008398 44 00              		SP=SP+4
00008399 01 97              		R3=R1	// QImode move
0000839A 21 92              		R1=[bp+33]	// QImode move
0000839B C1 D6              		[R1]=R3	// QImode move
000008A5                    	.debug
000008A5 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
000008B8 2D 01 00 00        		.dd LM33-_showled
000008BA 0D 00 0A 00        		.dw 0x0d,0x0a
0000839C                    	.code
                            	LM33:
0000839C 05 93              		R1=BP	// QImode move
0000839D 0D 05 0F 00        		R2=BP+15
0000839F 22 D4              		[bp+34]=R2	// QImode move
000083A0 05 93              		R1=BP	// QImode move
000083A1 0D 05 01 00        		R2=BP+1
000083A3 02 97              		R3=R2	// QImode move
000083A4 C3 92              		R1=[R3]	// QImode move
000083A5 4A 94              		R2=10	// QImode move
000083A6 C8 D4              		[SP--]=R2	// QImode move
000083A7 C8 D2              		[SP--]=R1	// QImode move
000083A8 40 F0 31 A7        		call __modi1	// call with return value
000083AA 42 00              		SP=SP+2
000083AB 22 98              		R4=[bp+34]	// QImode move
000083AC C4 D2              		[R4]=R1	// QImode move
000008BC                    	.debug
000008BC 2E 00 73 00        		.dw '.stabn 0x44,0,82,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 32 00
         2C 00 00 00
         00 00      
000008CF 3E 01 00 00        		.dd LM34-_showled
000008D1 0D 00 0A 00        		.dw 0x0d,0x0a
000083AD                    	.code
                            	LM34:
000083AD 05 93              		R1=BP	// QImode move
000083AE 0D 05 01 00        		R2=BP+1
000083B0 40 92              		R1=0	// QImode move
000083B1 02 97              		R3=R2	// QImode move
000083B2 C3 D2              		[R3]=R1	// QImode move
                            	L13:
000008D3                    	.debug
000008D3 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
000008E6 44 01 00 00        		.dd LM35-_showled
000008E8 0D 00 0A 00        		.dw 0x0d,0x0a
000083B3                    	.code
                            	LM35:
                            	LBB5:
000083B3 05 93              		R1=BP	// QImode move
000083B4 0D 05 04 00        		R2=BP+4
000083B6 02 99              		R4=R2	// QImode move
000083B7 C4 92              		R1=[R4]	// QImode move
000083B8 C8 D2              		[SP--]=R1	// QImode move
000083B9 40 92              		R1=0	// QImode move
000083BA C8 D2              		[SP--]=R1	// QImode move
000083BB 40 F0 19 B1        		call _singleled	// call with return value
000083BD 42 00              		SP=SP+2
000008EA                    	.debug
000008EA 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
000008FD 4F 01 00 00        		.dd LM36-_showled
000008FF 0D 00 0A 00        		.dw 0x0d,0x0a
000083BE                    	.code
                            	LM36:
000083BE 41 92              		R1=1	// QImode move
000083BF C5 D2              		[BP]=R1	// QImode move
                            	L16:
000083C0 C5 92              		R1=[BP]	// QImode move
000083C1 50 42              		CMP R1,16	// QImode compare
000083C2 02 BE              		JG L41	// QImode LE
000083C3 0F 9F C7 83        		PC=L19
                            	L41:
000083C5 0F 9F CF 83        		pc=L17	// jump
                            	L19:
00000901                    	.debug
00000901 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00000914 58 01 00 00        		.dd LM37-_showled
00000916 0D 00 0A 00        		.dw 0x0d,0x0a
000083C7                    	.code
                            	LM37:
000083C7 40 F0 18 A8        		call _delay	// call with return value
00000918                    	.debug
00000918 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
0000092B 5A 01 00 00        		.dd LM38-_showled
0000092D 0D 00 0A 00        		.dw 0x0d,0x0a
000083C9                    	.code
                            	LM38:
                            	L18:
000083C9 C5 92              		R1=[BP]	// QImode move
000083CA 09 05 01 00        		R2=R1+1
000083CC C5 D4              		[BP]=R2	// QImode move
000083CD 0F 9F C0 83        		pc=L16	// jump
                            	L17:
0000092F                    	.debug
0000092F 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
00000942 60 01 00 00        		.dd LM39-_showled
00000944 0D 00 0A 00        		.dw 0x0d,0x0a
000083CF                    	.code
                            	LM39:
000083CF 05 93              		R1=BP	// QImode move
000083D0 0D 05 05 00        		R2=BP+5
000083D2 02 97              		R3=R2	// QImode move
000083D3 C3 92              		R1=[R3]	// QImode move
000083D4 C8 D2              		[SP--]=R1	// QImode move
000083D5 41 92              		R1=1	// QImode move
000083D6 C8 D2              		[SP--]=R1	// QImode move
000083D7 40 F0 19 B1        		call _singleled	// call with return value
000083D9 42 00              		SP=SP+2
00000946                    	.debug
00000946 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
00000959 6B 01 00 00        		.dd LM40-_showled
0000095B 0D 00 0A 00        		.dw 0x0d,0x0a
000083DA                    	.code
                            	LM40:
000083DA 41 92              		R1=1	// QImode move
000083DB C5 D2              		[BP]=R1	// QImode move
                            	L20:
000083DC C5 92              		R1=[BP]	// QImode move
000083DD 50 42              		CMP R1,16	// QImode compare
000083DE 02 BE              		JG L42	// QImode LE
000083DF 0F 9F E3 83        		PC=L23
                            	L42:
000083E1 0F 9F EB 83        		pc=L21	// jump
                            	L23:
0000095D                    	.debug
0000095D 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000970 74 01 00 00        		.dd LM41-_showled
00000972 0D 00 0A 00        		.dw 0x0d,0x0a
000083E3                    	.code
                            	LM41:
000083E3 40 F0 18 A8        		call _delay	// call with return value
00000974                    	.debug
00000974 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
00000987 76 01 00 00        		.dd LM42-_showled
00000989 0D 00 0A 00        		.dw 0x0d,0x0a
000083E5                    	.code
                            	LM42:
                            	L22:
000083E5 C5 92              		R1=[BP]	// QImode move
000083E6 09 05 01 00        		R2=R1+1
000083E8 C5 D4              		[BP]=R2	// QImode move
000083E9 0F 9F DC 83        		pc=L20	// jump
                            	L21:
0000098B                    	.debug
0000098B 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
0000099E 7C 01 00 00        		.dd LM43-_showled
000009A0 0D 00 0A 00        		.dw 0x0d,0x0a
000083EB                    	.code
                            	LM43:
000083EB 05 93              		R1=BP	// QImode move
000083EC 0D 05 0A 00        		R2=BP+10
000083EE 02 99              		R4=R2	// QImode move
000083EF C4 92              		R1=[R4]	// QImode move
000083F0 C8 D2              		[SP--]=R1	// QImode move
000083F1 42 92              		R1=2	// QImode move
000083F2 C8 D2              		[SP--]=R1	// QImode move
000083F3 40 F0 19 B1        		call _singleled	// call with return value
000083F5 42 00              		SP=SP+2
000009A2                    	.debug
000009A2 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
000009B5 87 01 00 00        		.dd LM44-_showled
000009B7 0D 00 0A 00        		.dw 0x0d,0x0a
000083F6                    	.code
                            	LM44:
000083F6 41 92              		R1=1	// QImode move
000083F7 C5 D2              		[BP]=R1	// QImode move
                            	L24:
000083F8 C5 92              		R1=[BP]	// QImode move
000083F9 50 42              		CMP R1,16	// QImode compare
000083FA 02 BE              		JG L43	// QImode LE
000083FB 0F 9F FF 83        		PC=L27
                            	L43:
000083FD 0F 9F 07 84        		pc=L25	// jump
                            	L27:
000009B9                    	.debug
000009B9 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
000009CC 90 01 00 00        		.dd LM45-_showled
000009CE 0D 00 0A 00        		.dw 0x0d,0x0a
000083FF                    	.code
                            	LM45:
000083FF 40 F0 18 A8        		call _delay	// call with return value
000009D0                    	.debug
000009D0 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
000009E3 92 01 00 00        		.dd LM46-_showled
000009E5 0D 00 0A 00        		.dw 0x0d,0x0a
00008401                    	.code
                            	LM46:
                            	L26:
00008401 C5 92              		R1=[BP]	// QImode move
00008402 09 05 01 00        		R2=R1+1
00008404 C5 D4              		[BP]=R2	// QImode move
00008405 0F 9F F8 83        		pc=L24	// jump
                            	L25:
000009E7                    	.debug
000009E7 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
000009FA 98 01 00 00        		.dd LM47-_showled
000009FC 0D 00 0A 00        		.dw 0x0d,0x0a
00008407                    	.code
                            	LM47:
00008407 05 93              		R1=BP	// QImode move
00008408 0D 05 0B 00        		R2=BP+11
0000840A 02 97              		R3=R2	// QImode move
0000840B C3 92              		R1=[R3]	// QImode move
0000840C C8 D2              		[SP--]=R1	// QImode move
0000840D 43 92              		R1=3	// QImode move
0000840E C8 D2              		[SP--]=R1	// QImode move
0000840F 40 F0 19 B1        		call _singleled	// call with return value
00008411 42 00              		SP=SP+2
000009FE                    	.debug
000009FE 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000A11 A3 01 00 00        		.dd LM48-_showled
00000A13 0D 00 0A 00        		.dw 0x0d,0x0a
00008412                    	.code
                            	LM48:
00008412 41 92              		R1=1	// QImode move
00008413 C5 D2              		[BP]=R1	// QImode move
                            	L28:
00008414 C5 92              		R1=[BP]	// QImode move
00008415 50 42              		CMP R1,16	// QImode compare
00008416 02 BE              		JG L44	// QImode LE
00008417 0F 9F 1B 84        		PC=L31
                            	L44:
00008419 0F 9F 23 84        		pc=L29	// jump
                            	L31:
00000A15                    	.debug
00000A15 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
00000A28 AC 01 00 00        		.dd LM49-_showled
00000A2A 0D 00 0A 00        		.dw 0x0d,0x0a
0000841B                    	.code
                            	LM49:
0000841B 40 F0 18 A8        		call _delay	// call with return value
00000A2C                    	.debug
00000A2C 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000A3F AE 01 00 00        		.dd LM50-_showled
00000A41 0D 00 0A 00        		.dw 0x0d,0x0a
0000841D                    	.code
                            	LM50:
                            	L30:
0000841D C5 92              		R1=[BP]	// QImode move
0000841E 09 05 01 00        		R2=R1+1
00008420 C5 D4              		[BP]=R2	// QImode move
00008421 0F 9F 14 84        		pc=L28	// jump
                            	L29:
00000A43                    	.debug
00000A43 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000A57 B4 01 00 00        		.dd LM51-_showled
00000A59 0D 00 0A 00        		.dw 0x0d,0x0a
00008423                    	.code
                            	LM51:
00008423 05 93              		R1=BP	// QImode move
00008424 0D 05 0C 00        		R2=BP+12
00008426 02 99              		R4=R2	// QImode move
00008427 C4 92              		R1=[R4]	// QImode move
00008428 C8 D2              		[SP--]=R1	// QImode move
00008429 44 92              		R1=4	// QImode move
0000842A C8 D2              		[SP--]=R1	// QImode move
0000842B 40 F0 19 B1        		call _singleled	// call with return value
0000842D 42 00              		SP=SP+2
00000A5B                    	.debug
00000A5B 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
00000A6F BF 01 00 00        		.dd LM52-_showled
00000A71 0D 00 0A 00        		.dw 0x0d,0x0a
0000842E                    	.code
                            	LM52:
0000842E 41 92              		R1=1	// QImode move
0000842F C5 D2              		[BP]=R1	// QImode move
                            	L32:
00008430 C5 92              		R1=[BP]	// QImode move
00008431 50 42              		CMP R1,16	// QImode compare
00008432 02 BE              		JG L45	// QImode LE
00008433 0F 9F 37 84        		PC=L35
                            	L45:
00008435 0F 9F 3F 84        		pc=L33	// jump
                            	L35:
00000A73                    	.debug
00000A73 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000A87 C8 01 00 00        		.dd LM53-_showled
00000A89 0D 00 0A 00        		.dw 0x0d,0x0a
00008437                    	.code
                            	LM53:
00008437 40 F0 18 A8        		call _delay	// call with return value
00000A8B                    	.debug
00000A8B 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
00000A9F CA 01 00 00        		.dd LM54-_showled
00000AA1 0D 00 0A 00        		.dw 0x0d,0x0a
00008439                    	.code
                            	LM54:
                            	L34:
00008439 C5 92              		R1=[BP]	// QImode move
0000843A 09 05 01 00        		R2=R1+1
0000843C C5 D4              		[BP]=R2	// QImode move
0000843D 0F 9F 30 84        		pc=L32	// jump
                            	L33:
00000AA3                    	.debug
00000AA3 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000AB7 D0 01 00 00        		.dd LM55-_showled
00000AB9 0D 00 0A 00        		.dw 0x0d,0x0a
0000843F                    	.code
                            	LM55:
0000843F 05 93              		R1=BP	// QImode move
00008440 0D 05 0D 00        		R2=BP+13
00008442 02 97              		R3=R2	// QImode move
00008443 C3 92              		R1=[R3]	// QImode move
00008444 C8 D2              		[SP--]=R1	// QImode move
00008445 45 92              		R1=5	// QImode move
00008446 C8 D2              		[SP--]=R1	// QImode move
00008447 40 F0 19 B1        		call _singleled	// call with return value
00008449 42 00              		SP=SP+2
00000ABB                    	.debug
00000ABB 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000ACF DB 01 00 00        		.dd LM56-_showled
00000AD1 0D 00 0A 00        		.dw 0x0d,0x0a
0000844A                    	.code
                            	LM56:
0000844A 41 92              		R1=1	// QImode move
0000844B C5 D2              		[BP]=R1	// QImode move
                            	L36:
0000844C C5 92              		R1=[BP]	// QImode move
0000844D 50 42              		CMP R1,16	// QImode compare
0000844E 02 BE              		JG L46	// QImode LE
0000844F 0F 9F 53 84        		PC=L39
                            	L46:
00008451 0F 9F 5B 84        		pc=L37	// jump
                            	L39:
00000AD3                    	.debug
00000AD3 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00000AE7 E4 01 00 00        		.dd LM57-_showled
00000AE9 0D 00 0A 00        		.dw 0x0d,0x0a
00008453                    	.code
                            	LM57:
00008453 40 F0 18 A8        		call _delay	// call with return value
00000AEB                    	.debug
00000AEB 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000AFF E6 01 00 00        		.dd LM58-_showled
00000B01 0D 00 0A 00        		.dw 0x0d,0x0a
00008455                    	.code
                            	LM58:
                            	L38:
00008455 C5 92              		R1=[BP]	// QImode move
00008456 09 05 01 00        		R2=R1+1
00008458 C5 D4              		[BP]=R2	// QImode move
00008459 0F 9F 4C 84        		pc=L36	// jump
                            	L37:
00000B03                    	.debug
00000B03 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000B17 EC 01 00 00        		.dd LM59-_showled
00000B19 0D 00 0A 00        		.dw 0x0d,0x0a
0000845B                    	.code
                            	LM59:
0000845B 05 93              		R1=BP	// QImode move
0000845C 0D 05 01 00        		R2=BP+1
0000845E 05 97              		R3=BP	// QImode move
0000845F 0D 03 01 00        		R1=BP+1
00008461 05 95              		R2=BP	// QImode move
00008462 0D 07 01 00        		R3=BP+1
00008464 03 99              		R4=R3	// QImode move
00008465 C4 94              		R2=[R4]	// QImode move
00008466 0A 07 01 00        		R3=R2+1
00008468 01 95              		R2=R1	// QImode move
00008469 C2 D6              		[R2]=R3	// QImode move
00000B1B                    	.debug
00000B1B 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000B2F FB 01 00 00        		.dd LM60-_showled
00000B31 0D 00 0A 00        		.dw 0x0d,0x0a
0000846A                    	.code
                            	LM60:
                            	LBE5:
                            	L15:
00000B33                    	.debug
00000B33 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000B47 FB 01 00 00        		.dd LM61-_showled
00000B49 0D 00 0A 00        		.dw 0x0d,0x0a
0000846A                    	.code
                            	LM61:
0000846A 05 93              		R1=BP	// QImode move
0000846B 0D 05 01 00        		R2=BP+1
0000846D 02 97              		R3=R2	// QImode move
0000846E C3 92              		R1=[R3]	// QImode move
0000846F 09 43 20 03        		CMP R1,800	// QImode compare
00008471 02 BE              		JG L47	// QImode LE
00008472 0F 9F 76 84        		PC=L40
                            	L47:
00008474 0F 9F 78 84        		pc=L14	// jump
                            	L40:
00008476 0F 9F B3 83        		pc=L13	// jump
                            	L14:
00000B4B                    	.debug
00000B4B 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000B5F 09 02 00 00        		.dd LM62-_showled
00000B61 0D 00 0A 00        		.dw 0x0d,0x0a
00008478                    	.code
                            	LM62:
00008478 41 92              		R1=1	// QImode move
00008479 C8 D2              		[SP--]=R1	// QImode move
0000847A 40 F0 B0 8D        		call _SACM_S480_Initial	// call with return value
0000847C 41 00              		SP=SP+1
00000B63                    	.debug
00000B63 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
00000B77 0E 02 00 00        		.dd LM63-_showled
00000B79 0D 00 0A 00        		.dw 0x0d,0x0a
0000847D                    	.code
                            	LM63:
0000847D 05 93              		R1=BP	// QImode move
0000847E 0D 05 05 00        		R2=BP+5
00008480 02 99              		R4=R2	// QImode move
00008481 C4 92              		R1=[R4]	// QImode move
00008482 C8 D2              		[SP--]=R1	// QImode move
00008483 40 F0 35 82        		call _playS480	// call without return value
00008485 41 00              		SP=SP+1
00000B7B                    	.debug
00000B7B 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000B8F 17 02 00 00        		.dd LM64-_showled
00000B91 0D 00 0A 00        		.dw 0x0d,0x0a
00008486                    	.code
                            	LM64:
00008486 05 93              		R1=BP	// QImode move
00008487 0D 05 04 00        		R2=BP+4
00008489 02 97              		R3=R2	// QImode move
0000848A C3 92              		R1=[R3]	// QImode move
0000848B C8 D2              		[SP--]=R1	// QImode move
0000848C 40 F0 35 82        		call _playS480	// call without return value
0000848E 41 00              		SP=SP+1
00000B93                    	.debug
00000B93 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00000BA7 20 02 00 00        		.dd LM65-_showled
00000BA9 0D 00 0A 00        		.dw 0x0d,0x0a
0000848F                    	.code
                            	LM65:
0000848F 4C 92              		R1=12	// QImode move
00008490 C8 D2              		[SP--]=R1	// QImode move
00008491 40 F0 35 82        		call _playS480	// call without return value
00008493 41 00              		SP=SP+1
00000BAB                    	.debug
00000BAB 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000BBF 25 02 00 00        		.dd LM66-_showled
00000BC1 0D 00 0A 00        		.dw 0x0d,0x0a
00008494                    	.code
                            	LM66:
00008494 05 93              		R1=BP	// QImode move
00008495 0D 05 0D 00        		R2=BP+13
00008497 02 99              		R4=R2	// QImode move
00008498 C4 92              		R1=[R4]	// QImode move
00008499 C8 D2              		[SP--]=R1	// QImode move
0000849A 40 F0 35 82        		call _playS480	// call without return value
0000849C 41 00              		SP=SP+1
00000BC3                    	.debug
00000BC3 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000BD7 2E 02 00 00        		.dd LM67-_showled
00000BD9 0D 00 0A 00        		.dw 0x0d,0x0a
0000849D                    	.code
                            	LM67:
0000849D 05 93              		R1=BP	// QImode move
0000849E 0D 05 0C 00        		R2=BP+12
000084A0 02 97              		R3=R2	// QImode move
000084A1 C3 92              		R1=[R3]	// QImode move
000084A2 C8 D2              		[SP--]=R1	// QImode move
000084A3 40 F0 35 82        		call _playS480	// call without return value
000084A5 41 00              		SP=SP+1
00000BDB                    	.debug
00000BDB 2E 00 73 00        		.dw '.stabn 0x44,0,119,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         39 00 2C 00
         00 00 00 00
00000BEF 37 02 00 00        		.dd LM68-_showled
00000BF1 0D 00 0A 00        		.dw 0x0d,0x0a
000084A6                    	.code
                            	LM68:
000084A6 05 93              		R1=BP	// QImode move
000084A7 0D 05 0B 00        		R2=BP+11
000084A9 02 99              		R4=R2	// QImode move
000084AA C4 92              		R1=[R4]	// QImode move
000084AB C8 D2              		[SP--]=R1	// QImode move
000084AC 40 F0 35 82        		call _playS480	// call without return value
000084AE 41 00              		SP=SP+1
00000BF3                    	.debug
00000BF3 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
00000C07 40 02 00 00        		.dd LM69-_showled
00000C09 0D 00 0A 00        		.dw 0x0d,0x0a
000084AF                    	.code
                            	LM69:
000084AF 05 93              		R1=BP	// QImode move
000084B0 0D 05 0A 00        		R2=BP+10
000084B2 02 97              		R3=R2	// QImode move
000084B3 C3 92              		R1=[R3]	// QImode move
000084B4 C8 D2              		[SP--]=R1	// QImode move
000084B5 40 F0 35 82        		call _playS480	// call without return value
000084B7 41 00              		SP=SP+1
00000C0B                    	.debug
00000C0B 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000C1F 49 02 00 00        		.dd LM70-_showled
00000C21 0D 00 0A 00        		.dw 0x0d,0x0a
000084B8                    	.code
                            	LM70:
000084B8 40 F0 7E 9D        		call _K_IRQ	// call with return value
00000C23                    	.debug
00000C23 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000C37 4B 02 00 00        		.dd LM71-_showled
00000C39 0D 00 0A 00        		.dw 0x0d,0x0a
000084BA                    	.code
                            	LM71:
                            	LBE4:
00000C3B                    	.debug
00000C3B 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000C4F 4B 02 00 00        		.dd LM72-_showled
00000C51 0D 00 0A 00        		.dw 0x0d,0x0a
000084BA                    	.code
                            	LM72:
                            	L12:
                            	
000084BA 63 00              		sp+=35
000084BB 88 98              		pop bp from [sp]
000084BC 90 9A              		retf
                            		.endp	// end of showled
                            	
00000C53                    	.debug
00000C53 2E 00 73 00        		.dw '.stabs "tim:p1",160,0,0,38',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 69 00
         6D 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         33 00 38 00
         0D 00 0A 00
000084BD                    	.CODE
00000C6F                    	.debug
00000C6F 2E 00 73 00        		.dw '.stabs "pin:p1",160,0,0,39',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         70 00 69 00
         6E 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         33 00 39 00
         0D 00 0A 00
000084BD                    	.CODE
00000C8B                    	.debug
00000C8B 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000C9D 07 00 00 00        		.dd LBB4-_showled
00000C9F 0D 00 0A 00        		.dw 0x0d,0x0a
000084BD                    	.code
00000CA1                    	.debug
00000CA1 2E 00 73 00        		.dw '.stabs "kk:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6B 00 6B 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000084BD                    	.CODE
00000CBA                    	.debug
00000CBA 2E 00 73 00        		.dw '.stabs "t:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
000084BD                    	.CODE
00000CD2                    	.debug
00000CD2 2E 00 73 00        		.dw '.stabs "time:1",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 69 00
         6D 00 65 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
000084BD                    	.CODE
00000CED                    	.debug
00000CED 2E 00 73 00        		.dw '.stabs "carlong:1",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 61 00
         72 00 6C 00
         6F 00 6E 00
         67 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
000084BD                    	.CODE
00000D0B                    	.debug
00000D0B 2E 00 73 00        		.dw '.stabs "tm0:1",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         30 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
000084BD                    	.CODE
00000D25                    	.debug
00000D25 2E 00 73 00        		.dw '.stabs "tm1:1",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         31 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
000084BD                    	.CODE
00000D3F                    	.debug
00000D3F 2E 00 73 00        		.dw '.stabs "tm2:1",128,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         32 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
000084BD                    	.CODE
00000D59                    	.debug
00000D59 2E 00 73 00        		.dw '.stabs "tm3:1",128,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         33 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 37 00
         0D 00 0A 00
000084BD                    	.CODE
00000D73                    	.debug
00000D73 2E 00 73 00        		.dw '.stabs "second:1",128,0,0,8',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 65 00
         63 00 6F 00
         6E 00 64 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         38 00 0D 00
         0A 00      
000084BD                    	.CODE
00000D90                    	.debug
00000D90 2E 00 73 00        		.dw '.stabs "distance:1",128,0,0,9',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 69 00
         73 00 74 00
         61 00 6E 00
         63 00 65 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         39 00 0D 00
         0A 00      
000084BD                    	.CODE
00000DAF                    	.debug
00000DAF 2E 00 73 00        		.dw '.stabs "dst0:1",128,0,0,10',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 30 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 30 00
         0D 00 0A 00
000084BD                    	.CODE
00000DCB                    	.debug
00000DCB 2E 00 73 00        		.dw '.stabs "dst1:1",128,0,0,11',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 31 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 31 00
         0D 00 0A 00
000084BD                    	.CODE
00000DE7                    	.debug
00000DE7 2E 00 73 00        		.dw '.stabs "dst2:1",128,0,0,12',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 32 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 32 00
         0D 00 0A 00
000084BD                    	.CODE
00000E03                    	.debug
00000E03 2E 00 73 00        		.dw '.stabs "dst3:1",128,0,0,13',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 33 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 33 00
         0D 00 0A 00
000084BD                    	.CODE
00000E1F                    	.debug
00000E1F 2E 00 73 00        		.dw '.stabs "dst4:1",128,0,0,14',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 34 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 34 00
         0D 00 0A 00
000084BD                    	.CODE
00000E3B                    	.debug
00000E3B 2E 00 73 00        		.dw '.stabs "dst5:1",128,0,0,15',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 73 00
         74 00 35 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 35 00
         0D 00 0A 00
000084BD                    	.CODE
00000E57                    	.debug
00000E57 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E69 44 01 00 00        		.dd LBB5-_showled
00000E6B 0D 00 0A 00        		.dw 0x0d,0x0a
000084BD                    	.code
00000E6D                    	.debug
00000E6D 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E7F FB 01 00 00        		.dd LBE5-_showled
00000E81 0D 00 0A 00        		.dw 0x0d,0x0a
000084BD                    	.code
00000E83                    	.debug
00000E83 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E95 4B 02 00 00        		.dd LBE4-_showled
00000E97 0D 00 0A 00        		.dw 0x0d,0x0a
000084BD                    	.code
00000E99                    	.debug
00000E99 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000EA2 4E 02 00 00        		.dd LME2-_showled
00000EA4 0D 00 0A 00        		.dw 0x0d,0x0a
000084BD                    	.code
                            	LME2:
00000EA6                    	.debug
00000EA6 2E 00 73 00        		.dw '.stabs "pp:G4",32,0,0,',0,0,offset _pp,seg _pp,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         70 00 70 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
000084BD                    	.CODE
                            	.public _pp
000001F1                    	.iram
                            	_pp:
000001F1 00 00              		.dw 0
00000EC2                    	.debug
00000EC2 2E 00 73 00        		.dw '.stabs "Mk_Z:G4",32,0,0,',0,0,offset _Mk_Z,seg _Mk_Z,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 5A 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         01 00 00 00
         0D 00 0A 00
000084BD                    	.CODE
                            	.public _Mk_Z
000001F2                    	.iram
                            	_Mk_Z:
000001F2 64 00              		.dw 100
00000EE0                    	.debug
00000EE0 2E 00 73 00        		.dw '.stabs "Mk_F:G4",32,0,0,',0,0,offset _Mk_F,seg _Mk_F,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 46 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         02 00 00 00
         0D 00 0A 00
000084BD                    	.CODE
                            	.public _Mk_F
000001F3                    	.iram
                            	_Mk_F:
000001F3 64 00              		.dw 100
00000EFE                    	.debug
00000EFE 2E 00 73 00        		.dw '.stabs "Mk_Z1:G4",32,0,0,',0,0,offset _Mk_Z1,seg _Mk_Z1,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 5A 00
         31 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 03 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_Z1
000001F4                    	.iram
                            	_Mk_Z1:
000001F4 64 00              		.dw 100
00000F1D                    	.debug
00000F1D 2E 00 73 00        		.dw '.stabs "Mk_F1:G4",32,0,0,',0,0,offset _Mk_F1,seg _Mk_F1,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 46 00
         31 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 04 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_F1
000001F5                    	.iram
                            	_Mk_F1:
000001F5 64 00              		.dw 100
00000F3C                    	.debug
00000F3C 2E 00 73 00        		.dw '.stabs "Mk_Z2:G4",32,0,0,',0,0,offset _Mk_Z2,seg _Mk_Z2,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 5A 00
         32 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 05 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_Z2
000001F6                    	.iram
                            	_Mk_Z2:
000001F6 64 00              		.dw 100
00000F5B                    	.debug
00000F5B 2E 00 73 00        		.dw '.stabs "Mk_F2:G4",32,0,0,',0,0,offset _Mk_F2,seg _Mk_F2,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 46 00
         32 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 06 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_F2
000001F7                    	.iram
                            	_Mk_F2:
000001F7 64 00              		.dw 100
00000F7A                    	.debug
00000F7A 2E 00 73 00        		.dw '.stabs "Mk_Z3:G4",32,0,0,',0,0,offset _Mk_Z3,seg _Mk_Z3,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 5A 00
         33 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 07 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_Z3
000001F8                    	.iram
                            	_Mk_Z3:
000001F8 64 00              		.dw 100
00000F99                    	.debug
00000F99 2E 00 73 00        		.dw '.stabs "Mk_F3:G4",32,0,0,',0,0,offset _Mk_F3,seg _Mk_F3,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 46 00
         33 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 08 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_F3
000001F9                    	.iram
                            	_Mk_F3:
000001F9 64 00              		.dw 100
00000FB8                    	.debug
00000FB8 2E 00 73 00        		.dw '.stabs "Mk_Z4:G4",32,0,0,',0,0,offset _Mk_Z4,seg _Mk_Z4,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 5A 00
         34 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 09 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_Z4
000001FA                    	.iram
                            	_Mk_Z4:
000001FA 64 00              		.dw 100
00000FD7                    	.debug
00000FD7 2E 00 73 00        		.dw '.stabs "Mk_F4:G4",32,0,0,',0,0,offset _Mk_F4,seg _Mk_F4,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 46 00
         34 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0A 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_F4
000001FB                    	.iram
                            	_Mk_F4:
000001FB 64 00              		.dw 100
00000FF6                    	.debug
00000FF6 2E 00 73 00        		.dw '.stabs "Mk_Z5:G4",32,0,0,',0,0,offset _Mk_Z5,seg _Mk_Z5,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 5A 00
         35 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0B 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_Z5
000001FC                    	.iram
                            	_Mk_Z5:
000001FC 64 00              		.dw 100
00001015                    	.debug
00001015 2E 00 73 00        		.dw '.stabs "Mk_F5:G4",32,0,0,',0,0,offset _Mk_F5,seg _Mk_F5,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 46 00
         35 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0C 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_F5
000001FD                    	.iram
                            	_Mk_F5:
000001FD 64 00              		.dw 100
00001034                    	.debug
00001034 2E 00 73 00        		.dw '.stabs "V_GA:G4",32,0,0,',0,0,offset _V_GA,seg _V_GA,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         56 00 5F 00
         47 00 41 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         0D 00 00 00
         0D 00 0A 00
000084BD                    	.CODE
                            	.public _V_GA
000001FE                    	.iram
                            	_V_GA:
000001FE 64 00              		.dw 100
00001052                    	.debug
00001052 2E 00 73 00        		.dw '.stabs "Bianxing:G4",32,0,0,',0,0,offset _Bianxing,seg _Bianxing,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 69 00
         61 00 6E 00
         78 00 69 00
         6E 00 67 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         0E 00 00 00
         0D 00 0A 00
000084BD                    	.CODE
                            	.public _Bianxing
000001FF                    	.iram
                            	_Bianxing:
000001FF 00 00              		.dw 0
00001074                    	.debug
00001074 2E 00 73 00        		.dw '.stabs "Bianxing1:G4",32,0,0,',0,0,offset _Bianxing1,seg _Bianxing1,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 69 00
         61 00 6E 00
         78 00 69 00
         6E 00 67 00
         31 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0F 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Bianxing1
00000200                    	.iram
                            	_Bianxing1:
00000200 00 00              		.dw 0
00001097                    	.debug
00001097 2E 00 73 00        		.dw '.stabs "sanju:G4",32,0,0,',0,0,offset _sanju,seg _sanju,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 61 00
         6E 00 6A 00
         75 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 10 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _sanju
00000201                    	.iram
                            	_sanju:
00000201 F3 00              		.dw 243
000010B6                    	.debug
000010B6 2E 00 73 00        		.dw '.stabs "Mk_Z6:G4",32,0,0,',0,0,offset _Mk_Z6,seg _Mk_Z6,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6B 00
         5F 00 5A 00
         36 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 11 00
         00 00 0D 00
         0A 00      
000084BD                    	.CODE
                            	.public _Mk_Z6
00000202                    	.iram
                            	_Mk_Z6:
00000202 F0 0F              		.dw 4080
000084BD                    	.code
000010D5                    	.debug
000010D5 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         88 02 00 00
         0D 00 0A 00
000084BD                    	.CODE
                            	.public _main
                            	_main:	.proc
000010F3                    	.debug
000010F3 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
00001107 00 00 00 00        		.dd LM73-_main
00001109 0D 00 0A 00        		.dw 0x0d,0x0a
000084BD                    	.code
                            	LM73:
                            		// total=62, vars=62
                            		// frame_pointer_needed: 1
000084BD 88 DA              		push bp to [sp]
000084BE 7E 20              		sp-=62
000084BF 08 0B 01 00        		bp=sp+1
                            	
000084C1 0D 03 41 00        		R1=BP+65
000084C3 1D D2              		[bp+29]=R1	// QImode move
0000110B                    	.debug
0000110B 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
0000111F 07 00 00 00        		.dd LM74-_main
00001121 0D 00 0A 00        		.dw 0x0d,0x0a
000084C4                    	.code
                            	LM74:
                            	LBB6:
000084C4 40 92              		R1=0	// QImode move
000084C5 C5 D2              		[BP]=R1	// QImode move
00001123                    	.debug
00001123 2E 00 73 00        		.dw '.stabn 0x44,0,132,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         32 00 2C 00
         00 00 00 00
00001137 09 00 00 00        		.dd LM75-_main
00001139 0D 00 0A 00        		.dw 0x0d,0x0a
000084C6                    	.code
                            	LM75:
000084C6 05 93              		R1=BP	// QImode move
000084C7 0D 05 13 00        		R2=BP+19
000084C9 41 92              		R1=1	// QImode move
000084CA 02 97              		R3=R2	// QImode move
000084CB C3 D2              		[R3]=R1	// QImode move
000084CC 05 93              		R1=BP	// QImode move
000084CD 0D 05 14 00        		R2=BP+20
000084CF 41 92              		R1=1	// QImode move
000084D0 02 99              		R4=R2	// QImode move
000084D1 C4 D2              		[R4]=R1	// QImode move
000084D2 05 93              		R1=BP	// QImode move
000084D3 0D 05 15 00        		R2=BP+21
000084D5 41 92              		R1=1	// QImode move
000084D6 02 97              		R3=R2	// QImode move
000084D7 C3 D2              		[R3]=R1	// QImode move
000084D8 05 93              		R1=BP	// QImode move
000084D9 0D 05 16 00        		R2=BP+22
000084DB 41 92              		R1=1	// QImode move
000084DC 02 99              		R4=R2	// QImode move
000084DD C4 D2              		[R4]=R1	// QImode move
000084DE 05 93              		R1=BP	// QImode move
000084DF 0D 05 17 00        		R2=BP+23
000084E1 41 92              		R1=1	// QImode move
000084E2 02 97              		R3=R2	// QImode move
000084E3 C3 D2              		[R3]=R1	// QImode move
000084E4 05 93              		R1=BP	// QImode move
000084E5 0D 05 19 00        		R2=BP+25
000084E7 09 93 2C 01        		R1=300	// QImode move
000084E9 02 99              		R4=R2	// QImode move
000084EA C4 D2              		[R4]=R1	// QImode move
0000113B                    	.debug
0000113B 2E 00 73 00        		.dw '.stabn 0x44,0,133,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         33 00 2C 00
         00 00 00 00
0000114F 2E 00 00 00        		.dd LM76-_main
00001151 0D 00 0A 00        		.dw 0x0d,0x0a
000084EB                    	.code
                            	LM76:
000084EB 05 93              		R1=BP	// QImode move
000084EC 0D 05 1A 00        		R2=BP+26
000084EE 09 93 FF 7F        		R1=32767	// QImode move
000084F0 02 97              		R3=R2	// QImode move
000084F1 C3 D2              		[R3]=R1	// QImode move
000084F2 05 93              		R1=BP	// QImode move
000084F3 0D 05 1B 00        		R2=BP+27
000084F5 09 93 F3 00        		R1=243	// QImode move
000084F7 02 99              		R4=R2	// QImode move
000084F8 C4 D2              		[R4]=R1	// QImode move
00001153                    	.debug
00001153 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00001167 3C 00 00 00        		.dd LM77-_main
00001169 0D 00 0A 00        		.dw 0x0d,0x0a
000084F9                    	.code
                            	LM77:
000084F9 11 93 F1 01        		R1=[_pp]	// QImode move
000084FB 40 42              		CMP R1,0	// QImode test
000084FC 02 4E              		JNZ L130	// QImode EQ
000084FD 0F 9F 01 85        		PC=L49
                            	L130:
000084FF 40 F0 5B A8        		call _baab	// call with return value
                            	L49:
0000116B                    	.debug
0000116B 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
0000117F 44 00 00 00        		.dd LM78-_main
00001181 0D 00 0A 00        		.dw 0x0d,0x0a
00008501                    	.code
                            	LM78:
00008501 40 F0 7E 9D        		call _K_IRQ	// call with return value
00001183                    	.debug
00001183 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00001197 46 00 00 00        		.dd LM79-_main
00001199 0D 00 0A 00        		.dw 0x0d,0x0a
00008503                    	.code
                            	LM79:
                            	L50:
00008503 0F 9F 07 85        		pc=L52	// jump
00008505 0F 9F 96 8C        		pc=L51	// jump
                            	L52:
0000119B                    	.debug
0000119B 2E 00 73 00        		.dw '.stabn 0x44,0,140,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         30 00 2C 00
         00 00 00 00
000011AF 4A 00 00 00        		.dd LM80-_main
000011B1 0D 00 0A 00        		.dw 0x0d,0x0a
00008507                    	.code
                            	LM80:
                            	LBB7:
00008507 40 F0 3C A8        		call _key_asm	// call with return value
00008509 C5 D2              		[BP]=R1	// QImode move
000011B3                    	.debug
000011B3 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
000011C7 4D 00 00 00        		.dd LM81-_main
000011C9 0D 00 0A 00        		.dw 0x0d,0x0a
0000850A                    	.code
                            	LM81:
0000850A 40 F0 5C A8        		call _key_asm1	// call with return value
0000850C 05 95              		R2=BP	// QImode move
0000850D 0D 07 01 00        		R3=BP+1
0000850F 03 95              		R2=R3	// QImode move
00008510 C2 D2              		[R2]=R1	// QImode move
000011CB                    	.debug
000011CB 2E 00 73 00        		.dw '.stabn 0x44,0,143,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         33 00 2C 00
         00 00 00 00
000011DF 54 00 00 00        		.dd LM82-_main
000011E1 0D 00 0A 00        		.dw 0x0d,0x0a
00008511                    	.code
                            	LM82:
00008511 40 F0 5C A8        		call _key_asm1	// call with return value
00008513 05 95              		R2=BP	// QImode move
00008514 0D 07 01 00        		R3=BP+1
00008516 03 99              		R4=R3	// QImode move
00008517 C4 D2              		[R4]=R1	// QImode move
000011E3                    	.debug
000011E3 2E 00 73 00        		.dw '.stabn 0x44,0,144,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         34 00 2C 00
         00 00 00 00
000011F7 5B 00 00 00        		.dd LM83-_main
000011F9 0D 00 0A 00        		.dw 0x0d,0x0a
00008518                    	.code
                            	LM83:
00008518 40 F0 5C A8        		call _key_asm1	// call with return value
0000851A 05 95              		R2=BP	// QImode move
0000851B 0D 07 01 00        		R3=BP+1
0000851D 03 95              		R2=R3	// QImode move
0000851E C2 D2              		[R2]=R1	// QImode move
000011FB                    	.debug
000011FB 2E 00 73 00        		.dw '.stabn 0x44,0,145,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         35 00 2C 00
         00 00 00 00
0000120F 62 00 00 00        		.dd LM84-_main
00001211 0D 00 0A 00        		.dw 0x0d,0x0a
0000851F                    	.code
                            	LM84:
0000851F 05 93              		R1=BP	// QImode move
00008520 0D 05 12 00        		R2=BP+18
00008522 4F 92              		R1=15	// QImode move
00008523 02 97              		R3=R2	// QImode move
00008524 C3 D2              		[R3]=R1	// QImode move
00001213                    	.debug
00001213 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
00001227 68 00 00 00        		.dd LM85-_main
00001229 0D 00 0A 00        		.dw 0x0d,0x0a
00008525                    	.code
                            	LM85:
00008525 05 95              		R2=BP	// QImode move
00008526 0D 03 12 00        		R1=BP+18
00008528 C5 96              		R3=[BP]	// QImode move
00008529 03 95              		R2=R3	// QImode move
0000852A 01 99              		R4=R1	// QImode move
0000852B C4 B4              		R2&=[R4]	// andqi3_r0R
0000852C C5 D4              		[BP]=R2	// QImode move
0000122B                    	.debug
0000122B 2E 00 73 00        		.dw '.stabn 0x44,0,148,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         38 00 2C 00
         00 00 00 00
0000123F 70 00 00 00        		.dd LM86-_main
00001241 0D 00 0A 00        		.dw 0x0d,0x0a
0000852D                    	.code
                            	LM86:
0000852D 05 93              		R1=BP	// QImode move
0000852E 0D 05 12 00        		R2=BP+18
00008530 09 93 F0 00        		R1=240	// QImode move
00008532 02 97              		R3=R2	// QImode move
00008533 C3 D2              		[R3]=R1	// QImode move
00001243                    	.debug
00001243 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
00001257 77 00 00 00        		.dd LM87-_main
00001259 0D 00 0A 00        		.dw 0x0d,0x0a
00008534                    	.code
                            	LM87:
00008534 05 95              		R2=BP	// QImode move
00008535 0D 03 01 00        		R1=BP+1
00008537 05 97              		R3=BP	// QImode move
00008538 0D 05 12 00        		R2=BP+18
0000853A 05 99              		R4=BP	// QImode move
0000853B 0D 07 01 00        		R3=BP+1
0000853D 02 99              		R4=R2	// QImode move
0000853E C4 98              		R4=[R4]	// QImode move
0000853F 3D D8              		[bp+61]=R4	// QImode move
00008540 3D 94              		R2=[bp+61]	// QImode move
00008541 03 99              		R4=R3	// QImode move
00008542 C4 B4              		R2&=[R4]	// andqi3_r0R
00008543 01 97              		R3=R1	// QImode move
00008544 C3 D4              		[R3]=R2	// QImode move
0000125B                    	.debug
0000125B 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
0000126F 88 00 00 00        		.dd LM88-_main
00001271 0D 00 0A 00        		.dw 0x0d,0x0a
00008545                    	.code
                            	LM88:
00008545 05 95              		R2=BP	// QImode move
00008546 0D 03 01 00        		R1=BP+1
00008548 C5 96              		R3=[BP]	// QImode move
00008549 03 95              		R2=R3	// QImode move
0000854A 01 99              		R4=R1	// QImode move
0000854B C4 A4              		R2|=[R4]	// iorqi3_r0R
0000854C C5 D4              		[BP]=R2	// QImode move
00001273                    	.debug
00001273 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
00001287 90 00 00 00        		.dd LM89-_main
00001289 0D 00 0A 00        		.dw 0x0d,0x0a
0000854D                    	.code
                            	LM89:
0000854D 05 93              		R1=BP	// QImode move
0000854E 0D 05 12 00        		R2=BP+18
00008550 09 93 FF 00        		R1=255	// QImode move
00008552 02 97              		R3=R2	// QImode move
00008553 C3 D2              		[R3]=R1	// QImode move
0000128B                    	.debug
0000128B 2E 00 73 00        		.dw '.stabn 0x44,0,154,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         34 00 2C 00
         00 00 00 00
0000129F 97 00 00 00        		.dd LM90-_main
000012A1 0D 00 0A 00        		.dw 0x0d,0x0a
00008554                    	.code
                            	LM90:
00008554 05 95              		R2=BP	// QImode move
00008555 0D 03 12 00        		R1=BP+18
00008557 C5 96              		R3=[BP]	// QImode move
00008558 03 95              		R2=R3	// QImode move
00008559 01 99              		R4=R1	// QImode move
0000855A C4 84              		R2^=[R4]	// xorqi3_r0R
0000855B C5 D4              		[BP]=R2	// QImode move
000012A3                    	.debug
000012A3 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
000012B7 9F 00 00 00        		.dd LM91-_main
000012B9 0D 00 0A 00        		.dw 0x0d,0x0a
0000855C                    	.code
                            	LM91:
0000855C C5 92              		R1=[BP]	// QImode move
0000855D 09 43 BE 00        		CMP R1,190	// QImode compare
0000855F 02 4E              		JNZ L131	// QImode EQ
00008560 0F 9F 48 86        		PC=L57
                            	L131:
00008562 09 43 BE 00        		CMP R1,190	// QImode compare
00008564 02 AE              		JNG L132	// QImode GT
00008565 0F 9F A5 85        		PC=L123
                            	L132:
00008567 09 43 7D 00        		CMP R1,125	// QImode compare
00008569 02 4E              		JNZ L133	// QImode EQ
0000856A 0F 9F F3 89        		PC=L78
                            	L133:
0000856C 09 43 7D 00        		CMP R1,125	// QImode compare
0000856E 02 AE              		JNG L134	// QImode GT
0000856F 0F 9F 88 85        		PC=L124
                            	L134:
00008571 09 43 77 00        		CMP R1,119	// QImode compare
00008573 02 4E              		JNZ L135	// QImode EQ
00008574 0F 9F 6D 8C        		PC=L120
                            	L135:
00008576 09 43 77 00        		CMP R1,119	// QImode compare
00008578 02 AE              		JNG L136	// QImode GT
00008579 0F 9F 81 85        		PC=L125
                            	L136:
0000857B 40 42              		CMP R1,0	// QImode test
0000857C 02 4E              		JNZ L137	// QImode EQ
0000857D 0F 9F E4 85        		PC=L54
                            	L137:
0000857F 0F 9F 94 8C        		pc=L53	// jump
                            	L125:
00008581 09 43 7B 00        		CMP R1,123	// QImode compare
00008583 02 4E              		JNZ L138	// QImode EQ
00008584 0F 9F 3F 8B        		PC=L100
                            	L138:
00008586 0F 9F 94 8C        		pc=L53	// jump
                            	L124:
00008588 09 43 B7 00        		CMP R1,183	// QImode compare
0000858A 02 4E              		JNZ L139	// QImode EQ
0000858B 0F 9F 45 8C        		PC=L119
                            	L139:
0000858D 09 43 B7 00        		CMP R1,183	// QImode compare
0000858F 02 AE              		JNG L140	// QImode GT
00008590 0F 9F 99 85        		PC=L126
                            	L140:
00008592 09 43 7E 00        		CMP R1,126	// QImode compare
00008594 02 4E              		JNZ L141	// QImode EQ
00008595 0F 9F 79 86        		PC=L58
                            	L141:
00008597 0F 9F 94 8C        		pc=L53	// jump
                            	L126:
00008599 09 43 BB 00        		CMP R1,187	// QImode compare
0000859B 02 4E              		JNZ L142	// QImode EQ
0000859C 0F 9F CD 8A        		PC=L91
                            	L142:
0000859E 09 43 BD 00        		CMP R1,189	// QImode compare
000085A0 02 4E              		JNZ L143	// QImode EQ
000085A1 0F 9F 18 89        		PC=L75
                            	L143:
000085A3 0F 9F 94 8C        		pc=L53	// jump
                            	L123:
000085A5 09 43 DE 00        		CMP R1,222	// QImode compare
000085A7 02 4E              		JNZ L144	// QImode EQ
000085A8 0F 9F 17 86        		PC=L56
                            	L144:
000085AA 09 43 DE 00        		CMP R1,222	// QImode compare
000085AC 02 AE              		JNG L145	// QImode GT
000085AD 0F 9F C7 85        		PC=L127
                            	L145:
000085AF 09 43 DB 00        		CMP R1,219	// QImode compare
000085B1 02 4E              		JNZ L146	// QImode EQ
000085B2 0F 9F 63 8A        		PC=L84
                            	L146:
000085B4 09 43 DB 00        		CMP R1,219	// QImode compare
000085B6 02 AE              		JNG L147	// QImode GT
000085B7 0F 9F C0 85        		PC=L128
                            	L147:
000085B9 09 43 D7 00        		CMP R1,215	// QImode compare
000085BB 02 4E              		JNZ L148	// QImode EQ
000085BC 0F 9F F9 8B        		PC=L114
                            	L148:
000085BE 0F 9F 94 8C        		pc=L53	// jump
                            	L128:
000085C0 09 43 DD 00        		CMP R1,221	// QImode compare
000085C2 02 4E              		JNZ L149	// QImode EQ
000085C3 0F 9F AC 88        		PC=L65
                            	L149:
000085C5 0F 9F 94 8C        		pc=L53	// jump
                            	L127:
000085C7 09 43 EB 00        		CMP R1,235	// QImode compare
000085C9 02 4E              		JNZ L150	// QImode EQ
000085CA 0F 9F 2E 8A        		PC=L81
                            	L150:
000085CC 09 43 EB 00        		CMP R1,235	// QImode compare
000085CE 02 AE              		JNG L151	// QImode GT
000085CF 0F 9F D8 85        		PC=L129
                            	L151:
000085D1 09 43 E7 00        		CMP R1,231	// QImode compare
000085D3 02 4E              		JNZ L152	// QImode EQ
000085D4 0F 9F 9C 8B        		PC=L107
                            	L152:
000085D6 0F 9F 94 8C        		pc=L53	// jump
                            	L129:
000085D8 09 43 ED 00        		CMP R1,237	// QImode compare
000085DA 02 4E              		JNZ L153	// QImode EQ
000085DB 0F 9F AA 86        		PC=L59
                            	L153:
000085DD 09 43 EE 00        		CMP R1,238	// QImode compare
000085DF 02 4E              		JNZ L154	// QImode EQ
000085E0 0F 9F E6 85        		PC=L55
                            	L154:
000085E2 0F 9F 94 8C        		pc=L53	// jump
000012BB                    	.debug
000012BB 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
000012CF 27 01 00 00        		.dd LM92-_main
000012D1 0D 00 0A 00        		.dw 0x0d,0x0a
000085E4                    	.code
                            	LM92:
                            	LBB8:
                            	L54:
000012D3                    	.debug
000012D3 2E 00 73 00        		.dw '.stabn 0x44,0,159,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         39 00 2C 00
         00 00 00 00
000012E7 27 01 00 00        		.dd LM93-_main
000012E9 0D 00 0A 00        		.dw 0x0d,0x0a
000085E4                    	.code
                            	LM93:
000085E4 0F 9F 94 8C        		pc=L53	// jump
                            	L55:
000012EB                    	.debug
000012EB 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
000012FF 29 01 00 00        		.dd LM94-_main
00001301 0D 00 0A 00        		.dw 0x0d,0x0a
000085E6                    	.code
                            	LM94:
000085E6 05 93              		R1=BP	// QImode move
000085E7 0D 05 02 00        		R2=BP+2
000085E9 40 92              		R1=0	// QImode move
000085EA 02 97              		R3=R2	// QImode move
000085EB C3 D2              		[R3]=R1	// QImode move
00001303                    	.debug
00001303 2E 00 73 00        		.dw '.stabn 0x44,0,163,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         33 00 2C 00
         00 00 00 00
00001317 2F 01 00 00        		.dd LM95-_main
00001319 0D 00 0A 00        		.dw 0x0d,0x0a
000085EC                    	.code
                            	LM95:
000085EC 05 93              		R1=BP	// QImode move
000085ED 0D 05 12 00        		R2=BP+18
000085EF 40 92              		R1=0	// QImode move
000085F0 02 99              		R4=R2	// QImode move
000085F1 C4 D2              		[R4]=R1	// QImode move
0000131B                    	.debug
0000131B 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
0000132F 35 01 00 00        		.dd LM96-_main
00001331 0D 00 0A 00        		.dw 0x0d,0x0a
000085F2                    	.code
                            	LM96:
000085F2 05 93              		R1=BP	// QImode move
000085F3 0D 05 18 00        		R2=BP+24
000085F5 41 92              		R1=1	// QImode move
000085F6 02 97              		R3=R2	// QImode move
000085F7 C3 D2              		[R3]=R1	// QImode move
00001333                    	.debug
00001333 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
00001347 3B 01 00 00        		.dd LM97-_main
00001349 0D 00 0A 00        		.dw 0x0d,0x0a
000085F8                    	.code
                            	LM97:
000085F8 05 95              		R2=BP	// QImode move
000085F9 0D 03 19 00        		R1=BP+25
000085FB 05 95              		R2=BP	// QImode move
000085FC 0D 07 19 00        		R3=BP+25
000085FE 03 99              		R4=R3	// QImode move
000085FF C4 94              		R2=[R4]	// QImode move
00008600 0A 07 0A 00        		R3=R2+10
00008602 01 95              		R2=R1	// QImode move
00008603 C2 D6              		[R2]=R3	// QImode move
0000134B                    	.debug
0000134B 2E 00 73 00        		.dw '.stabn 0x44,0,166,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         36 00 2C 00
         00 00 00 00
0000135F 47 01 00 00        		.dd LM98-_main
00001361 0D 00 0A 00        		.dw 0x0d,0x0a
00008604                    	.code
                            	LM98:
00008604 05 93              		R1=BP	// QImode move
00008605 0D 05 19 00        		R2=BP+25
00008607 02 97              		R3=R2	// QImode move
00008608 C3 92              		R1=[R3]	// QImode move
00008609 C8 D2              		[SP--]=R1	// QImode move
0000860A 05 93              		R1=BP	// QImode move
0000860B 0D 05 18 00        		R2=BP+24
0000860D 02 99              		R4=R2	// QImode move
0000860E C4 92              		R1=[R4]	// QImode move
0000860F C8 D2              		[SP--]=R1	// QImode move
00008610 40 F0 6F 82        		call _showled	// call without return value
00008612 42 00              		SP=SP+2
00001363                    	.debug
00001363 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
00001377 56 01 00 00        		.dd LM99-_main
00001379 0D 00 0A 00        		.dw 0x0d,0x0a
00008613                    	.code
                            	LM99:
00008613 40 F0 1E 9F        		call _L_asin	// call with return value
0000137B                    	.debug
0000137B 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
0000138F 58 01 00 00        		.dd LM100-_main
00001391 0D 00 0A 00        		.dw 0x0d,0x0a
00008615                    	.code
                            	LM100:
00008615 0F 9F 94 8C        		pc=L53	// jump
                            	L56:
00001393                    	.debug
00001393 2E 00 73 00        		.dw '.stabn 0x44,0,172,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         32 00 2C 00
         00 00 00 00
000013A7 5A 01 00 00        		.dd LM101-_main
000013A9 0D 00 0A 00        		.dw 0x0d,0x0a
00008617                    	.code
                            	LM101:
00008617 05 93              		R1=BP	// QImode move
00008618 0D 05 03 00        		R2=BP+3
0000861A 41 92              		R1=1	// QImode move
0000861B 02 97              		R3=R2	// QImode move
0000861C C3 D2              		[R3]=R1	// QImode move
000013AB                    	.debug
000013AB 2E 00 73 00        		.dw '.stabn 0x44,0,173,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         33 00 2C 00
         00 00 00 00
000013BF 60 01 00 00        		.dd LM102-_main
000013C1 0D 00 0A 00        		.dw 0x0d,0x0a
0000861D                    	.code
                            	LM102:
0000861D 05 93              		R1=BP	// QImode move
0000861E 0D 05 12 00        		R2=BP+18
00008620 41 92              		R1=1	// QImode move
00008621 02 99              		R4=R2	// QImode move
00008622 C4 D2              		[R4]=R1	// QImode move
000013C3                    	.debug
000013C3 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
000013D7 66 01 00 00        		.dd LM103-_main
000013D9 0D 00 0A 00        		.dw 0x0d,0x0a
00008623                    	.code
                            	LM103:
00008623 05 93              		R1=BP	// QImode move
00008624 0D 05 18 00        		R2=BP+24
00008626 42 92              		R1=2	// QImode move
00008627 02 97              		R3=R2	// QImode move
00008628 C3 D2              		[R3]=R1	// QImode move
000013DB                    	.debug
000013DB 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
000013EF 6C 01 00 00        		.dd LM104-_main
000013F1 0D 00 0A 00        		.dw 0x0d,0x0a
00008629                    	.code
                            	LM104:
00008629 05 95              		R2=BP	// QImode move
0000862A 0D 03 19 00        		R1=BP+25
0000862C 05 95              		R2=BP	// QImode move
0000862D 0D 07 19 00        		R3=BP+25
0000862F 03 99              		R4=R3	// QImode move
00008630 C4 94              		R2=[R4]	// QImode move
00008631 0A 07 14 00        		R3=R2+20
00008633 01 95              		R2=R1	// QImode move
00008634 C2 D6              		[R2]=R3	// QImode move
000013F3                    	.debug
000013F3 2E 00 73 00        		.dw '.stabn 0x44,0,176,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         36 00 2C 00
         00 00 00 00
00001407 78 01 00 00        		.dd LM105-_main
00001409 0D 00 0A 00        		.dw 0x0d,0x0a
00008635                    	.code
                            	LM105:
00008635 05 93              		R1=BP	// QImode move
00008636 0D 05 19 00        		R2=BP+25
00008638 02 97              		R3=R2	// QImode move
00008639 C3 92              		R1=[R3]	// QImode move
0000863A C8 D2              		[SP--]=R1	// QImode move
0000863B 05 93              		R1=BP	// QImode move
0000863C 0D 05 18 00        		R2=BP+24
0000863E 02 99              		R4=R2	// QImode move
0000863F C4 92              		R1=[R4]	// QImode move
00008640 C8 D2              		[SP--]=R1	// QImode move
00008641 40 F0 6F 82        		call _showled	// call without return value
00008643 42 00              		SP=SP+2
0000140B                    	.debug
0000140B 2E 00 73 00        		.dw '.stabn 0x44,0,177,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         37 00 2C 00
         00 00 00 00
0000141F 87 01 00 00        		.dd LM106-_main
00001421 0D 00 0A 00        		.dw 0x0d,0x0a
00008644                    	.code
                            	LM106:
00008644 40 F0 8E 9D        		call _Sanjiaobo	// call with return value
00001423                    	.debug
00001423 2E 00 73 00        		.dw '.stabn 0x44,0,179,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         39 00 2C 00
         00 00 00 00
00001437 89 01 00 00        		.dd LM107-_main
00001439 0D 00 0A 00        		.dw 0x0d,0x0a
00008646                    	.code
                            	LM107:
00008646 0F 9F 94 8C        		pc=L53	// jump
                            	L57:
0000143B                    	.debug
0000143B 2E 00 73 00        		.dw '.stabn 0x44,0,182,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         32 00 2C 00
         00 00 00 00
0000144F 8B 01 00 00        		.dd LM108-_main
00001451 0D 00 0A 00        		.dw 0x0d,0x0a
00008648                    	.code
                            	LM108:
00008648 05 93              		R1=BP	// QImode move
00008649 0D 05 04 00        		R2=BP+4
0000864B 42 92              		R1=2	// QImode move
0000864C 02 97              		R3=R2	// QImode move
0000864D C3 D2              		[R3]=R1	// QImode move
00001453                    	.debug
00001453 2E 00 73 00        		.dw '.stabn 0x44,0,183,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         33 00 2C 00
         00 00 00 00
00001467 91 01 00 00        		.dd LM109-_main
00001469 0D 00 0A 00        		.dw 0x0d,0x0a
0000864E                    	.code
                            	LM109:
0000864E 05 93              		R1=BP	// QImode move
0000864F 0D 05 12 00        		R2=BP+18
00008651 42 92              		R1=2	// QImode move
00008652 02 99              		R4=R2	// QImode move
00008653 C4 D2              		[R4]=R1	// QImode move
0000146B                    	.debug
0000146B 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
0000147F 97 01 00 00        		.dd LM110-_main
00001481 0D 00 0A 00        		.dw 0x0d,0x0a
00008654                    	.code
                            	LM110:
00008654 05 93              		R1=BP	// QImode move
00008655 0D 05 18 00        		R2=BP+24
00008657 43 92              		R1=3	// QImode move
00008658 02 97              		R3=R2	// QImode move
00008659 C3 D2              		[R3]=R1	// QImode move
00001483                    	.debug
00001483 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00001497 9D 01 00 00        		.dd LM111-_main
00001499 0D 00 0A 00        		.dw 0x0d,0x0a
0000865A                    	.code
                            	LM111:
0000865A 05 95              		R2=BP	// QImode move
0000865B 0D 03 19 00        		R1=BP+25
0000865D 05 95              		R2=BP	// QImode move
0000865E 0D 07 19 00        		R3=BP+25
00008660 03 99              		R4=R3	// QImode move
00008661 C4 94              		R2=[R4]	// QImode move
00008662 0A 07 C8 00        		R3=R2+200
00008664 01 95              		R2=R1	// QImode move
00008665 C2 D6              		[R2]=R3	// QImode move
0000149B                    	.debug
0000149B 2E 00 73 00        		.dw '.stabn 0x44,0,186,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         36 00 2C 00
         00 00 00 00
000014AF A9 01 00 00        		.dd LM112-_main
000014B1 0D 00 0A 00        		.dw 0x0d,0x0a
00008666                    	.code
                            	LM112:
00008666 05 93              		R1=BP	// QImode move
00008667 0D 05 19 00        		R2=BP+25
00008669 02 97              		R3=R2	// QImode move
0000866A C3 92              		R1=[R3]	// QImode move
0000866B C8 D2              		[SP--]=R1	// QImode move
0000866C 05 93              		R1=BP	// QImode move
0000866D 0D 05 18 00        		R2=BP+24
0000866F 02 99              		R4=R2	// QImode move
00008670 C4 92              		R1=[R4]	// QImode move
00008671 C8 D2              		[SP--]=R1	// QImode move
00008672 40 F0 6F 82        		call _showled	// call without return value
00008674 42 00              		SP=SP+2
000014B3                    	.debug
000014B3 2E 00 73 00        		.dw '.stabn 0x44,0,187,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         37 00 2C 00
         00 00 00 00
000014C7 B8 01 00 00        		.dd LM113-_main
000014C9 0D 00 0A 00        		.dw 0x0d,0x0a
00008675                    	.code
                            	LM113:
00008675 40 F0 F6 9D        		call _Juchibo	// call with return value
000014CB                    	.debug
000014CB 2E 00 73 00        		.dw '.stabn 0x44,0,189,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         39 00 2C 00
         00 00 00 00
000014DF BA 01 00 00        		.dd LM114-_main
000014E1 0D 00 0A 00        		.dw 0x0d,0x0a
00008677                    	.code
                            	LM114:
00008677 0F 9F 94 8C        		pc=L53	// jump
                            	L58:
000014E3                    	.debug
000014E3 2E 00 73 00        		.dw '.stabn 0x44,0,192,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         32 00 2C 00
         00 00 00 00
000014F7 BC 01 00 00        		.dd LM115-_main
000014F9 0D 00 0A 00        		.dw 0x0d,0x0a
00008679                    	.code
                            	LM115:
00008679 05 93              		R1=BP	// QImode move
0000867A 0D 05 05 00        		R2=BP+5
0000867C 43 92              		R1=3	// QImode move
0000867D 02 97              		R3=R2	// QImode move
0000867E C3 D2              		[R3]=R1	// QImode move
000014FB                    	.debug
000014FB 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
0000150F C2 01 00 00        		.dd LM116-_main
00001511 0D 00 0A 00        		.dw 0x0d,0x0a
0000867F                    	.code
                            	LM116:
0000867F 05 93              		R1=BP	// QImode move
00008680 0D 05 12 00        		R2=BP+18
00008682 43 92              		R1=3	// QImode move
00008683 02 99              		R4=R2	// QImode move
00008684 C4 D2              		[R4]=R1	// QImode move
00001513                    	.debug
00001513 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
00001527 C8 01 00 00        		.dd LM117-_main
00001529 0D 00 0A 00        		.dw 0x0d,0x0a
00008685                    	.code
                            	LM117:
00008685 05 93              		R1=BP	// QImode move
00008686 0D 05 18 00        		R2=BP+24
00008688 44 92              		R1=4	// QImode move
00008689 02 97              		R3=R2	// QImode move
0000868A C3 D2              		[R3]=R1	// QImode move
0000152B                    	.debug
0000152B 2E 00 73 00        		.dw '.stabn 0x44,0,195,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         35 00 2C 00
         00 00 00 00
0000153F CE 01 00 00        		.dd LM118-_main
00001541 0D 00 0A 00        		.dw 0x0d,0x0a
0000868B                    	.code
                            	LM118:
0000868B 05 95              		R2=BP	// QImode move
0000868C 0D 03 19 00        		R1=BP+25
0000868E 05 95              		R2=BP	// QImode move
0000868F 0D 07 19 00        		R3=BP+25
00008691 03 99              		R4=R3	// QImode move
00008692 C4 94              		R2=[R4]	// QImode move
00008693 0A 07 D5 00        		R3=R2+213
00008695 01 95              		R2=R1	// QImode move
00008696 C2 D6              		[R2]=R3	// QImode move
00001543                    	.debug
00001543 2E 00 73 00        		.dw '.stabn 0x44,0,196,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         36 00 2C 00
         00 00 00 00
00001557 DA 01 00 00        		.dd LM119-_main
00001559 0D 00 0A 00        		.dw 0x0d,0x0a
00008697                    	.code
                            	LM119:
00008697 05 93              		R1=BP	// QImode move
00008698 0D 05 19 00        		R2=BP+25
0000869A 02 97              		R3=R2	// QImode move
0000869B C3 92              		R1=[R3]	// QImode move
0000869C C8 D2              		[SP--]=R1	// QImode move
0000869D 05 93              		R1=BP	// QImode move
0000869E 0D 05 18 00        		R2=BP+24
000086A0 02 99              		R4=R2	// QImode move
000086A1 C4 92              		R1=[R4]	// QImode move
000086A2 C8 D2              		[SP--]=R1	// QImode move
000086A3 40 F0 6F 82        		call _showled	// call without return value
000086A5 42 00              		SP=SP+2
0000155B                    	.debug
0000155B 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
0000156F E9 01 00 00        		.dd LM120-_main
00001571 0D 00 0A 00        		.dw 0x0d,0x0a
000086A6                    	.code
                            	LM120:
000086A6 40 F0 2A 9E        		call _Fangbo	// call with return value
00001573                    	.debug
00001573 2E 00 73 00        		.dw '.stabn 0x44,0,199,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         39 00 2C 00
         00 00 00 00
00001587 EB 01 00 00        		.dd LM121-_main
00001589 0D 00 0A 00        		.dw 0x0d,0x0a
000086A8                    	.code
                            	LM121:
000086A8 0F 9F 94 8C        		pc=L53	// jump
                            	L59:
0000158B                    	.debug
0000158B 2E 00 73 00        		.dw '.stabn 0x44,0,202,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         32 00 2C 00
         00 00 00 00
0000159F ED 01 00 00        		.dd LM122-_main
000015A1 0D 00 0A 00        		.dw 0x0d,0x0a
000086AA                    	.code
                            	LM122:
000086AA 05 93              		R1=BP	// QImode move
000086AB 0D 05 06 00        		R2=BP+6
000086AD 44 92              		R1=4	// QImode move
000086AE 02 97              		R3=R2	// QImode move
000086AF C3 D2              		[R3]=R1	// QImode move
000015A3                    	.debug
000015A3 2E 00 73 00        		.dw '.stabn 0x44,0,203,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         33 00 2C 00
         00 00 00 00
000015B7 F3 01 00 00        		.dd LM123-_main
000015B9 0D 00 0A 00        		.dw 0x0d,0x0a
000086B0                    	.code
                            	LM123:
000086B0 05 93              		R1=BP	// QImode move
000086B1 0D 05 12 00        		R2=BP+18
000086B3 44 92              		R1=4	// QImode move
000086B4 02 99              		R4=R2	// QImode move
000086B5 C4 D2              		[R4]=R1	// QImode move
000015BB                    	.debug
000015BB 2E 00 73 00        		.dw '.stabn 0x44,0,204,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         34 00 2C 00
         00 00 00 00
000015CF F9 01 00 00        		.dd LM124-_main
000015D1 0D 00 0A 00        		.dw 0x0d,0x0a
000086B6                    	.code
                            	LM124:
000086B6 05 93              		R1=BP	// QImode move
000086B7 0D 05 18 00        		R2=BP+24
000086B9 45 92              		R1=5	// QImode move
000086BA 02 97              		R3=R2	// QImode move
000086BB C3 D2              		[R3]=R1	// QImode move
000015D3                    	.debug
000015D3 2E 00 73 00        		.dw '.stabn 0x44,0,205,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         35 00 2C 00
         00 00 00 00
000015E7 FF 01 00 00        		.dd LM125-_main
000015E9 0D 00 0A 00        		.dw 0x0d,0x0a
000086BC                    	.code
                            	LM125:
000086BC 05 93              		R1=BP	// QImode move
000086BD 0D 09 19 00        		R4=BP+25
000086BF 1E D8              		[bp+30]=R4	// QImode move
000086C0 05 93              		R1=BP	// QImode move
000086C1 0D 05 19 00        		R2=BP+25
000086C3 02 97              		R3=R2	// QImode move
000086C4 C3 92              		R1=[R3]	// QImode move
000086C5 4A 94              		R2=10	// QImode move
000086C6 C8 D4              		[SP--]=R2	// QImode move
000086C7 C8 D2              		[SP--]=R1	// QImode move
000086C8 40 F0 6A A6        		call __divi1	// call with return value
000086CA 42 00              		SP=SP+2
000086CB 1E 98              		R4=[bp+30]	// QImode move
000086CC C4 D2              		[R4]=R1	// QImode move
000015EB                    	.debug
000015EB 2E 00 73 00        		.dw '.stabn 0x44,0,206,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         36 00 2C 00
         00 00 00 00
000015FF 10 02 00 00        		.dd LM126-_main
00001601 0D 00 0A 00        		.dw 0x0d,0x0a
000086CD                    	.code
                            	LM126:
000086CD 05 93              		R1=BP	// QImode move
000086CE 0D 05 19 00        		R2=BP+25
000086D0 02 97              		R3=R2	// QImode move
000086D1 C3 92              		R1=[R3]	// QImode move
000086D2 C8 D2              		[SP--]=R1	// QImode move
000086D3 05 93              		R1=BP	// QImode move
000086D4 0D 05 18 00        		R2=BP+24
000086D6 02 99              		R4=R2	// QImode move
000086D7 C4 92              		R1=[R4]	// QImode move
000086D8 C8 D2              		[SP--]=R1	// QImode move
000086D9 40 F0 6F 82        		call _showled	// call without return value
000086DB 42 00              		SP=SP+2
00001603                    	.debug
00001603 2E 00 73 00        		.dw '.stabn 0x44,0,207,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         37 00 2C 00
         00 00 00 00
00001617 1F 02 00 00        		.dd LM127-_main
00001619 0D 00 0A 00        		.dw 0x0d,0x0a
000086DC                    	.code
                            	LM127:
000086DC 05 93              		R1=BP	// QImode move
000086DD 0D 05 12 00        		R2=BP+18
000086DF 46 92              		R1=6	// QImode move
000086E0 02 97              		R3=R2	// QImode move
000086E1 C3 D2              		[R3]=R1	// QImode move
0000161B                    	.debug
0000161B 2E 00 73 00        		.dw '.stabn 0x44,0,208,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         38 00 2C 00
         00 00 00 00
0000162F 25 02 00 00        		.dd LM128-_main
00001631 0D 00 0A 00        		.dw 0x0d,0x0a
000086E2                    	.code
                            	LM128:
000086E2 40 92              		R1=0	// HFmode immediate to register move
000086E3 0A 95 00 40        		R2=16384
000086E5 19 D3 AE 01        		[_j]=R1	// HFmode [Label]=RS
000086E7 1A D5 AF 01        		[_j+1]=R2
00001633                    	.debug
00001633 2E 00 73 00        		.dw '.stabn 0x44,0,209,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         39 00 2C 00
         00 00 00 00
00001647 2C 02 00 00        		.dd LM129-_main
00001649 0D 00 0A 00        		.dw 0x0d,0x0a
000086E9                    	.code
                            	LM129:
000086E9 40 92              		R1=0	// HFmode immediate to register move
000086EA 0A 95 00 3F        		R2=16128
000086EC 19 D3 AC 01        		[_h]=R1	// HFmode [Label]=RS
000086EE 1A D5 AD 01        		[_h+1]=R2
0000164B                    	.debug
0000164B 2E 00 73 00        		.dw '.stabn 0x44,0,210,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         30 00 2C 00
         00 00 00 00
0000165F 33 02 00 00        		.dd LM130-_main
00001661 0D 00 0A 00        		.dw 0x0d,0x0a
000086F0                    	.code
                            	LM130:
000086F0 40 92              		R1=0	// HFmode immediate to register move
000086F1 40 94              		R2=0
000086F2 19 D3 AA 01        		[_tt]=R1	// HFmode [Label]=RS
000086F4 1A D5 AB 01        		[_tt+1]=R2
                            	L60:
00001663                    	.debug
00001663 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
00001677 39 02 00 00        		.dd LM131-_main
00001679 0D 00 0A 00        		.dw 0x0d,0x0a
000086F6                    	.code
                            	LM131:
000086F6 11 93 AA 01        		R1=[_tt]	// HFmode RD=[Label]
000086F8 12 95 AB 01        		R2=[_tt+1]
000086FA 0B 97 DA 0F        		R3=4058	// HFmode immediate to register move
000086FC 0C 99 49 40        		R4=16457
000086FE 90 D8              		push R3,R4 to [sp]	// pushhf
000086FF 90 D4              		push R1,R2 to [sp]	// pushhf
00008700 40 F0 5D A1        		call __mulf2	// call with return value
00008702 44 00              		SP=SP+4
00008703 13 97 AE 01        		R3=[_j]	// HFmode RD=[Label]
00008705 14 99 AF 01        		R4=[_j+1]
00008707 90 D8              		push R3,R4 to [sp]	// pushhf
00008708 90 D4              		push R1,R2 to [sp]	// pushhf
00008709 40 F0 79 A0        		call __divf2	// call with return value
0000870B 44 00              		SP=SP+4
0000870C 19 D3 A8 01        		[_t]=R1	// HFmode [Label]=RS
0000870E 1A D5 A9 01        		[_t+1]=R2
0000167B                    	.debug
0000167B 2E 00 73 00        		.dw '.stabn 0x44,0,213,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         33 00 2C 00
         00 00 00 00
0000168F 53 02 00 00        		.dd LM132-_main
00001691 0D 00 0A 00        		.dw 0x0d,0x0a
00008710                    	.code
                            	LM132:
00008710 05 93              		R1=BP	// QImode move
00008711 0D 05 13 00        		R2=BP+19
00008713 02 99              		R4=R2	// QImode move
00008714 C4 92              		R1=[R4]	// QImode move
00008715 C8 D2              		[SP--]=R1	// QImode move
00008716 40 F0 A1 A6        		call __cvi1f2	// call with return value
00008718 41 00              		SP=SP+1
00008719 13 97 AC 01        		R3=[_h]	// HFmode RD=[Label]
0000871B 14 99 AD 01        		R4=[_h+1]
0000871D 90 D8              		push R3,R4 to [sp]	// pushhf
0000871E 90 D4              		push R1,R2 to [sp]	// pushhf
0000871F 40 F0 5D A1        		call __mulf2	// call with return value
00008721 44 00              		SP=SP+4
00008722 1F D2              		[bp+31]=R1	// HFmode [BP+#IM6]=RS
00008723 20 D4              		[bp+32]=R2
00008724 11 93 A8 01        		R1=[_t]	// HFmode RD=[Label]
00008726 12 95 A9 01        		R2=[_t+1]
00008728 90 D4              		push R1,R2 to [sp]	// pushhf
00008729 40 F0 29 A5        		call _sinf	// call with return value
0000872B 42 00              		SP=SP+2
0000872C 90 D4              		push R1,R2 to [sp]	// pushhf
0000872D 1F 92              		R1=[bp+31]	// HFmode RD=[BP+#IM6]
0000872E 20 94              		R2=[bp+32]
0000872F 90 D4              		push R1,R2 to [sp]	// pushhf
00008730 40 F0 5D A1        		call __mulf2	// call with return value
00008732 44 00              		SP=SP+4
00008733 21 D2              		[bp+33]=R1	// HFmode [BP+#IM6]=RS
00008734 22 D4              		[bp+34]=R2
00008735 05 93              		R1=BP	// QImode move
00008736 0D 05 14 00        		R2=BP+20
00008738 02 97              		R3=R2	// QImode move
00008739 C3 92              		R1=[R3]	// QImode move
0000873A C8 D2              		[SP--]=R1	// QImode move
0000873B 40 F0 A1 A6        		call __cvi1f2	// call with return value
0000873D 41 00              		SP=SP+1
0000873E 13 97 AC 01        		R3=[_h]	// HFmode RD=[Label]
00008740 14 99 AD 01        		R4=[_h+1]
00008742 90 D8              		push R3,R4 to [sp]	// pushhf
00008743 90 D4              		push R1,R2 to [sp]	// pushhf
00008744 40 F0 5D A1        		call __mulf2	// call with return value
00008746 44 00              		SP=SP+4
00008747 23 D2              		[bp+35]=R1	// HFmode [BP+#IM6]=RS
00008748 24 D4              		[bp+36]=R2
00008749 11 93 A8 01        		R1=[_t]	// HFmode RD=[Label]
0000874B 12 95 A9 01        		R2=[_t+1]
0000874D 25 D2              		[bp+37]=R1	// HFmode [BP+#IM6]=RS
0000874E 26 D4              		[bp+38]=R2
0000874F 25 96              		R3=[bp+37]	// HFmode RD=[BP+#IM6]
00008750 26 98              		R4=[bp+38]
00008751 90 D8              		push R3,R4 to [sp]	// pushhf
00008752 25 92              		R1=[bp+37]	// HFmode RD=[BP+#IM6]
00008753 26 94              		R2=[bp+38]
00008754 90 D4              		push R1,R2 to [sp]	// pushhf
00008755 40 F0 2D A2        		call __addf2	// call with return value
00008757 44 00              		SP=SP+4
00008758 90 D4              		push R1,R2 to [sp]	// pushhf
00008759 40 F0 29 A5        		call _sinf	// call with return value
0000875B 42 00              		SP=SP+2
0000875C 90 D4              		push R1,R2 to [sp]	// pushhf
0000875D 23 96              		R3=[bp+35]	// HFmode RD=[BP+#IM6]
0000875E 24 98              		R4=[bp+36]
0000875F 90 D8              		push R3,R4 to [sp]	// pushhf
00008760 40 F0 5D A1        		call __mulf2	// call with return value
00008762 44 00              		SP=SP+4
00008763 90 D4              		push R1,R2 to [sp]	// pushhf
00008764 21 92              		R1=[bp+33]	// HFmode RD=[BP+#IM6]
00008765 22 94              		R2=[bp+34]
00008766 90 D4              		push R1,R2 to [sp]	// pushhf
00008767 40 F0 2D A2        		call __addf2	// call with return value
00008769 44 00              		SP=SP+4
0000876A 27 D2              		[bp+39]=R1	// HFmode [BP+#IM6]=RS
0000876B 28 D4              		[bp+40]=R2
0000876C 05 93              		R1=BP	// QImode move
0000876D 0D 05 15 00        		R2=BP+21
0000876F 02 97              		R3=R2	// QImode move
00008770 C3 92              		R1=[R3]	// QImode move
00008771 C8 D2              		[SP--]=R1	// QImode move
00008772 40 F0 A1 A6        		call __cvi1f2	// call with return value
00008774 41 00              		SP=SP+1
00008775 13 97 AC 01        		R3=[_h]	// HFmode RD=[Label]
00008777 14 99 AD 01        		R4=[_h+1]
00008779 90 D8              		push R3,R4 to [sp]	// pushhf
0000877A 90 D4              		push R1,R2 to [sp]	// pushhf
0000877B 40 F0 5D A1        		call __mulf2	// call with return value
0000877D 44 00              		SP=SP+4
0000877E 29 D2              		[bp+41]=R1	// HFmode [BP+#IM6]=RS
0000877F 2A D4              		[bp+42]=R2
00008780 11 93 A8 01        		R1=[_t]	// HFmode RD=[Label]
00008782 12 95 A9 01        		R2=[_t+1]
00008784 40 96              		R3=0	// HFmode immediate to register move
00008785 0C 99 40 40        		R4=16448
00008787 90 D8              		push R3,R4 to [sp]	// pushhf
00008788 90 D4              		push R1,R2 to [sp]	// pushhf
00008789 40 F0 5D A1        		call __mulf2	// call with return value
0000878B 44 00              		SP=SP+4
0000878C 90 D4              		push R1,R2 to [sp]	// pushhf
0000878D 40 F0 29 A5        		call _sinf	// call with return value
0000878F 42 00              		SP=SP+2
00008790 90 D4              		push R1,R2 to [sp]	// pushhf
00008791 29 92              		R1=[bp+41]	// HFmode RD=[BP+#IM6]
00008792 2A 94              		R2=[bp+42]
00008793 90 D4              		push R1,R2 to [sp]	// pushhf
00008794 40 F0 5D A1        		call __mulf2	// call with return value
00008796 44 00              		SP=SP+4
00008797 90 D4              		push R1,R2 to [sp]	// pushhf
00008798 27 96              		R3=[bp+39]	// HFmode RD=[BP+#IM6]
00008799 28 98              		R4=[bp+40]
0000879A 90 D8              		push R3,R4 to [sp]	// pushhf
0000879B 40 F0 2D A2        		call __addf2	// call with return value
0000879D 44 00              		SP=SP+4
0000879E 2B D2              		[bp+43]=R1	// HFmode [BP+#IM6]=RS
0000879F 2C D4              		[bp+44]=R2
000087A0 05 93              		R1=BP	// QImode move
000087A1 0D 05 16 00        		R2=BP+22
000087A3 02 99              		R4=R2	// QImode move
000087A4 C4 92              		R1=[R4]	// QImode move
000087A5 C8 D2              		[SP--]=R1	// QImode move
000087A6 40 F0 A1 A6        		call __cvi1f2	// call with return value
000087A8 41 00              		SP=SP+1
000087A9 13 97 AC 01        		R3=[_h]	// HFmode RD=[Label]
000087AB 14 99 AD 01        		R4=[_h+1]
000087AD 90 D8              		push R3,R4 to [sp]	// pushhf
000087AE 90 D4              		push R1,R2 to [sp]	// pushhf
000087AF 40 F0 5D A1        		call __mulf2	// call with return value
000087B1 44 00              		SP=SP+4
000087B2 2D D2              		[bp+45]=R1	// HFmode [BP+#IM6]=RS
000087B3 2E D4              		[bp+46]=R2
000087B4 11 93 A8 01        		R1=[_t]	// HFmode RD=[Label]
000087B6 12 95 A9 01        		R2=[_t+1]
000087B8 40 96              		R3=0	// HFmode immediate to register move
000087B9 0C 99 80 40        		R4=16512
000087BB 90 D8              		push R3,R4 to [sp]	// pushhf
000087BC 90 D4              		push R1,R2 to [sp]	// pushhf
000087BD 40 F0 5D A1        		call __mulf2	// call with return value
000087BF 44 00              		SP=SP+4
000087C0 90 D4              		push R1,R2 to [sp]	// pushhf
000087C1 40 F0 29 A5        		call _sinf	// call with return value
000087C3 42 00              		SP=SP+2
000087C4 90 D4              		push R1,R2 to [sp]	// pushhf
000087C5 2D 92              		R1=[bp+45]	// HFmode RD=[BP+#IM6]
000087C6 2E 94              		R2=[bp+46]
000087C7 90 D4              		push R1,R2 to [sp]	// pushhf
000087C8 40 F0 5D A1        		call __mulf2	// call with return value
000087CA 44 00              		SP=SP+4
000087CB 90 D4              		push R1,R2 to [sp]	// pushhf
000087CC 2B 96              		R3=[bp+43]	// HFmode RD=[BP+#IM6]
000087CD 2C 98              		R4=[bp+44]
000087CE 90 D8              		push R3,R4 to [sp]	// pushhf
000087CF 40 F0 2D A2        		call __addf2	// call with return value
000087D1 44 00              		SP=SP+4
000087D2 2F D2              		[bp+47]=R1	// HFmode [BP+#IM6]=RS
000087D3 30 D4              		[bp+48]=R2
000087D4 05 93              		R1=BP	// QImode move
000087D5 0D 05 17 00        		R2=BP+23
000087D7 02 99              		R4=R2	// QImode move
000087D8 C4 92              		R1=[R4]	// QImode move
000087D9 C8 D2              		[SP--]=R1	// QImode move
000087DA 40 F0 A1 A6        		call __cvi1f2	// call with return value
000087DC 41 00              		SP=SP+1
000087DD 13 97 AC 01        		R3=[_h]	// HFmode RD=[Label]
000087DF 14 99 AD 01        		R4=[_h+1]
000087E1 90 D8              		push R3,R4 to [sp]	// pushhf
000087E2 90 D4              		push R1,R2 to [sp]	// pushhf
000087E3 40 F0 5D A1        		call __mulf2	// call with return value
000087E5 44 00              		SP=SP+4
000087E6 31 D2              		[bp+49]=R1	// HFmode [BP+#IM6]=RS
000087E7 32 D4              		[bp+50]=R2
000087E8 11 93 A8 01        		R1=[_t]	// HFmode RD=[Label]
000087EA 12 95 A9 01        		R2=[_t+1]
000087EC 40 96              		R3=0	// HFmode immediate to register move
000087ED 0C 99 A0 40        		R4=16544
000087EF 90 D8              		push R3,R4 to [sp]	// pushhf
000087F0 90 D4              		push R1,R2 to [sp]	// pushhf
000087F1 40 F0 5D A1        		call __mulf2	// call with return value
000087F3 44 00              		SP=SP+4
000087F4 90 D4              		push R1,R2 to [sp]	// pushhf
000087F5 40 F0 29 A5        		call _sinf	// call with return value
000087F7 42 00              		SP=SP+2
000087F8 90 D4              		push R1,R2 to [sp]	// pushhf
000087F9 31 92              		R1=[bp+49]	// HFmode RD=[BP+#IM6]
000087FA 32 94              		R2=[bp+50]
000087FB 90 D4              		push R1,R2 to [sp]	// pushhf
000087FC 40 F0 5D A1        		call __mulf2	// call with return value
000087FE 44 00              		SP=SP+4
000087FF 90 D4              		push R1,R2 to [sp]	// pushhf
00008800 2F 96              		R3=[bp+47]	// HFmode RD=[BP+#IM6]
00008801 30 98              		R4=[bp+48]
00008802 90 D8              		push R3,R4 to [sp]	// pushhf
00008803 40 F0 2D A2        		call __addf2	// call with return value
00008805 44 00              		SP=SP+4
00008806 19 D3 A6 01        		[_y]=R1	// HFmode [Label]=RS
00008808 1A D5 A7 01        		[_y+1]=R2
00001693                    	.debug
00001693 2E 00 73 00        		.dw '.stabn 0x44,0,214,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         34 00 2C 00
         00 00 00 00
000016A7 4D 03 00 00        		.dd LM133-_main
000016A9 0D 00 0A 00        		.dw 0x0d,0x0a
0000880A                    	.code
                            	LM133:
0000880A 05 93              		R1=BP	// QImode move
0000880B 0D 09 1C 00        		R4=BP+28
0000880D 33 D8              		[bp+51]=R4	// QImode move
0000880E 11 93 A6 01        		R1=[_y]	// HFmode RD=[Label]
00008810 12 95 A7 01        		R2=[_y+1]
00008812 0B 97 00 C0        		R3=49152	// HFmode immediate to register move
00008814 0C 99 FF 46        		R4=18175
00008816 90 D8              		push R3,R4 to [sp]	// pushhf
00008817 90 D4              		push R1,R2 to [sp]	// pushhf
00008818 40 F0 5D A1        		call __mulf2	// call with return value
0000881A 44 00              		SP=SP+4
0000881B 90 D4              		push R1,R2 to [sp]	// pushhf
0000881C 40 F0 A6 A7        		call __cvf2i1	// call with return value
0000881E 42 00              		SP=SP+2
0000881F 33 94              		R2=[bp+51]	// QImode move
00008820 C2 D2              		[R2]=R1	// QImode move
000016AB                    	.debug
000016AB 2E 00 73 00        		.dw '.stabn 0x44,0,215,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         35 00 2C 00
         00 00 00 00
000016BF 64 03 00 00        		.dd LM134-_main
000016C1 0D 00 0A 00        		.dw 0x0d,0x0a
00008821                    	.code
                            	LM134:
00008821 05 95              		R2=BP	// QImode move
00008822 0D 03 1C 00        		R1=BP+28
00008824 05 95              		R2=BP	// QImode move
00008825 0D 07 1C 00        		R3=BP+28
00008827 03 99              		R4=R3	// QImode move
00008828 C4 94              		R2=[R4]	// QImode move
00008829 0A 87 00 80        		R3=R2^(-32768)
0000882B 01 95              		R2=R1	// QImode move
0000882C C2 D6              		[R2]=R3	// QImode move
000016C3                    	.debug
000016C3 2E 00 73 00        		.dw '.stabn 0x44,0,216,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         36 00 2C 00
         00 00 00 00
000016D7 70 03 00 00        		.dd LM135-_main
000016D9 0D 00 0A 00        		.dw 0x0d,0x0a
0000882D                    	.code
                            	LM135:
0000882D 05 93              		R1=BP	// QImode move
0000882E 0D 05 1C 00        		R2=BP+28
00008830 02 97              		R3=R2	// QImode move
00008831 C3 92              		R1=[R3]	// QImode move
00008832 C8 D2              		[SP--]=R1	// QImode move
00008833 40 F0 95 A8        		call _DAC_FW	// call with return value
00008835 41 00              		SP=SP+1
000016DB                    	.debug
000016DB 2E 00 73 00        		.dw '.stabn 0x44,0,217,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         37 00 2C 00
         00 00 00 00
000016EF 79 03 00 00        		.dd LM136-_main
000016F1 0D 00 0A 00        		.dw 0x0d,0x0a
00008836                    	.code
                            	LM136:
00008836 11 93 AE 01        		R1=[_j]	// HFmode RD=[Label]
00008838 12 95 AF 01        		R2=[_j+1]
0000883A 40 96              		R3=0	// HFmode immediate to register move
0000883B 0C 99 C8 42        		R4=17096
0000883D 90 D8              		push R3,R4 to [sp]	// pushhf
0000883E 90 D4              		push R1,R2 to [sp]	// pushhf
0000883F 40 F0 79 A0        		call __divf2	// call with return value
00008841 44 00              		SP=SP+4
00008842 13 97 AA 01        		R3=[_tt]	// HFmode RD=[Label]
00008844 14 99 AB 01        		R4=[_tt+1]
00008846 90 D4              		push R1,R2 to [sp]	// pushhf
00008847 90 D8              		push R3,R4 to [sp]	// pushhf
00008848 40 F0 2D A2        		call __addf2	// call with return value
0000884A 44 00              		SP=SP+4
0000884B 19 D3 AA 01        		[_tt]=R1	// HFmode [Label]=RS
0000884D 1A D5 AB 01        		[_tt+1]=R2
000016F3                    	.debug
000016F3 2E 00 73 00        		.dw '.stabn 0x44,0,218,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         38 00 2C 00
         00 00 00 00
00001707 92 03 00 00        		.dd LM137-_main
00001709 0D 00 0A 00        		.dw 0x0d,0x0a
0000884F                    	.code
                            	LM137:
0000884F 11 93 AA 01        		R1=[_tt]	// HFmode RD=[Label]
00008851 12 95 AB 01        		R2=[_tt+1]
00008853 90 D4              		push R1,R2 to [sp]	// pushhf
00008854 40 F0 A6 A7        		call __cvf2i1	// call with return value
00008856 42 00              		SP=SP+2
00008857 C8 D2              		[SP--]=R1	// QImode move
00008858 40 F0 A1 A6        		call __cvi1f2	// call with return value
0000885A 41 00              		SP=SP+1
0000885B 34 D2              		[bp+52]=R1	// HFmode [BP+#IM6]=RS
0000885C 35 D4              		[bp+53]=R2
0000885D 11 93 AE 01        		R1=[_j]	// HFmode RD=[Label]
0000885F 12 95 AF 01        		R2=[_j+1]
00008861 36 D2              		[bp+54]=R1	// HFmode [BP+#IM6]=RS
00008862 37 D4              		[bp+55]=R2
00008863 36 96              		R3=[bp+54]	// HFmode RD=[BP+#IM6]
00008864 37 98              		R4=[bp+55]
00008865 90 D8              		push R3,R4 to [sp]	// pushhf
00008866 36 92              		R1=[bp+54]	// HFmode RD=[BP+#IM6]
00008867 37 94              		R2=[bp+55]
00008868 90 D4              		push R1,R2 to [sp]	// pushhf
00008869 40 F0 2D A2        		call __addf2	// call with return value
0000886B 44 00              		SP=SP+4
0000886C 90 D4              		push R1,R2 to [sp]	// pushhf
0000886D 34 96              		R3=[bp+52]	// HFmode RD=[BP+#IM6]
0000886E 35 98              		R4=[bp+53]
0000886F 90 D8              		push R3,R4 to [sp]	// pushhf
00008870 40 F0 D5 A6        		call __cmpf2	// call with return value
00008872 44 00              		SP=SP+4
00008873 41 42              		CMP R1,1	// QImode compare
00008874 02 5E              		JZ L155	// QImode NE
00008875 0F 9F 7D 88        		PC=L61
                            	L155:
00008877 40 92              		R1=0	// HFmode immediate to register move
00008878 40 94              		R2=0
00008879 19 D3 AA 01        		[_tt]=R1	// HFmode [Label]=RS
0000887B 1A D5 AB 01        		[_tt+1]=R2
                            	L61:
0000170B                    	.debug
0000170B 2E 00 73 00        		.dw '.stabn 0x44,0,219,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         39 00 2C 00
         00 00 00 00
0000171F C0 03 00 00        		.dd LM138-_main
00001721 0D 00 0A 00        		.dw 0x0d,0x0a
0000887D                    	.code
                            	LM138:
0000887D 0F 9F F6 86        		pc=L60	// jump
                            	L62:
00001723                    	.debug
00001723 2E 00 73 00        		.dw '.stabn 0x44,0,221,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         31 00 2C 00
         00 00 00 00
00001737 C2 03 00 00        		.dd LM139-_main
00001739 0D 00 0A 00        		.dw 0x0d,0x0a
0000887F                    	.code
                            	LM139:
0000887F 05 95              		R2=BP	// QImode move
00008880 0D 03 1B 00        		R1=BP+27
00008882 05 95              		R2=BP	// QImode move
00008883 0D 07 1A 00        		R3=BP+26
00008885 01 99              		R4=R1	// QImode move
00008886 C4 92              		R1=[R4]	// QImode move
00008887 03 95              		R2=R3	// QImode move
00008888 C2 42              		CMP R1,[R2]	// QImode compare
00008889 02 0E              		JB L156	// QImode GEU
0000888A 0F 9F 9A 88        		PC=L63
                            	L156:
0000888C 05 95              		R2=BP	// QImode move
0000888D 0D 03 1B 00        		R1=BP+27
0000888F 05 95              		R2=BP	// QImode move
00008890 0D 07 1B 00        		R3=BP+27
00008892 03 99              		R4=R3	// QImode move
00008893 C4 94              		R2=[R4]	// QImode move
00008894 12 07 01 02        		R3=R2+[_sanju]	// addqi3_r0R
00008896 01 95              		R2=R1	// QImode move
00008897 C2 D6              		[R2]=R3	// QImode move
00008898 0F 9F A1 88        		pc=L64	// jump
                            	L63:
0000173B                    	.debug
0000173B 2E 00 73 00        		.dw '.stabn 0x44,0,222,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         32 00 2C 00
         00 00 00 00
0000174F DD 03 00 00        		.dd LM140-_main
00001751 0D 00 0A 00        		.dw 0x0d,0x0a
0000889A                    	.code
                            	LM140:
0000889A 05 93              		R1=BP	// QImode move
0000889B 0D 05 1B 00        		R2=BP+27
0000889D 09 93 F3 00        		R1=243	// QImode move
0000889F 02 97              		R3=R2	// QImode move
000088A0 C3 D2              		[R3]=R1	// QImode move
                            	L64:
00001753                    	.debug
00001753 2E 00 73 00        		.dw '.stabn 0x44,0,224,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         34 00 2C 00
         00 00 00 00
00001767 E4 03 00 00        		.dd LM141-_main
00001769 0D 00 0A 00        		.dw 0x0d,0x0a
000088A1                    	.code
                            	LM141:
000088A1 05 93              		R1=BP	// QImode move
000088A2 0D 05 1B 00        		R2=BP+27
000088A4 02 99              		R4=R2	// QImode move
000088A5 C4 92              		R1=[R4]	// QImode move
000088A6 C8 D2              		[SP--]=R1	// QImode move
000088A7 40 F0 95 A8        		call _DAC_FW	// call with return value
000088A9 41 00              		SP=SP+1
0000176B                    	.debug
0000176B 2E 00 73 00        		.dw '.stabn 0x44,0,226,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         36 00 2C 00
         00 00 00 00
0000177F ED 03 00 00        		.dd LM142-_main
00001781 0D 00 0A 00        		.dw 0x0d,0x0a
000088AA                    	.code
                            	LM142:
000088AA 0F 9F 94 8C        		pc=L53	// jump
                            	L65:
00001783                    	.debug
00001783 2E 00 73 00        		.dw '.stabn 0x44,0,229,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         39 00 2C 00
         00 00 00 00
00001797 EF 03 00 00        		.dd LM143-_main
00001799 0D 00 0A 00        		.dw 0x0d,0x0a
000088AC                    	.code
                            	LM143:
000088AC 05 93              		R1=BP	// QImode move
000088AD 0D 05 07 00        		R2=BP+7
000088AF 45 92              		R1=5	// QImode move
000088B0 02 97              		R3=R2	// QImode move
000088B1 C3 D2              		[R3]=R1	// QImode move
0000179B                    	.debug
0000179B 2E 00 73 00        		.dw '.stabn 0x44,0,230,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         30 00 2C 00
         00 00 00 00
000017AF F5 03 00 00        		.dd LM144-_main
000017B1 0D 00 0A 00        		.dw 0x0d,0x0a
000088B2                    	.code
                            	LM144:
000088B2 05 93              		R1=BP	// QImode move
000088B3 0D 05 12 00        		R2=BP+18
000088B5 45 92              		R1=5	// QImode move
000088B6 02 99              		R4=R2	// QImode move
000088B7 C4 D2              		[R4]=R1	// QImode move
000017B3                    	.debug
000017B3 2E 00 73 00        		.dw '.stabn 0x44,0,231,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         31 00 2C 00
         00 00 00 00
000017C7 FB 03 00 00        		.dd LM145-_main
000017C9 0D 00 0A 00        		.dw 0x0d,0x0a
000088B8                    	.code
                            	LM145:
000088B8 05 93              		R1=BP	// QImode move
000088B9 0D 05 18 00        		R2=BP+24
000088BB 45 92              		R1=5	// QImode move
000088BC 02 97              		R3=R2	// QImode move
000088BD C3 D2              		[R3]=R1	// QImode move
000017CB                    	.debug
000017CB 2E 00 73 00        		.dw '.stabn 0x44,0,233,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         33 00 2C 00
         00 00 00 00
000017DF 01 04 00 00        		.dd LM146-_main
000017E1 0D 00 0A 00        		.dw 0x0d,0x0a
000088BE                    	.code
                            	LM146:
000088BE 40 92              		R1=0	// QImode move
000088BF C8 D2              		[SP--]=R1	// QImode move
000088C0 05 93              		R1=BP	// QImode move
000088C1 0D 05 18 00        		R2=BP+24
000088C3 02 99              		R4=R2	// QImode move
000088C4 C4 92              		R1=[R4]	// QImode move
000088C5 C8 D2              		[SP--]=R1	// QImode move
000088C6 40 F0 6F 82        		call _showled	// call without return value
000088C8 42 00              		SP=SP+2
000017E3                    	.debug
000017E3 2E 00 73 00        		.dw '.stabn 0x44,0,234,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         34 00 2C 00
         00 00 00 00
000017F7 0C 04 00 00        		.dd LM147-_main
000017F9 0D 00 0A 00        		.dw 0x0d,0x0a
000088C9                    	.code
                            	LM147:
000088C9 40 F0 2A A8        		call _F_Apwm	// call with return value
                            	L66:
000017FB                    	.debug
000017FB 2E 00 73 00        		.dw '.stabn 0x44,0,237,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         37 00 2C 00
         00 00 00 00
0000180F 0E 04 00 00        		.dd LM148-_main
00001811 0D 00 0A 00        		.dw 0x0d,0x0a
000088CB                    	.code
                            	LM148:
                            	L67:
000088CB 05 95              		R2=BP	// QImode move
000088CC 0D 03 1B 00        		R1=BP+27
000088CE 05 95              		R2=BP	// QImode move
000088CF 0D 07 1B 00        		R3=BP+27
000088D1 03 99              		R4=R3	// QImode move
000088D2 C4 94              		R2=[R4]	// QImode move
000088D3 12 07 01 02        		R3=R2+[_sanju]	// addqi3_r0R
000088D5 01 95              		R2=R1	// QImode move
000088D6 C2 D6              		[R2]=R3	// QImode move
00001813                    	.debug
00001813 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
00001827 1A 04 00 00        		.dd LM149-_main
00001829 0D 00 0A 00        		.dw 0x0d,0x0a
000088D7                    	.code
                            	LM149:
000088D7 05 93              		R1=BP	// QImode move
000088D8 0D 05 1B 00        		R2=BP+27
000088DA 02 97              		R3=R2	// QImode move
000088DB C3 92              		R1=[R3]	// QImode move
000088DC C8 D2              		[SP--]=R1	// QImode move
000088DD 40 F0 95 A8        		call _DAC_FW	// call with return value
000088DF 41 00              		SP=SP+1
                            	L69:
0000182B                    	.debug
0000182B 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
0000183F 23 04 00 00        		.dd LM150-_main
00001841 0D 00 0A 00        		.dw 0x0d,0x0a
000088E0                    	.code
                            	LM150:
000088E0 05 95              		R2=BP	// QImode move
000088E1 0D 03 1B 00        		R1=BP+27
000088E3 05 95              		R2=BP	// QImode move
000088E4 0D 07 1A 00        		R3=BP+26
000088E6 01 99              		R4=R1	// QImode move
000088E7 C4 92              		R1=[R4]	// QImode move
000088E8 03 95              		R2=R3	// QImode move
000088E9 C2 42              		CMP R1,[R2]	// QImode compare
000088EA 02 1E              		JNB L157	// QImode LTU
000088EB 0F 9F EF 88        		PC=L70
                            	L157:
000088ED 0F 9F F1 88        		pc=L68	// jump
                            	L70:
000088EF 0F 9F CB 88        		pc=L67	// jump
                            	L68:
                            	L71:
00001843                    	.debug
00001843 2E 00 73 00        		.dw '.stabn 0x44,0,241,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         31 00 2C 00
         00 00 00 00
00001857 34 04 00 00        		.dd LM151-_main
00001859 0D 00 0A 00        		.dw 0x0d,0x0a
000088F1                    	.code
                            	LM151:
000088F1 05 95              		R2=BP	// QImode move
000088F2 0D 03 1B 00        		R1=BP+27
000088F4 05 95              		R2=BP	// QImode move
000088F5 0D 07 1B 00        		R3=BP+27
000088F7 03 99              		R4=R3	// QImode move
000088F8 C4 94              		R2=[R4]	// QImode move
000088F9 12 27 01 02        		R3=R2-[_sanju]
000088FB 01 95              		R2=R1	// QImode move
000088FC C2 D6              		[R2]=R3	// QImode move
0000185B                    	.debug
0000185B 2E 00 73 00        		.dw '.stabn 0x44,0,242,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         32 00 2C 00
         00 00 00 00
0000186F 40 04 00 00        		.dd LM152-_main
00001871 0D 00 0A 00        		.dw 0x0d,0x0a
000088FD                    	.code
                            	LM152:
000088FD 05 93              		R1=BP	// QImode move
000088FE 0D 05 1B 00        		R2=BP+27
00008900 02 97              		R3=R2	// QImode move
00008901 C3 92              		R1=[R3]	// QImode move
00008902 C8 D2              		[SP--]=R1	// QImode move
00008903 40 F0 95 A8        		call _DAC_FW	// call with return value
00008905 41 00              		SP=SP+1
                            	L73:
00001873                    	.debug
00001873 2E 00 73 00        		.dw '.stabn 0x44,0,243,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         33 00 2C 00
         00 00 00 00
00001887 49 04 00 00        		.dd LM153-_main
00001889 0D 00 0A 00        		.dw 0x0d,0x0a
00008906                    	.code
                            	LM153:
00008906 05 93              		R1=BP	// QImode move
00008907 0D 05 1B 00        		R2=BP+27
00008909 02 99              		R4=R2	// QImode move
0000890A C4 92              		R1=[R4]	// QImode move
0000890B 11 43 01 02        		CMP R1,[_sanju]	// QImode compare
0000890D 02 5E              		JZ L158	// QImode NE
0000890E 0F 9F 12 89        		PC=L74
                            	L158:
00008910 0F 9F 14 89        		pc=L72	// jump
                            	L74:
00008912 0F 9F F1 88        		pc=L71	// jump
                            	L72:
0000188B                    	.debug
0000188B 2E 00 73 00        		.dw '.stabn 0x44,0,244,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         34 00 2C 00
         00 00 00 00
0000189F 57 04 00 00        		.dd LM154-_main
000018A1 0D 00 0A 00        		.dw 0x0d,0x0a
00008914                    	.code
                            	LM154:
00008914 0F 9F CB 88        		pc=L66	// jump
000018A3                    	.debug
000018A3 2E 00 73 00        		.dw '.stabn 0x44,0,245,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         35 00 2C 00
         00 00 00 00
000018B7 59 04 00 00        		.dd LM155-_main
000018B9 0D 00 0A 00        		.dw 0x0d,0x0a
00008916                    	.code
                            	LM155:
00008916 0F 9F 94 8C        		pc=L53	// jump
                            	L75:
000018BB                    	.debug
000018BB 2E 00 73 00        		.dw '.stabn 0x44,0,248,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         38 00 2C 00
         00 00 00 00
000018CF 5B 04 00 00        		.dd LM156-_main
000018D1 0D 00 0A 00        		.dw 0x0d,0x0a
00008918                    	.code
                            	LM156:
00008918 05 93              		R1=BP	// QImode move
00008919 0D 05 08 00        		R2=BP+8
0000891B 46 92              		R1=6	// QImode move
0000891C 02 97              		R3=R2	// QImode move
0000891D C3 D2              		[R3]=R1	// QImode move
000018D3                    	.debug
000018D3 2E 00 73 00        		.dw '.stabn 0x44,0,249,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         39 00 2C 00
         00 00 00 00
000018E7 61 04 00 00        		.dd LM157-_main
000018E9 0D 00 0A 00        		.dw 0x0d,0x0a
0000891E                    	.code
                            	LM157:
0000891E 05 93              		R1=BP	// QImode move
0000891F 0D 05 18 00        		R2=BP+24
00008921 46 92              		R1=6	// QImode move
00008922 02 99              		R4=R2	// QImode move
00008923 C4 D2              		[R4]=R1	// QImode move
000018EB                    	.debug
000018EB 2E 00 73 00        		.dw '.stabn 0x44,0,251,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         31 00 2C 00
         00 00 00 00
000018FF 67 04 00 00        		.dd LM158-_main
00001901 0D 00 0A 00        		.dw 0x0d,0x0a
00008924                    	.code
                            	LM158:
00008924 40 92              		R1=0	// QImode move
00008925 C8 D2              		[SP--]=R1	// QImode move
00008926 05 93              		R1=BP	// QImode move
00008927 0D 05 18 00        		R2=BP+24
00008929 02 97              		R3=R2	// QImode move
0000892A C3 92              		R1=[R3]	// QImode move
0000892B C8 D2              		[SP--]=R1	// QImode move
0000892C 40 F0 6F 82        		call _showled	// call without return value
0000892E 42 00              		SP=SP+2
00001903                    	.debug
00001903 2E 00 73 00        		.dw '.stabn 0x44,0,252,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         32 00 2C 00
         00 00 00 00
00001917 72 04 00 00        		.dd LM159-_main
00001919 0D 00 0A 00        		.dw 0x0d,0x0a
0000892F                    	.code
                            	LM159:
0000892F 09 93 70 0C        		R1=3184	// QImode move
00008931 19 D3 02 02        		[_Mk_Z6]=R1	// QImode move
0000191B                    	.debug
0000191B 2E 00 73 00        		.dw '.stabn 0x44,0,253,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         33 00 2C 00
         00 00 00 00
0000192F 76 04 00 00        		.dd LM160-_main
00001931 0D 00 0A 00        		.dw 0x0d,0x0a
00008933                    	.code
                            	LM160:
00008933 05 93              		R1=BP	// QImode move
00008934 0D 05 12 00        		R2=BP+18
00008936 46 92              		R1=6	// QImode move
00008937 02 99              		R4=R2	// QImode move
00008938 C4 D2              		[R4]=R1	// QImode move
00001933                    	.debug
00001933 2E 00 73 00        		.dw '.stabn 0x44,0,254,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         34 00 2C 00
         00 00 00 00
00001947 7C 04 00 00        		.dd LM161-_main
00001949 0D 00 0A 00        		.dw 0x0d,0x0a
00008939                    	.code
                            	LM161:
00008939 40 92              		R1=0	// HFmode immediate to register move
0000893A 0A 95 00 40        		R2=16384
0000893C 19 D3 AE 01        		[_j]=R1	// HFmode [Label]=RS
0000893E 1A D5 AF 01        		[_j+1]=R2
0000194B                    	.debug
0000194B 2E 00 73 00        		.dw '.stabn 0x44,0,255,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         35 00 2C 00
         00 00 00 00
0000195F 83 04 00 00        		.dd LM162-_main
00001961 0D 00 0A 00        		.dw 0x0d,0x0a
00008940                    	.code
                            	LM162:
00008940 40 92              		R1=0	// HFmode immediate to register move
00008941 0A 95 00 3F        		R2=16128
00008943 19 D3 AC 01        		[_h]=R1	// HFmode [Label]=RS
00008945 1A D5 AD 01        		[_h+1]=R2
00001963                    	.debug
00001963 2E 00 73 00        		.dw '.stabn 0x44,0,256,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         36 00 2C 00
         00 00 00 00
00001977 8A 04 00 00        		.dd LM163-_main
00001979 0D 00 0A 00        		.dw 0x0d,0x0a
00008947                    	.code
                            	LM163:
00008947 40 92              		R1=0	// HFmode immediate to register move
00008948 40 94              		R2=0
00008949 19 D3 AA 01        		[_tt]=R1	// HFmode [Label]=RS
0000894B 1A D5 AB 01        		[_tt+1]=R2
                            	L76:
0000197B                    	.debug
0000197B 2E 00 73 00        		.dw '.stabn 0x44,0,258,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         38 00 2C 00
         00 00 00 00
0000198F 90 04 00 00        		.dd LM164-_main
00001991 0D 00 0A 00        		.dw 0x0d,0x0a
0000894D                    	.code
                            	LM164:
0000894D 11 93 AA 01        		R1=[_tt]	// HFmode RD=[Label]
0000894F 12 95 AB 01        		R2=[_tt+1]
00008951 0B 97 DA 0F        		R3=4058	// HFmode immediate to register move
00008953 0C 99 49 40        		R4=16457
00008955 90 D8              		push R3,R4 to [sp]	// pushhf
00008956 90 D4              		push R1,R2 to [sp]	// pushhf
00008957 40 F0 5D A1        		call __mulf2	// call with return value
00008959 44 00              		SP=SP+4
0000895A 13 97 AE 01        		R3=[_j]	// HFmode RD=[Label]
0000895C 14 99 AF 01        		R4=[_j+1]
0000895E 90 D8              		push R3,R4 to [sp]	// pushhf
0000895F 90 D4              		push R1,R2 to [sp]	// pushhf
00008960 40 F0 79 A0        		call __divf2	// call with return value
00008962 44 00              		SP=SP+4
00008963 19 D3 A8 01        		[_t]=R1	// HFmode [Label]=RS
00008965 1A D5 A9 01        		[_t+1]=R2
00001993                    	.debug
00001993 2E 00 73 00        		.dw '.stabn 0x44,0,259,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         39 00 2C 00
         00 00 00 00
000019A7 AA 04 00 00        		.dd LM165-_main
000019A9 0D 00 0A 00        		.dw 0x0d,0x0a
00008967                    	.code
                            	LM165:
00008967 11 93 A8 01        		R1=[_t]	// HFmode RD=[Label]
00008969 12 95 A9 01        		R2=[_t+1]
0000896B 90 D4              		push R1,R2 to [sp]	// pushhf
0000896C 40 F0 29 A5        		call _sinf	// call with return value
0000896E 42 00              		SP=SP+2
0000896F 13 97 AC 01        		R3=[_h]	// HFmode RD=[Label]
00008971 14 99 AD 01        		R4=[_h+1]
00008973 90 D4              		push R1,R2 to [sp]	// pushhf
00008974 90 D8              		push R3,R4 to [sp]	// pushhf
00008975 40 F0 5D A1        		call __mulf2	// call with return value
00008977 44 00              		SP=SP+4
00008978 19 D3 A6 01        		[_y]=R1	// HFmode [Label]=RS
0000897A 1A D5 A7 01        		[_y+1]=R2
000019AB                    	.debug
000019AB 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
000019BF BF 04 00 00        		.dd LM166-_main
000019C1 0D 00 0A 00        		.dw 0x0d,0x0a
0000897C                    	.code
                            	LM166:
0000897C 05 93              		R1=BP	// QImode move
0000897D 0D 03 1C 00        		R1=BP+28
0000897F 38 D2              		[bp+56]=R1	// QImode move
00008980 11 93 A6 01        		R1=[_y]	// HFmode RD=[Label]
00008982 12 95 A7 01        		R2=[_y+1]
00008984 0B 97 00 C0        		R3=49152	// HFmode immediate to register move
00008986 0C 99 FF 46        		R4=18175
00008988 90 D8              		push R3,R4 to [sp]	// pushhf
00008989 90 D4              		push R1,R2 to [sp]	// pushhf
0000898A 40 F0 5D A1        		call __mulf2	// call with return value
0000898C 44 00              		SP=SP+4
0000898D 90 D4              		push R1,R2 to [sp]	// pushhf
0000898E 40 F0 A6 A7        		call __cvf2i1	// call with return value
00008990 42 00              		SP=SP+2
00008991 38 94              		R2=[bp+56]	// QImode move
00008992 C2 D2              		[R2]=R1	// QImode move
000019C3                    	.debug
000019C3 2E 00 73 00        		.dw '.stabn 0x44,0,261,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         31 00 2C 00
         00 00 00 00
000019D7 D6 04 00 00        		.dd LM167-_main
000019D9 0D 00 0A 00        		.dw 0x0d,0x0a
00008993                    	.code
                            	LM167:
00008993 05 95              		R2=BP	// QImode move
00008994 0D 03 1C 00        		R1=BP+28
00008996 05 95              		R2=BP	// QImode move
00008997 0D 07 1C 00        		R3=BP+28
00008999 03 99              		R4=R3	// QImode move
0000899A C4 94              		R2=[R4]	// QImode move
0000899B 0A 87 00 80        		R3=R2^(-32768)
0000899D 01 95              		R2=R1	// QImode move
0000899E C2 D6              		[R2]=R3	// QImode move
000019DB                    	.debug
000019DB 2E 00 73 00        		.dw '.stabn 0x44,0,262,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         32 00 2C 00
         00 00 00 00
000019EF E2 04 00 00        		.dd LM168-_main
000019F1 0D 00 0A 00        		.dw 0x0d,0x0a
0000899F                    	.code
                            	LM168:
0000899F 05 93              		R1=BP	// QImode move
000089A0 0D 05 1C 00        		R2=BP+28
000089A2 02 97              		R3=R2	// QImode move
000089A3 C3 92              		R1=[R3]	// QImode move
000089A4 C8 D2              		[SP--]=R1	// QImode move
000089A5 40 F0 95 A8        		call _DAC_FW	// call with return value
000089A7 41 00              		SP=SP+1
000019F3                    	.debug
000019F3 2E 00 73 00        		.dw '.stabn 0x44,0,263,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         33 00 2C 00
         00 00 00 00
00001A07 EB 04 00 00        		.dd LM169-_main
00001A09 0D 00 0A 00        		.dw 0x0d,0x0a
000089A8                    	.code
                            	LM169:
000089A8 11 93 AE 01        		R1=[_j]	// HFmode RD=[Label]
000089AA 12 95 AF 01        		R2=[_j+1]
000089AC 40 96              		R3=0	// HFmode immediate to register move
000089AD 0C 99 C8 42        		R4=17096
000089AF 90 D8              		push R3,R4 to [sp]	// pushhf
000089B0 90 D4              		push R1,R2 to [sp]	// pushhf
000089B1 40 F0 79 A0        		call __divf2	// call with return value
000089B3 44 00              		SP=SP+4
000089B4 13 97 AA 01        		R3=[_tt]	// HFmode RD=[Label]
000089B6 14 99 AB 01        		R4=[_tt+1]
000089B8 90 D4              		push R1,R2 to [sp]	// pushhf
000089B9 90 D8              		push R3,R4 to [sp]	// pushhf
000089BA 40 F0 2D A2        		call __addf2	// call with return value
000089BC 44 00              		SP=SP+4
000089BD 19 D3 AA 01        		[_tt]=R1	// HFmode [Label]=RS
000089BF 1A D5 AB 01        		[_tt+1]=R2
00001A0B                    	.debug
00001A0B 2E 00 73 00        		.dw '.stabn 0x44,0,264,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         34 00 2C 00
         00 00 00 00
00001A1F 04 05 00 00        		.dd LM170-_main
00001A21 0D 00 0A 00        		.dw 0x0d,0x0a
000089C1                    	.code
                            	LM170:
000089C1 11 93 AA 01        		R1=[_tt]	// HFmode RD=[Label]
000089C3 12 95 AB 01        		R2=[_tt+1]
000089C5 90 D4              		push R1,R2 to [sp]	// pushhf
000089C6 40 F0 A6 A7        		call __cvf2i1	// call with return value
000089C8 42 00              		SP=SP+2
000089C9 C8 D2              		[SP--]=R1	// QImode move
000089CA 40 F0 A1 A6        		call __cvi1f2	// call with return value
000089CC 41 00              		SP=SP+1
000089CD 39 D2              		[bp+57]=R1	// HFmode [BP+#IM6]=RS
000089CE 3A D4              		[bp+58]=R2
000089CF 11 93 AE 01        		R1=[_j]	// HFmode RD=[Label]
000089D1 12 95 AF 01        		R2=[_j+1]
000089D3 3B D2              		[bp+59]=R1	// HFmode [BP+#IM6]=RS
000089D4 3C D4              		[bp+60]=R2
000089D5 3B 96              		R3=[bp+59]	// HFmode RD=[BP+#IM6]
000089D6 3C 98              		R4=[bp+60]
000089D7 90 D8              		push R3,R4 to [sp]	// pushhf
000089D8 3B 92              		R1=[bp+59]	// HFmode RD=[BP+#IM6]
000089D9 3C 94              		R2=[bp+60]
000089DA 90 D4              		push R1,R2 to [sp]	// pushhf
000089DB 40 F0 2D A2        		call __addf2	// call with return value
000089DD 44 00              		SP=SP+4
000089DE 90 D4              		push R1,R2 to [sp]	// pushhf
000089DF 39 96              		R3=[bp+57]	// HFmode RD=[BP+#IM6]
000089E0 3A 98              		R4=[bp+58]
000089E1 90 D8              		push R3,R4 to [sp]	// pushhf
000089E2 40 F0 D5 A6        		call __cmpf2	// call with return value
000089E4 44 00              		SP=SP+4
000089E5 41 42              		CMP R1,1	// QImode compare
000089E6 02 5E              		JZ L159	// QImode NE
000089E7 0F 9F EF 89        		PC=L77
                            	L159:
000089E9 40 92              		R1=0	// HFmode immediate to register move
000089EA 40 94              		R2=0
000089EB 19 D3 AA 01        		[_tt]=R1	// HFmode [Label]=RS
000089ED 1A D5 AB 01        		[_tt+1]=R2
                            	L77:
00001A23                    	.debug
00001A23 2E 00 73 00        		.dw '.stabn 0x44,0,265,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         35 00 2C 00
         00 00 00 00
00001A37 32 05 00 00        		.dd LM171-_main
00001A39 0D 00 0A 00        		.dw 0x0d,0x0a
000089EF                    	.code
                            	LM171:
000089EF 0F 9F 4D 89        		pc=L76	// jump
00001A3B                    	.debug
00001A3B 2E 00 73 00        		.dw '.stabn 0x44,0,266,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         36 00 2C 00
         00 00 00 00
00001A4F 34 05 00 00        		.dd LM172-_main
00001A51 0D 00 0A 00        		.dw 0x0d,0x0a
000089F1                    	.code
                            	LM172:
000089F1 0F 9F 94 8C        		pc=L53	// jump
                            	L78:
00001A53                    	.debug
00001A53 2E 00 73 00        		.dw '.stabn 0x44,0,269,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         39 00 2C 00
         00 00 00 00
00001A67 36 05 00 00        		.dd LM173-_main
00001A69 0D 00 0A 00        		.dw 0x0d,0x0a
000089F3                    	.code
                            	LM173:
000089F3 05 93              		R1=BP	// QImode move
000089F4 0D 05 09 00        		R2=BP+9
000089F6 47 92              		R1=7	// QImode move
000089F7 02 99              		R4=R2	// QImode move
000089F8 C4 D2              		[R4]=R1	// QImode move
00001A6B                    	.debug
00001A6B 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
00001A7F 3C 05 00 00        		.dd LM174-_main
00001A81 0D 00 0A 00        		.dw 0x0d,0x0a
000089F9                    	.code
                            	LM174:
000089F9 05 93              		R1=BP	// QImode move
000089FA 0D 05 12 00        		R2=BP+18
000089FC 47 92              		R1=7	// QImode move
000089FD 02 97              		R3=R2	// QImode move
000089FE C3 D2              		[R3]=R1	// QImode move
00001A83                    	.debug
00001A83 2E 00 73 00        		.dw '.stabn 0x44,0,271,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         31 00 2C 00
         00 00 00 00
00001A97 42 05 00 00        		.dd LM175-_main
00001A99 0D 00 0A 00        		.dw 0x0d,0x0a
000089FF                    	.code
                            	LM175:
000089FF 05 93              		R1=BP	// QImode move
00008A00 0D 05 08 00        		R2=BP+8
00008A02 46 92              		R1=6	// QImode move
00008A03 02 99              		R4=R2	// QImode move
00008A04 C4 D2              		[R4]=R1	// QImode move
00001A9B                    	.debug
00001A9B 2E 00 73 00        		.dw '.stabn 0x44,0,272,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         32 00 2C 00
         00 00 00 00
00001AAF 48 05 00 00        		.dd LM176-_main
00001AB1 0D 00 0A 00        		.dw 0x0d,0x0a
00008A05                    	.code
                            	LM176:
00008A05 05 93              		R1=BP	// QImode move
00008A06 0D 05 18 00        		R2=BP+24
00008A08 47 92              		R1=7	// QImode move
00008A09 02 97              		R3=R2	// QImode move
00008A0A C3 D2              		[R3]=R1	// QImode move
00001AB3                    	.debug
00001AB3 2E 00 73 00        		.dw '.stabn 0x44,0,274,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         34 00 2C 00
         00 00 00 00
00001AC7 4E 05 00 00        		.dd LM177-_main
00001AC9 0D 00 0A 00        		.dw 0x0d,0x0a
00008A0B                    	.code
                            	LM177:
00008A0B 40 92              		R1=0	// QImode move
00008A0C C8 D2              		[SP--]=R1	// QImode move
00008A0D 05 93              		R1=BP	// QImode move
00008A0E 0D 05 18 00        		R2=BP+24
00008A10 02 99              		R4=R2	// QImode move
00008A11 C4 92              		R1=[R4]	// QImode move
00008A12 C8 D2              		[SP--]=R1	// QImode move
00008A13 40 F0 6F 82        		call _showled	// call without return value
00008A15 42 00              		SP=SP+2
00001ACB                    	.debug
00001ACB 2E 00 73 00        		.dw '.stabn 0x44,0,275,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         35 00 2C 00
         00 00 00 00
00001ADF 59 05 00 00        		.dd LM178-_main
00001AE1 0D 00 0A 00        		.dw 0x0d,0x0a
00008A16                    	.code
                            	LM178:
00008A16 11 93 F2 01        		R1=[_Mk_Z]	// QImode move
00008A18 09 43 DB 05        		CMP R1,1499	// QImode compare
00008A1A 02 8E              		JNA L160	// QImode GTU
00008A1B 0F 9F 25 8A        		PC=L79
                            	L160:
00008A1D 11 93 F2 01        		R1=[_Mk_Z]	// QImode move
00008A1F 0A 95 64 00        		R2=100	// QImode move
00008A21 19 05 F2 01        		[_Mk_Z]=R1+R2
00008A23 0F 9F 28 8A        		pc=L80	// jump
                            	L79:
00001AE3                    	.debug
00001AE3 2E 00 73 00        		.dw '.stabn 0x44,0,276,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         36 00 2C 00
         00 00 00 00
00001AF7 68 05 00 00        		.dd LM179-_main
00001AF9 0D 00 0A 00        		.dw 0x0d,0x0a
00008A25                    	.code
                            	LM179:
00008A25 40 92              		R1=0	// QImode move
00008A26 19 D3 F2 01        		[_Mk_Z]=R1	// QImode move
                            	L80:
00001AFB                    	.debug
00001AFB 2E 00 73 00        		.dw '.stabn 0x44,0,277,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         37 00 2C 00
         00 00 00 00
00001B0F 6B 05 00 00        		.dd LM180-_main
00001B11 0D 00 0A 00        		.dw 0x0d,0x0a
00008A28                    	.code
                            	LM180:
00008A28 09 93 B0 0C        		R1=3248	// QImode move
00008A2A 19 D3 02 02        		[_Mk_Z6]=R1	// QImode move
00001B13                    	.debug
00001B13 2E 00 73 00        		.dw '.stabn 0x44,0,278,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         38 00 2C 00
         00 00 00 00
00001B27 6F 05 00 00        		.dd LM181-_main
00001B29 0D 00 0A 00        		.dw 0x0d,0x0a
00008A2C                    	.code
                            	LM181:
00008A2C 0F 9F 94 8C        		pc=L53	// jump
                            	L81:
00001B2B                    	.debug
00001B2B 2E 00 73 00        		.dw '.stabn 0x44,0,281,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         31 00 2C 00
         00 00 00 00
00001B3F 71 05 00 00        		.dd LM182-_main
00001B41 0D 00 0A 00        		.dw 0x0d,0x0a
00008A2E                    	.code
                            	LM182:
00008A2E 05 93              		R1=BP	// QImode move
00008A2F 0D 05 0A 00        		R2=BP+10
00008A31 48 92              		R1=8	// QImode move
00008A32 02 97              		R3=R2	// QImode move
00008A33 C3 D2              		[R3]=R1	// QImode move
00001B43                    	.debug
00001B43 2E 00 73 00        		.dw '.stabn 0x44,0,282,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         32 00 2C 00
         00 00 00 00
00001B57 77 05 00 00        		.dd LM183-_main
00001B59 0D 00 0A 00        		.dw 0x0d,0x0a
00008A34                    	.code
                            	LM183:
00008A34 05 93              		R1=BP	// QImode move
00008A35 0D 05 12 00        		R2=BP+18
00008A37 48 92              		R1=8	// QImode move
00008A38 02 99              		R4=R2	// QImode move
00008A39 C4 D2              		[R4]=R1	// QImode move
00001B5B                    	.debug
00001B5B 2E 00 73 00        		.dw '.stabn 0x44,0,283,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         33 00 2C 00
         00 00 00 00
00001B6F 7D 05 00 00        		.dd LM184-_main
00001B71 0D 00 0A 00        		.dw 0x0d,0x0a
00008A3A                    	.code
                            	LM184:
00008A3A 05 93              		R1=BP	// QImode move
00008A3B 0D 05 18 00        		R2=BP+24
00008A3D 48 92              		R1=8	// QImode move
00008A3E 02 97              		R3=R2	// QImode move
00008A3F C3 D2              		[R3]=R1	// QImode move
00001B73                    	.debug
00001B73 2E 00 73 00        		.dw '.stabn 0x44,0,285,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         35 00 2C 00
         00 00 00 00
00001B87 83 05 00 00        		.dd LM185-_main
00001B89 0D 00 0A 00        		.dw 0x0d,0x0a
00008A40                    	.code
                            	LM185:
00008A40 40 92              		R1=0	// QImode move
00008A41 C8 D2              		[SP--]=R1	// QImode move
00008A42 05 93              		R1=BP	// QImode move
00008A43 0D 05 18 00        		R2=BP+24
00008A45 02 99              		R4=R2	// QImode move
00008A46 C4 92              		R1=[R4]	// QImode move
00008A47 C8 D2              		[SP--]=R1	// QImode move
00008A48 40 F0 6F 82        		call _showled	// call without return value
00008A4A 42 00              		SP=SP+2
00001B8B                    	.debug
00001B8B 2E 00 73 00        		.dw '.stabn 0x44,0,286,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         36 00 2C 00
         00 00 00 00
00001B9F 8E 05 00 00        		.dd LM186-_main
00001BA1 0D 00 0A 00        		.dw 0x0d,0x0a
00008A4B                    	.code
                            	LM186:
00008A4B 09 93 F0 0C        		R1=3312	// QImode move
00008A4D 19 D3 02 02        		[_Mk_Z6]=R1	// QImode move
00001BA3                    	.debug
00001BA3 2E 00 73 00        		.dw '.stabn 0x44,0,287,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         37 00 2C 00
         00 00 00 00
00001BB7 92 05 00 00        		.dd LM187-_main
00001BB9 0D 00 0A 00        		.dw 0x0d,0x0a
00008A4F                    	.code
                            	LM187:
00008A4F 11 93 FD 01        		R1=[_Mk_F5]	// QImode move
00008A51 09 43 DB 05        		CMP R1,1499	// QImode compare
00008A53 02 8E              		JNA L161	// QImode GTU
00008A54 0F 9F 5E 8A        		PC=L82
                            	L161:
00008A56 11 93 FD 01        		R1=[_Mk_F5]	// QImode move
00008A58 0A 95 64 00        		R2=100	// QImode move
00008A5A 19 05 FD 01        		[_Mk_F5]=R1+R2
00008A5C 0F 9F 61 8A        		pc=L83	// jump
                            	L82:
00001BBB                    	.debug
00001BBB 2E 00 73 00        		.dw '.stabn 0x44,0,288,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         38 00 2C 00
         00 00 00 00
00001BCF A1 05 00 00        		.dd LM188-_main
00001BD1 0D 00 0A 00        		.dw 0x0d,0x0a
00008A5E                    	.code
                            	LM188:
00008A5E 40 92              		R1=0	// QImode move
00008A5F 19 D3 FD 01        		[_Mk_F5]=R1	// QImode move
                            	L83:
00001BD3                    	.debug
00001BD3 2E 00 73 00        		.dw '.stabn 0x44,0,291,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         31 00 2C 00
         00 00 00 00
00001BE7 A4 05 00 00        		.dd LM189-_main
00001BE9 0D 00 0A 00        		.dw 0x0d,0x0a
00008A61                    	.code
                            	LM189:
00008A61 0F 9F 94 8C        		pc=L53	// jump
                            	L84:
00001BEB                    	.debug
00001BEB 2E 00 73 00        		.dw '.stabn 0x44,0,294,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         34 00 2C 00
         00 00 00 00
00001BFF A6 05 00 00        		.dd LM190-_main
00001C01 0D 00 0A 00        		.dw 0x0d,0x0a
00008A63                    	.code
                            	LM190:
00008A63 05 93              		R1=BP	// QImode move
00008A64 0D 05 0B 00        		R2=BP+11
00008A66 49 92              		R1=9	// QImode move
00008A67 02 97              		R3=R2	// QImode move
00008A68 C3 D2              		[R3]=R1	// QImode move
00001C03                    	.debug
00001C03 2E 00 73 00        		.dw '.stabn 0x44,0,295,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         35 00 2C 00
         00 00 00 00
00001C17 AC 05 00 00        		.dd LM191-_main
00001C19 0D 00 0A 00        		.dw 0x0d,0x0a
00008A69                    	.code
                            	LM191:
00008A69 05 93              		R1=BP	// QImode move
00008A6A 0D 05 12 00        		R2=BP+18
00008A6C 49 92              		R1=9	// QImode move
00008A6D 02 99              		R4=R2	// QImode move
00008A6E C4 D2              		[R4]=R1	// QImode move
00001C1B                    	.debug
00001C1B 2E 00 73 00        		.dw '.stabn 0x44,0,296,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         36 00 2C 00
         00 00 00 00
00001C2F B2 05 00 00        		.dd LM192-_main
00001C31 0D 00 0A 00        		.dw 0x0d,0x0a
00008A6F                    	.code
                            	LM192:
00008A6F 05 93              		R1=BP	// QImode move
00008A70 0D 05 18 00        		R2=BP+24
00008A72 49 92              		R1=9	// QImode move
00008A73 02 97              		R3=R2	// QImode move
00008A74 C3 D2              		[R3]=R1	// QImode move
00001C33                    	.debug
00001C33 2E 00 73 00        		.dw '.stabn 0x44,0,298,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         38 00 2C 00
         00 00 00 00
00001C47 B8 05 00 00        		.dd LM193-_main
00001C49 0D 00 0A 00        		.dw 0x0d,0x0a
00008A75                    	.code
                            	LM193:
00008A75 40 92              		R1=0	// QImode move
00008A76 C8 D2              		[SP--]=R1	// QImode move
00008A77 05 93              		R1=BP	// QImode move
00008A78 0D 05 18 00        		R2=BP+24
00008A7A 02 99              		R4=R2	// QImode move
00008A7B C4 92              		R1=[R4]	// QImode move
00008A7C C8 D2              		[SP--]=R1	// QImode move
00008A7D 40 F0 6F 82        		call _showled	// call without return value
00008A7F 42 00              		SP=SP+2
00001C4B                    	.debug
00001C4B 2E 00 73 00        		.dw '.stabn 0x44,0,299,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         39 00 2C 00
         00 00 00 00
00001C5F C3 05 00 00        		.dd LM194-_main
00001C61 0D 00 0A 00        		.dw 0x0d,0x0a
00008A80                    	.code
                            	LM194:
00008A80 09 93 F0 0D        		R1=3568	// QImode move
00008A82 19 D3 02 02        		[_Mk_Z6]=R1	// QImode move
00001C63                    	.debug
00001C63 2E 00 73 00        		.dw '.stabn 0x44,0,300,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         30 00 2C 00
         00 00 00 00
00001C77 C7 05 00 00        		.dd LM195-_main
00001C79 0D 00 0A 00        		.dw 0x0d,0x0a
00008A84                    	.code
                            	LM195:
00008A84 11 93 FB 01        		R1=[_Mk_F4]	// QImode move
00008A86 09 43 DB 05        		CMP R1,1499	// QImode compare
00008A88 02 8E              		JNA L162	// QImode GTU
00008A89 0F 9F 93 8A        		PC=L85
                            	L162:
00008A8B 11 93 FB 01        		R1=[_Mk_F4]	// QImode move
00008A8D 0A 95 64 00        		R2=100	// QImode move
00008A8F 19 05 F3 01        		[_Mk_F]=R1+R2
00008A91 0F 9F 96 8A        		pc=L86	// jump
                            	L85:
00001C7B                    	.debug
00001C7B 2E 00 73 00        		.dw '.stabn 0x44,0,301,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         31 00 2C 00
         00 00 00 00
00001C8F D6 05 00 00        		.dd LM196-_main
00001C91 0D 00 0A 00        		.dw 0x0d,0x0a
00008A93                    	.code
                            	LM196:
00008A93 40 92              		R1=0	// QImode move
00008A94 19 D3 FB 01        		[_Mk_F4]=R1	// QImode move
                            	L86:
00001C93                    	.debug
00001C93 2E 00 73 00        		.dw '.stabn 0x44,0,302,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         32 00 2C 00
         00 00 00 00
00001CA7 D9 05 00 00        		.dd LM197-_main
00001CA9 0D 00 0A 00        		.dw 0x0d,0x0a
00008A96                    	.code
                            	LM197:
00008A96 05 93              		R1=BP	// QImode move
00008A97 0D 05 1A 00        		R2=BP+26
00008A99 02 97              		R3=R2	// QImode move
00008A9A C3 92              		R1=[R3]	// QImode move
00008A9B 09 43 FE FF        		CMP R1,(-2)	// QImode compare
00008A9D 02 8E              		JNA L163	// QImode GTU
00008A9E 0F 9F AE 8A        		PC=L87
                            	L163:
00008AA0 05 95              		R2=BP	// QImode move
00008AA1 0D 03 1A 00        		R1=BP+26
00008AA3 05 95              		R2=BP	// QImode move
00008AA4 0D 07 1A 00        		R3=BP+26
00008AA6 03 99              		R4=R3	// QImode move
00008AA7 C4 94              		R2=[R4]	// QImode move
00008AA8 0A 07 00 10        		R3=R2+4096
00008AAA 01 95              		R2=R1	// QImode move
00008AAB C2 D6              		[R2]=R3	// QImode move
00008AAC 0F 9F B4 8A        		pc=L88	// jump
                            	L87:
00001CAB                    	.debug
00001CAB 2E 00 73 00        		.dw '.stabn 0x44,0,303,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         33 00 2C 00
         00 00 00 00
00001CBF F1 05 00 00        		.dd LM198-_main
00001CC1 0D 00 0A 00        		.dw 0x0d,0x0a
00008AAE                    	.code
                            	LM198:
00008AAE 05 93              		R1=BP	// QImode move
00008AAF 0D 05 1A 00        		R2=BP+26
00008AB1 40 92              		R1=0	// QImode move
00008AB2 02 97              		R3=R2	// QImode move
00008AB3 C3 D2              		[R3]=R1	// QImode move
                            	L88:
00001CC3                    	.debug
00001CC3 2E 00 73 00        		.dw '.stabn 0x44,0,304,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         34 00 2C 00
         00 00 00 00
00001CD7 F7 05 00 00        		.dd LM199-_main
00001CD9 0D 00 0A 00        		.dw 0x0d,0x0a
00008AB4                    	.code
                            	LM199:
00008AB4 05 93              		R1=BP	// QImode move
00008AB5 0D 05 13 00        		R2=BP+19
00008AB7 02 99              		R4=R2	// QImode move
00008AB8 C4 92              		R1=[R4]	// QImode move
00008AB9 40 42              		CMP R1,0	// QImode test
00008ABA 02 5E              		JZ L164	// QImode NE
00008ABB 0F 9F C5 8A        		PC=L89
                            	L164:
00008ABD 05 93              		R1=BP	// QImode move
00008ABE 0D 05 13 00        		R2=BP+19
00008AC0 41 92              		R1=1	// QImode move
00008AC1 02 97              		R3=R2	// QImode move
00008AC2 C3 D2              		[R3]=R1	// QImode move
00008AC3 0F 9F CB 8A        		pc=L90	// jump
                            	L89:
00001CDB                    	.debug
00001CDB 2E 00 73 00        		.dw '.stabn 0x44,0,305,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         35 00 2C 00
         00 00 00 00
00001CEF 08 06 00 00        		.dd LM200-_main
00001CF1 0D 00 0A 00        		.dw 0x0d,0x0a
00008AC5                    	.code
                            	LM200:
00008AC5 05 93              		R1=BP	// QImode move
00008AC6 0D 05 13 00        		R2=BP+19
00008AC8 40 92              		R1=0	// QImode move
00008AC9 02 99              		R4=R2	// QImode move
00008ACA C4 D2              		[R4]=R1	// QImode move
                            	L90:
00001CF3                    	.debug
00001CF3 2E 00 73 00        		.dw '.stabn 0x44,0,306,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         36 00 2C 00
         00 00 00 00
00001D07 0E 06 00 00        		.dd LM201-_main
00001D09 0D 00 0A 00        		.dw 0x0d,0x0a
00008ACB                    	.code
                            	LM201:
00008ACB 0F 9F 94 8C        		pc=L53	// jump
                            	L91:
00001D0B                    	.debug
00001D0B 2E 00 73 00        		.dw '.stabn 0x44,0,309,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         39 00 2C 00
         00 00 00 00
00001D1F 10 06 00 00        		.dd LM202-_main
00001D21 0D 00 0A 00        		.dw 0x0d,0x0a
00008ACD                    	.code
                            	LM202:
00008ACD 05 93              		R1=BP	// QImode move
00008ACE 0D 05 0C 00        		R2=BP+12
00008AD0 4A 92              		R1=10	// QImode move
00008AD1 02 97              		R3=R2	// QImode move
00008AD2 C3 D2              		[R3]=R1	// QImode move
00001D23                    	.debug
00001D23 2E 00 73 00        		.dw '.stabn 0x44,0,310,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         30 00 2C 00
         00 00 00 00
00001D37 16 06 00 00        		.dd LM203-_main
00001D39 0D 00 0A 00        		.dw 0x0d,0x0a
00008AD3                    	.code
                            	LM203:
00008AD3 05 93              		R1=BP	// QImode move
00008AD4 0D 05 12 00        		R2=BP+18
00008AD6 4A 92              		R1=10	// QImode move
00008AD7 02 99              		R4=R2	// QImode move
00008AD8 C4 D2              		[R4]=R1	// QImode move
00001D3B                    	.debug
00001D3B 2E 00 73 00        		.dw '.stabn 0x44,0,311,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         31 00 2C 00
         00 00 00 00
00001D4F 1C 06 00 00        		.dd LM204-_main
00001D51 0D 00 0A 00        		.dw 0x0d,0x0a
00008AD9                    	.code
                            	LM204:
00008AD9 05 93              		R1=BP	// QImode move
00008ADA 0D 05 18 00        		R2=BP+24
00008ADC 4A 92              		R1=10	// QImode move
00008ADD 02 97              		R3=R2	// QImode move
00008ADE C3 D2              		[R3]=R1	// QImode move
00001D53                    	.debug
00001D53 2E 00 73 00        		.dw '.stabn 0x44,0,313,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         33 00 2C 00
         00 00 00 00
00001D67 22 06 00 00        		.dd LM205-_main
00001D69 0D 00 0A 00        		.dw 0x0d,0x0a
00008ADF                    	.code
                            	LM205:
00008ADF 40 92              		R1=0	// QImode move
00008AE0 C8 D2              		[SP--]=R1	// QImode move
00008AE1 05 93              		R1=BP	// QImode move
00008AE2 0D 05 18 00        		R2=BP+24
00008AE4 02 99              		R4=R2	// QImode move
00008AE5 C4 92              		R1=[R4]	// QImode move
00008AE6 C8 D2              		[SP--]=R1	// QImode move
00008AE7 40 F0 6F 82        		call _showled	// call without return value
00008AE9 42 00              		SP=SP+2
00001D6B                    	.debug
00001D6B 2E 00 73 00        		.dw '.stabn 0x44,0,314,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         34 00 2C 00
         00 00 00 00
00001D7F 2D 06 00 00        		.dd LM206-_main
00001D81 0D 00 0A 00        		.dw 0x0d,0x0a
00008AEA                    	.code
                            	LM206:
00008AEA 09 93 70 0D        		R1=3440	// QImode move
00008AEC 19 D3 02 02        		[_Mk_Z6]=R1	// QImode move
00001D83                    	.debug
00001D83 2E 00 73 00        		.dw '.stabn 0x44,0,315,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         35 00 2C 00
         00 00 00 00
00001D97 31 06 00 00        		.dd LM207-_main
00001D99 0D 00 0A 00        		.dw 0x0d,0x0a
00008AEE                    	.code
                            	LM207:
00008AEE 11 93 F9 01        		R1=[_Mk_F3]	// QImode move
00008AF0 09 43 DB 05        		CMP R1,1499	// QImode compare
00008AF2 02 8E              		JNA L165	// QImode GTU
00008AF3 0F 9F FD 8A        		PC=L92
                            	L165:
00008AF5 11 93 F9 01        		R1=[_Mk_F3]	// QImode move
00008AF7 0A 95 64 00        		R2=100	// QImode move
00008AF9 19 05 F9 01        		[_Mk_F3]=R1+R2
00008AFB 0F 9F 00 8B        		pc=L93	// jump
                            	L92:
00001D9B                    	.debug
00001D9B 2E 00 73 00        		.dw '.stabn 0x44,0,316,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         36 00 2C 00
         00 00 00 00
00001DAF 40 06 00 00        		.dd LM208-_main
00001DB1 0D 00 0A 00        		.dw 0x0d,0x0a
00008AFD                    	.code
                            	LM208:
00008AFD 40 92              		R1=0	// QImode move
00008AFE 19 D3 F9 01        		[_Mk_F3]=R1	// QImode move
                            	L93:
00001DB3                    	.debug
00001DB3 2E 00 73 00        		.dw '.stabn 0x44,0,317,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         37 00 2C 00
         00 00 00 00
00001DC7 43 06 00 00        		.dd LM209-_main
00001DC9 0D 00 0A 00        		.dw 0x0d,0x0a
00008B00                    	.code
                            	LM209:
00008B00 11 93 00 02        		R1=[_Bianxing1]	// QImode move
00008B02 09 43 63 00        		CMP R1,99	// QImode compare
00008B04 02 8E              		JNA L166	// QImode GTU
00008B05 0F 9F 0E 8B        		PC=L94
                            	L166:
00008B07 11 93 00 02        		R1=[_Bianxing1]	// QImode move
00008B09 45 94              		R2=5	// QImode move
00008B0A 19 05 00 02        		[_Bianxing1]=R1+R2
00008B0C 0F 9F 11 8B        		pc=L95	// jump
                            	L94:
00001DCB                    	.debug
00001DCB 2E 00 73 00        		.dw '.stabn 0x44,0,318,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         38 00 2C 00
         00 00 00 00
00001DDF 51 06 00 00        		.dd LM210-_main
00001DE1 0D 00 0A 00        		.dw 0x0d,0x0a
00008B0E                    	.code
                            	LM210:
00008B0E 40 92              		R1=0	// QImode move
00008B0F 19 D3 00 02        		[_Bianxing1]=R1	// QImode move
                            	L95:
00001DE3                    	.debug
00001DE3 2E 00 73 00        		.dw '.stabn 0x44,0,319,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         39 00 2C 00
         00 00 00 00
00001DF7 54 06 00 00        		.dd LM211-_main
00001DF9 0D 00 0A 00        		.dw 0x0d,0x0a
00008B11                    	.code
                            	LM211:
00008B11 05 93              		R1=BP	// QImode move
00008B12 0D 05 14 00        		R2=BP+20
00008B14 02 97              		R3=R2	// QImode move
00008B15 C3 92              		R1=[R3]	// QImode move
00008B16 40 42              		CMP R1,0	// QImode test
00008B17 02 5E              		JZ L167	// QImode NE
00008B18 0F 9F 22 8B        		PC=L96
                            	L167:
00008B1A 05 93              		R1=BP	// QImode move
00008B1B 0D 05 14 00        		R2=BP+20
00008B1D 40 92              		R1=0	// QImode move
00008B1E 02 99              		R4=R2	// QImode move
00008B1F C4 D2              		[R4]=R1	// QImode move
00008B20 0F 9F 28 8B        		pc=L97	// jump
                            	L96:
00001DFB                    	.debug
00001DFB 2E 00 73 00        		.dw '.stabn 0x44,0,320,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         30 00 2C 00
         00 00 00 00
00001E0F 65 06 00 00        		.dd LM212-_main
00001E11 0D 00 0A 00        		.dw 0x0d,0x0a
00008B22                    	.code
                            	LM212:
00008B22 05 93              		R1=BP	// QImode move
00008B23 0D 05 14 00        		R2=BP+20
00008B25 40 92              		R1=0	// QImode move
00008B26 02 97              		R3=R2	// QImode move
00008B27 C3 D2              		[R3]=R1	// QImode move
                            	L97:
00001E13                    	.debug
00001E13 2E 00 73 00        		.dw '.stabn 0x44,0,321,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         31 00 2C 00
         00 00 00 00
00001E27 6B 06 00 00        		.dd LM213-_main
00001E29 0D 00 0A 00        		.dw 0x0d,0x0a
00008B28                    	.code
                            	LM213:
00008B28 05 93              		R1=BP	// QImode move
00008B29 0D 05 1A 00        		R2=BP+26
00008B2B 11 93 01 02        		R1=[_sanju]	// QImode move
00008B2D 02 99              		R4=R2	// QImode move
00008B2E C4 42              		CMP R1,[R4]	// QImode compare
00008B2F 02 0E              		JB L168	// QImode GEU
00008B30 0F 9F 3A 8B        		PC=L98
                            	L168:
00008B32 11 93 01 02        		R1=[_sanju]	// QImode move
00008B34 0A 95 F3 00        		R2=243	// QImode move
00008B36 19 05 01 02        		[_sanju]=R1+R2
00008B38 0F 9F 3D 8B        		pc=L99	// jump
                            	L98:
00001E2B                    	.debug
00001E2B 2E 00 73 00        		.dw '.stabn 0x44,0,322,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         32 00 2C 00
         00 00 00 00
00001E3F 7D 06 00 00        		.dd LM214-_main
00001E41 0D 00 0A 00        		.dw 0x0d,0x0a
00008B3A                    	.code
                            	LM214:
00008B3A 40 92              		R1=0	// QImode move
00008B3B 19 D3 01 02        		[_sanju]=R1	// QImode move
                            	L99:
00001E43                    	.debug
00001E43 2E 00 73 00        		.dw '.stabn 0x44,0,323,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         33 00 2C 00
         00 00 00 00
00001E57 80 06 00 00        		.dd LM215-_main
00001E59 0D 00 0A 00        		.dw 0x0d,0x0a
00008B3D                    	.code
                            	LM215:
00008B3D 0F 9F 94 8C        		pc=L53	// jump
                            	L100:
00001E5B                    	.debug
00001E5B 2E 00 73 00        		.dw '.stabn 0x44,0,326,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         36 00 2C 00
         00 00 00 00
00001E6F 82 06 00 00        		.dd LM216-_main
00001E71 0D 00 0A 00        		.dw 0x0d,0x0a
00008B3F                    	.code
                            	LM216:
00008B3F 05 93              		R1=BP	// QImode move
00008B40 0D 05 0D 00        		R2=BP+13
00008B42 4B 92              		R1=11	// QImode move
00008B43 02 97              		R3=R2	// QImode move
00008B44 C3 D2              		[R3]=R1	// QImode move
00001E73                    	.debug
00001E73 2E 00 73 00        		.dw '.stabn 0x44,0,327,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         37 00 2C 00
         00 00 00 00
00001E87 88 06 00 00        		.dd LM217-_main
00001E89 0D 00 0A 00        		.dw 0x0d,0x0a
00008B45                    	.code
                            	LM217:
00008B45 05 93              		R1=BP	// QImode move
00008B46 0D 05 12 00        		R2=BP+18
00008B48 4B 92              		R1=11	// QImode move
00008B49 02 99              		R4=R2	// QImode move
00008B4A C4 D2              		[R4]=R1	// QImode move
00001E8B                    	.debug
00001E8B 2E 00 73 00        		.dw '.stabn 0x44,0,328,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         38 00 2C 00
         00 00 00 00
00001E9F 8E 06 00 00        		.dd LM218-_main
00001EA1 0D 00 0A 00        		.dw 0x0d,0x0a
00008B4B                    	.code
                            	LM218:
00008B4B 05 93              		R1=BP	// QImode move
00008B4C 0D 05 18 00        		R2=BP+24
00008B4E 4B 92              		R1=11	// QImode move
00008B4F 02 97              		R3=R2	// QImode move
00008B50 C3 D2              		[R3]=R1	// QImode move
00001EA3                    	.debug
00001EA3 2E 00 73 00        		.dw '.stabn 0x44,0,330,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         30 00 2C 00
         00 00 00 00
00001EB7 94 06 00 00        		.dd LM219-_main
00001EB9 0D 00 0A 00        		.dw 0x0d,0x0a
00008B51                    	.code
                            	LM219:
00008B51 40 92              		R1=0	// QImode move
00008B52 C8 D2              		[SP--]=R1	// QImode move
00008B53 05 93              		R1=BP	// QImode move
00008B54 0D 05 18 00        		R2=BP+24
00008B56 02 99              		R4=R2	// QImode move
00008B57 C4 92              		R1=[R4]	// QImode move
00008B58 C8 D2              		[SP--]=R1	// QImode move
00008B59 40 F0 6F 82        		call _showled	// call without return value
00008B5B 42 00              		SP=SP+2
00001EBB                    	.debug
00001EBB 2E 00 73 00        		.dw '.stabn 0x44,0,331,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         31 00 2C 00
         00 00 00 00
00001ECF 9F 06 00 00        		.dd LM220-_main
00001ED1 0D 00 0A 00        		.dw 0x0d,0x0a
00008B5C                    	.code
                            	LM220:
00008B5C 09 93 B0 0D        		R1=3504	// QImode move
00008B5E 19 D3 02 02        		[_Mk_Z6]=R1	// QImode move
00001ED3                    	.debug
00001ED3 2E 00 73 00        		.dw '.stabn 0x44,0,332,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         32 00 2C 00
         00 00 00 00
00001EE7 A3 06 00 00        		.dd LM221-_main
00001EE9 0D 00 0A 00        		.dw 0x0d,0x0a
00008B60                    	.code
                            	LM221:
00008B60 11 93 F7 01        		R1=[_Mk_F2]	// QImode move
00008B62 09 43 DB 05        		CMP R1,1499	// QImode compare
00008B64 02 8E              		JNA L169	// QImode GTU
00008B65 0F 9F 6F 8B        		PC=L101
                            	L169:
00008B67 11 93 F7 01        		R1=[_Mk_F2]	// QImode move
00008B69 0A 95 64 00        		R2=100	// QImode move
00008B6B 19 05 F7 01        		[_Mk_F2]=R1+R2
00008B6D 0F 9F 72 8B        		pc=L102	// jump
                            	L101:
00001EEB                    	.debug
00001EEB 2E 00 73 00        		.dw '.stabn 0x44,0,333,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         33 00 2C 00
         00 00 00 00
00001EFF B2 06 00 00        		.dd LM222-_main
00001F01 0D 00 0A 00        		.dw 0x0d,0x0a
00008B6F                    	.code
                            	LM222:
00008B6F 40 92              		R1=0	// QImode move
00008B70 19 D3 F7 01        		[_Mk_F2]=R1	// QImode move
                            	L102:
00001F03                    	.debug
00001F03 2E 00 73 00        		.dw '.stabn 0x44,0,334,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         34 00 2C 00
         00 00 00 00
00001F17 B5 06 00 00        		.dd LM223-_main
00001F19 0D 00 0A 00        		.dw 0x0d,0x0a
00008B72                    	.code
                            	LM223:
00008B72 11 93 FF 01        		R1=[_Bianxing]	// QImode move
00008B74 09 43 63 00        		CMP R1,99	// QImode compare
00008B76 02 8E              		JNA L170	// QImode GTU
00008B77 0F 9F 80 8B        		PC=L103
                            	L170:
00008B79 11 93 FF 01        		R1=[_Bianxing]	// QImode move
00008B7B 45 94              		R2=5	// QImode move
00008B7C 19 05 FF 01        		[_Bianxing]=R1+R2
00008B7E 0F 9F 83 8B        		pc=L104	// jump
                            	L103:
00001F1B                    	.debug
00001F1B 2E 00 73 00        		.dw '.stabn 0x44,0,335,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         35 00 2C 00
         00 00 00 00
00001F2F C3 06 00 00        		.dd LM224-_main
00001F31 0D 00 0A 00        		.dw 0x0d,0x0a
00008B80                    	.code
                            	LM224:
00008B80 40 92              		R1=0	// QImode move
00008B81 19 D3 FF 01        		[_Bianxing]=R1	// QImode move
                            	L104:
00001F33                    	.debug
00001F33 2E 00 73 00        		.dw '.stabn 0x44,0,336,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         36 00 2C 00
         00 00 00 00
00001F47 C6 06 00 00        		.dd LM225-_main
00001F49 0D 00 0A 00        		.dw 0x0d,0x0a
00008B83                    	.code
                            	LM225:
00008B83 05 93              		R1=BP	// QImode move
00008B84 0D 05 15 00        		R2=BP+21
00008B86 02 97              		R3=R2	// QImode move
00008B87 C3 92              		R1=[R3]	// QImode move
00008B88 40 42              		CMP R1,0	// QImode test
00008B89 02 5E              		JZ L171	// QImode NE
00008B8A 0F 9F 94 8B        		PC=L105
                            	L171:
00008B8C 05 93              		R1=BP	// QImode move
00008B8D 0D 05 15 00        		R2=BP+21
00008B8F 41 92              		R1=1	// QImode move
00008B90 02 99              		R4=R2	// QImode move
00008B91 C4 D2              		[R4]=R1	// QImode move
00008B92 0F 9F 9A 8B        		pc=L106	// jump
                            	L105:
00001F4B                    	.debug
00001F4B 2E 00 73 00        		.dw '.stabn 0x44,0,337,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         37 00 2C 00
         00 00 00 00
00001F5F D7 06 00 00        		.dd LM226-_main
00001F61 0D 00 0A 00        		.dw 0x0d,0x0a
00008B94                    	.code
                            	LM226:
00008B94 05 93              		R1=BP	// QImode move
00008B95 0D 05 15 00        		R2=BP+21
00008B97 40 92              		R1=0	// QImode move
00008B98 02 97              		R3=R2	// QImode move
00008B99 C3 D2              		[R3]=R1	// QImode move
                            	L106:
00001F63                    	.debug
00001F63 2E 00 73 00        		.dw '.stabn 0x44,0,338,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         38 00 2C 00
         00 00 00 00
00001F77 DD 06 00 00        		.dd LM227-_main
00001F79 0D 00 0A 00        		.dw 0x0d,0x0a
00008B9A                    	.code
                            	LM227:
00008B9A 0F 9F 94 8C        		pc=L53	// jump
                            	L107:
00001F7B                    	.debug
00001F7B 2E 00 73 00        		.dw '.stabn 0x44,0,341,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         31 00 2C 00
         00 00 00 00
00001F8F DF 06 00 00        		.dd LM228-_main
00001F91 0D 00 0A 00        		.dw 0x0d,0x0a
00008B9C                    	.code
                            	LM228:
00008B9C 05 93              		R1=BP	// QImode move
00008B9D 0D 05 0E 00        		R2=BP+14
00008B9F 4C 92              		R1=12	// QImode move
00008BA0 02 99              		R4=R2	// QImode move
00008BA1 C4 D2              		[R4]=R1	// QImode move
00001F93                    	.debug
00001F93 2E 00 73 00        		.dw '.stabn 0x44,0,342,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         32 00 2C 00
         00 00 00 00
00001FA7 E5 06 00 00        		.dd LM229-_main
00001FA9 0D 00 0A 00        		.dw 0x0d,0x0a
00008BA2                    	.code
                            	LM229:
00008BA2 05 93              		R1=BP	// QImode move
00008BA3 0D 05 12 00        		R2=BP+18
00008BA5 4C 92              		R1=12	// QImode move
00008BA6 02 97              		R3=R2	// QImode move
00008BA7 C3 D2              		[R3]=R1	// QImode move
00001FAB                    	.debug
00001FAB 2E 00 73 00        		.dw '.stabn 0x44,0,343,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         33 00 2C 00
         00 00 00 00
00001FBF EB 06 00 00        		.dd LM230-_main
00001FC1 0D 00 0A 00        		.dw 0x0d,0x0a
00008BA8                    	.code
                            	LM230:
00008BA8 05 93              		R1=BP	// QImode move
00008BA9 0D 05 18 00        		R2=BP+24
00008BAB 4C 92              		R1=12	// QImode move
00008BAC 02 99              		R4=R2	// QImode move
00008BAD C4 D2              		[R4]=R1	// QImode move
00001FC3                    	.debug
00001FC3 2E 00 73 00        		.dw '.stabn 0x44,0,345,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         35 00 2C 00
         00 00 00 00
00001FD7 F1 06 00 00        		.dd LM231-_main
00001FD9 0D 00 0A 00        		.dw 0x0d,0x0a
00008BAE                    	.code
                            	LM231:
00008BAE 40 92              		R1=0	// QImode move
00008BAF C8 D2              		[SP--]=R1	// QImode move
00008BB0 05 93              		R1=BP	// QImode move
00008BB1 0D 05 18 00        		R2=BP+24
00008BB3 02 97              		R3=R2	// QImode move
00008BB4 C3 92              		R1=[R3]	// QImode move
00008BB5 C8 D2              		[SP--]=R1	// QImode move
00008BB6 40 F0 6F 82        		call _showled	// call without return value
00008BB8 42 00              		SP=SP+2
00001FDB                    	.debug
00001FDB 2E 00 73 00        		.dw '.stabn 0x44,0,346,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         36 00 2C 00
         00 00 00 00
00001FEF FC 06 00 00        		.dd LM232-_main
00001FF1 0D 00 0A 00        		.dw 0x0d,0x0a
00008BB9                    	.code
                            	LM232:
00008BB9 09 93 70 0F        		R1=3952	// QImode move
00008BBB 19 D3 02 02        		[_Mk_Z6]=R1	// QImode move
00001FF3                    	.debug
00001FF3 2E 00 73 00        		.dw '.stabn 0x44,0,347,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         37 00 2C 00
         00 00 00 00
00002007 00 07 00 00        		.dd LM233-_main
00002009 0D 00 0A 00        		.dw 0x0d,0x0a
00008BBD                    	.code
                            	LM233:
00008BBD 11 93 F5 01        		R1=[_Mk_F1]	// QImode move
00008BBF 09 43 DB 05        		CMP R1,1499	// QImode compare
00008BC1 02 8E              		JNA L172	// QImode GTU
00008BC2 0F 9F CC 8B        		PC=L108
                            	L172:
00008BC4 11 93 F5 01        		R1=[_Mk_F1]	// QImode move
00008BC6 0A 95 64 00        		R2=100	// QImode move
00008BC8 19 05 F5 01        		[_Mk_F1]=R1+R2
00008BCA 0F 9F CF 8B        		pc=L109	// jump
                            	L108:
0000200B                    	.debug
0000200B 2E 00 73 00        		.dw '.stabn 0x44,0,348,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         38 00 2C 00
         00 00 00 00
0000201F 0F 07 00 00        		.dd LM234-_main
00002021 0D 00 0A 00        		.dw 0x0d,0x0a
00008BCC                    	.code
                            	LM234:
00008BCC 40 92              		R1=0	// QImode move
00008BCD 19 D3 F5 01        		[_Mk_F1]=R1	// QImode move
                            	L109:
00002023                    	.debug
00002023 2E 00 73 00        		.dw '.stabn 0x44,0,349,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         39 00 2C 00
         00 00 00 00
00002037 12 07 00 00        		.dd LM235-_main
00002039 0D 00 0A 00        		.dw 0x0d,0x0a
00008BCF                    	.code
                            	LM235:
00008BCF 11 93 FE 01        		R1=[_V_GA]	// QImode move
00008BD1 09 43 63 00        		CMP R1,99	// QImode compare
00008BD3 02 8E              		JNA L173	// QImode GTU
00008BD4 0F 9F DD 8B        		PC=L110
                            	L173:
00008BD6 11 93 FE 01        		R1=[_V_GA]	// QImode move
00008BD8 45 94              		R2=5	// QImode move
00008BD9 19 05 FE 01        		[_V_GA]=R1+R2
00008BDB 0F 9F E0 8B        		pc=L111	// jump
                            	L110:
0000203B                    	.debug
0000203B 2E 00 73 00        		.dw '.stabn 0x44,0,350,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         30 00 2C 00
         00 00 00 00
0000204F 20 07 00 00        		.dd LM236-_main
00002051 0D 00 0A 00        		.dw 0x0d,0x0a
00008BDD                    	.code
                            	LM236:
00008BDD 40 92              		R1=0	// QImode move
00008BDE 19 D3 FE 01        		[_V_GA]=R1	// QImode move
                            	L111:
00002053                    	.debug
00002053 2E 00 73 00        		.dw '.stabn 0x44,0,351,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         31 00 2C 00
         00 00 00 00
00002067 23 07 00 00        		.dd LM237-_main
00002069 0D 00 0A 00        		.dw 0x0d,0x0a
00008BE0                    	.code
                            	LM237:
00008BE0 05 93              		R1=BP	// QImode move
00008BE1 0D 05 16 00        		R2=BP+22
00008BE3 02 99              		R4=R2	// QImode move
00008BE4 C4 92              		R1=[R4]	// QImode move
00008BE5 40 42              		CMP R1,0	// QImode test
00008BE6 02 5E              		JZ L174	// QImode NE
00008BE7 0F 9F F1 8B        		PC=L112
                            	L174:
00008BE9 05 93              		R1=BP	// QImode move
00008BEA 0D 05 16 00        		R2=BP+22
00008BEC 41 92              		R1=1	// QImode move
00008BED 02 97              		R3=R2	// QImode move
00008BEE C3 D2              		[R3]=R1	// QImode move
00008BEF 0F 9F F7 8B        		pc=L113	// jump
                            	L112:
0000206B                    	.debug
0000206B 2E 00 73 00        		.dw '.stabn 0x44,0,352,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         32 00 2C 00
         00 00 00 00
0000207F 34 07 00 00        		.dd LM238-_main
00002081 0D 00 0A 00        		.dw 0x0d,0x0a
00008BF1                    	.code
                            	LM238:
00008BF1 05 93              		R1=BP	// QImode move
00008BF2 0D 05 16 00        		R2=BP+22
00008BF4 40 92              		R1=0	// QImode move
00008BF5 02 99              		R4=R2	// QImode move
00008BF6 C4 D2              		[R4]=R1	// QImode move
                            	L113:
00002083                    	.debug
00002083 2E 00 73 00        		.dw '.stabn 0x44,0,353,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         33 00 2C 00
         00 00 00 00
00002097 3A 07 00 00        		.dd LM239-_main
00002099 0D 00 0A 00        		.dw 0x0d,0x0a
00008BF7                    	.code
                            	LM239:
00008BF7 0F 9F 94 8C        		pc=L53	// jump
                            	L114:
0000209B                    	.debug
0000209B 2E 00 73 00        		.dw '.stabn 0x44,0,356,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         36 00 2C 00
         00 00 00 00
000020AF 3C 07 00 00        		.dd LM240-_main
000020B1 0D 00 0A 00        		.dw 0x0d,0x0a
00008BF9                    	.code
                            	LM240:
00008BF9 05 93              		R1=BP	// QImode move
00008BFA 0D 05 0F 00        		R2=BP+15
00008BFC 4D 92              		R1=13	// QImode move
00008BFD 02 97              		R3=R2	// QImode move
00008BFE C3 D2              		[R3]=R1	// QImode move
000020B3                    	.debug
000020B3 2E 00 73 00        		.dw '.stabn 0x44,0,357,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         37 00 2C 00
         00 00 00 00
000020C7 42 07 00 00        		.dd LM241-_main
000020C9 0D 00 0A 00        		.dw 0x0d,0x0a
00008BFF                    	.code
                            	LM241:
00008BFF 05 93              		R1=BP	// QImode move
00008C00 0D 05 12 00        		R2=BP+18
00008C02 4D 92              		R1=13	// QImode move
00008C03 02 99              		R4=R2	// QImode move
00008C04 C4 D2              		[R4]=R1	// QImode move
000020CB                    	.debug
000020CB 2E 00 73 00        		.dw '.stabn 0x44,0,358,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         38 00 2C 00
         00 00 00 00
000020DF 48 07 00 00        		.dd LM242-_main
000020E1 0D 00 0A 00        		.dw 0x0d,0x0a
00008C05                    	.code
                            	LM242:
00008C05 05 93              		R1=BP	// QImode move
00008C06 0D 05 18 00        		R2=BP+24
00008C08 4D 92              		R1=13	// QImode move
00008C09 02 97              		R3=R2	// QImode move
00008C0A C3 D2              		[R3]=R1	// QImode move
000020E3                    	.debug
000020E3 2E 00 73 00        		.dw '.stabn 0x44,0,360,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         30 00 2C 00
         00 00 00 00
000020F7 4E 07 00 00        		.dd LM243-_main
000020F9 0D 00 0A 00        		.dw 0x0d,0x0a
00008C0B                    	.code
                            	LM243:
00008C0B 40 92              		R1=0	// QImode move
00008C0C C8 D2              		[SP--]=R1	// QImode move
00008C0D 05 93              		R1=BP	// QImode move
00008C0E 0D 05 18 00        		R2=BP+24
00008C10 02 99              		R4=R2	// QImode move
00008C11 C4 92              		R1=[R4]	// QImode move
00008C12 C8 D2              		[SP--]=R1	// QImode move
00008C13 40 F0 6F 82        		call _showled	// call without return value
00008C15 42 00              		SP=SP+2
000020FB                    	.debug
000020FB 2E 00 73 00        		.dw '.stabn 0x44,0,361,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         31 00 2C 00
         00 00 00 00
0000210F 59 07 00 00        		.dd LM244-_main
00002111 0D 00 0A 00        		.dw 0x0d,0x0a
00008C16                    	.code
                            	LM244:
00008C16 09 93 B0 0F        		R1=4016	// QImode move
00008C18 19 D3 02 02        		[_Mk_Z6]=R1	// QImode move
00002113                    	.debug
00002113 2E 00 73 00        		.dw '.stabn 0x44,0,362,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         32 00 2C 00
         00 00 00 00
00002127 5D 07 00 00        		.dd LM245-_main
00002129 0D 00 0A 00        		.dw 0x0d,0x0a
00008C1A                    	.code
                            	LM245:
00008C1A 11 93 F3 01        		R1=[_Mk_F]	// QImode move
00008C1C 09 43 DB 05        		CMP R1,1499	// QImode compare
00008C1E 02 8E              		JNA L175	// QImode GTU
00008C1F 0F 9F 29 8C        		PC=L115
                            	L175:
00008C21 11 93 F3 01        		R1=[_Mk_F]	// QImode move
00008C23 0A 95 64 00        		R2=100	// QImode move
00008C25 19 05 F3 01        		[_Mk_F]=R1+R2
00008C27 0F 9F 2C 8C        		pc=L116	// jump
                            	L115:
0000212B                    	.debug
0000212B 2E 00 73 00        		.dw '.stabn 0x44,0,363,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         33 00 2C 00
         00 00 00 00
0000213F 6C 07 00 00        		.dd LM246-_main
00002141 0D 00 0A 00        		.dw 0x0d,0x0a
00008C29                    	.code
                            	LM246:
00008C29 40 92              		R1=0	// QImode move
00008C2A 19 D3 F3 01        		[_Mk_F]=R1	// QImode move
                            	L116:
00002143                    	.debug
00002143 2E 00 73 00        		.dw '.stabn 0x44,0,364,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         34 00 2C 00
         00 00 00 00
00002157 6F 07 00 00        		.dd LM247-_main
00002159 0D 00 0A 00        		.dw 0x0d,0x0a
00008C2C                    	.code
                            	LM247:
00008C2C 05 93              		R1=BP	// QImode move
00008C2D 0D 05 17 00        		R2=BP+23
00008C2F 02 97              		R3=R2	// QImode move
00008C30 C3 92              		R1=[R3]	// QImode move
00008C31 40 42              		CMP R1,0	// QImode test
00008C32 02 5E              		JZ L176	// QImode NE
00008C33 0F 9F 3D 8C        		PC=L117
                            	L176:
00008C35 05 93              		R1=BP	// QImode move
00008C36 0D 05 17 00        		R2=BP+23
00008C38 41 92              		R1=1	// QImode move
00008C39 02 99              		R4=R2	// QImode move
00008C3A C4 D2              		[R4]=R1	// QImode move
00008C3B 0F 9F 43 8C        		pc=L118	// jump
                            	L117:
0000215B                    	.debug
0000215B 2E 00 73 00        		.dw '.stabn 0x44,0,365,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         35 00 2C 00
         00 00 00 00
0000216F 80 07 00 00        		.dd LM248-_main
00002171 0D 00 0A 00        		.dw 0x0d,0x0a
00008C3D                    	.code
                            	LM248:
00008C3D 05 93              		R1=BP	// QImode move
00008C3E 0D 05 17 00        		R2=BP+23
00008C40 40 92              		R1=0	// QImode move
00008C41 02 97              		R3=R2	// QImode move
00008C42 C3 D2              		[R3]=R1	// QImode move
                            	L118:
00002173                    	.debug
00002173 2E 00 73 00        		.dw '.stabn 0x44,0,366,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         36 00 2C 00
         00 00 00 00
00002187 86 07 00 00        		.dd LM249-_main
00002189 0D 00 0A 00        		.dw 0x0d,0x0a
00008C43                    	.code
                            	LM249:
00008C43 0F 9F 94 8C        		pc=L53	// jump
                            	L119:
0000218B                    	.debug
0000218B 2E 00 73 00        		.dw '.stabn 0x44,0,369,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         39 00 2C 00
         00 00 00 00
0000219F 88 07 00 00        		.dd LM250-_main
000021A1 0D 00 0A 00        		.dw 0x0d,0x0a
00008C45                    	.code
                            	LM250:
00008C45 05 93              		R1=BP	// QImode move
00008C46 0D 05 10 00        		R2=BP+16
00008C48 4E 92              		R1=14	// QImode move
00008C49 02 99              		R4=R2	// QImode move
00008C4A C4 D2              		[R4]=R1	// QImode move
000021A3                    	.debug
000021A3 2E 00 73 00        		.dw '.stabn 0x44,0,370,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         30 00 2C 00
         00 00 00 00
000021B7 8E 07 00 00        		.dd LM251-_main
000021B9 0D 00 0A 00        		.dw 0x0d,0x0a
00008C4B                    	.code
                            	LM251:
00008C4B 05 93              		R1=BP	// QImode move
00008C4C 0D 05 12 00        		R2=BP+18
00008C4E 4E 92              		R1=14	// QImode move
00008C4F 02 97              		R3=R2	// QImode move
00008C50 C3 D2              		[R3]=R1	// QImode move
000021BB                    	.debug
000021BB 2E 00 73 00        		.dw '.stabn 0x44,0,371,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         31 00 2C 00
         00 00 00 00
000021CF 94 07 00 00        		.dd LM252-_main
000021D1 0D 00 0A 00        		.dw 0x0d,0x0a
00008C51                    	.code
                            	LM252:
00008C51 05 93              		R1=BP	// QImode move
00008C52 0D 05 18 00        		R2=BP+24
00008C54 4E 92              		R1=14	// QImode move
00008C55 02 99              		R4=R2	// QImode move
00008C56 C4 D2              		[R4]=R1	// QImode move
000021D3                    	.debug
000021D3 2E 00 73 00        		.dw '.stabn 0x44,0,373,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         33 00 2C 00
         00 00 00 00
000021E7 9A 07 00 00        		.dd LM253-_main
000021E9 0D 00 0A 00        		.dw 0x0d,0x0a
00008C57                    	.code
                            	LM253:
00008C57 40 92              		R1=0	// QImode move
00008C58 C8 D2              		[SP--]=R1	// QImode move
00008C59 05 93              		R1=BP	// QImode move
00008C5A 0D 05 18 00        		R2=BP+24
00008C5C 02 97              		R3=R2	// QImode move
00008C5D C3 92              		R1=[R3]	// QImode move
00008C5E C8 D2              		[SP--]=R1	// QImode move
00008C5F 40 F0 6F 82        		call _showled	// call without return value
00008C61 42 00              		SP=SP+2
000021EB                    	.debug
000021EB 2E 00 73 00        		.dw '.stabn 0x44,0,374,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         34 00 2C 00
         00 00 00 00
000021FF A5 07 00 00        		.dd LM254-_main
00002201 0D 00 0A 00        		.dw 0x0d,0x0a
00008C62                    	.code
                            	LM254:
00008C62 05 93              		R1=BP	// QImode move
00008C63 0D 05 19 00        		R2=BP+25
00008C65 09 93 4C 1D        		R1=7500	// QImode move
00008C67 02 99              		R4=R2	// QImode move
00008C68 C4 D2              		[R4]=R1	// QImode move
00002203                    	.debug
00002203 2E 00 73 00        		.dw '.stabn 0x44,0,376,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         36 00 2C 00
         00 00 00 00
00002217 AC 07 00 00        		.dd LM255-_main
00002219 0D 00 0A 00        		.dw 0x0d,0x0a
00008C69                    	.code
                            	LM255:
00008C69 40 F0 7B A8        		call _Gaopin	// call with return value
0000221B                    	.debug
0000221B 2E 00 73 00        		.dw '.stabn 0x44,0,377,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         37 00 2C 00
         00 00 00 00
0000222F AE 07 00 00        		.dd LM256-_main
00002231 0D 00 0A 00        		.dw 0x0d,0x0a
00008C6B                    	.code
                            	LM256:
00008C6B 0F 9F 94 8C        		pc=L53	// jump
                            	L120:
00002233                    	.debug
00002233 2E 00 73 00        		.dw '.stabn 0x44,0,380,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         30 00 2C 00
         00 00 00 00
00002247 B0 07 00 00        		.dd LM257-_main
00002249 0D 00 0A 00        		.dw 0x0d,0x0a
00008C6D                    	.code
                            	LM257:
00008C6D 05 93              		R1=BP	// QImode move
00008C6E 0D 05 11 00        		R2=BP+17
00008C70 4F 92              		R1=15	// QImode move
00008C71 02 97              		R3=R2	// QImode move
00008C72 C3 D2              		[R3]=R1	// QImode move
0000224B                    	.debug
0000224B 2E 00 73 00        		.dw '.stabn 0x44,0,381,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         31 00 2C 00
         00 00 00 00
0000225F B6 07 00 00        		.dd LM258-_main
00002261 0D 00 0A 00        		.dw 0x0d,0x0a
00008C73                    	.code
                            	LM258:
00008C73 05 93              		R1=BP	// QImode move
00008C74 0D 05 12 00        		R2=BP+18
00008C76 4F 92              		R1=15	// QImode move
00008C77 02 99              		R4=R2	// QImode move
00008C78 C4 D2              		[R4]=R1	// QImode move
00002263                    	.debug
00002263 2E 00 73 00        		.dw '.stabn 0x44,0,382,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         32 00 2C 00
         00 00 00 00
00002277 BC 07 00 00        		.dd LM259-_main
00002279 0D 00 0A 00        		.dw 0x0d,0x0a
00008C79                    	.code
                            	LM259:
00008C79 05 93              		R1=BP	// QImode move
00008C7A 0D 05 18 00        		R2=BP+24
00008C7C 4F 92              		R1=15	// QImode move
00008C7D 02 97              		R3=R2	// QImode move
00008C7E C3 D2              		[R3]=R1	// QImode move
0000227B                    	.debug
0000227B 2E 00 73 00        		.dw '.stabn 0x44,0,384,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         34 00 2C 00
         00 00 00 00
0000228F C2 07 00 00        		.dd LM260-_main
00002291 0D 00 0A 00        		.dw 0x0d,0x0a
00008C7F                    	.code
                            	LM260:
00008C7F 40 92              		R1=0	// QImode move
00008C80 C8 D2              		[SP--]=R1	// QImode move
00008C81 05 93              		R1=BP	// QImode move
00008C82 0D 05 18 00        		R2=BP+24
00008C84 02 99              		R4=R2	// QImode move
00008C85 C4 92              		R1=[R4]	// QImode move
00008C86 C8 D2              		[SP--]=R1	// QImode move
00008C87 40 F0 6F 82        		call _showled	// call without return value
00008C89 42 00              		SP=SP+2
00002293                    	.debug
00002293 2E 00 73 00        		.dw '.stabn 0x44,0,385,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         35 00 2C 00
         00 00 00 00
000022A7 CD 07 00 00        		.dd LM261-_main
000022A9 0D 00 0A 00        		.dw 0x0d,0x0a
00008C8A                    	.code
                            	LM261:
00008C8A 05 93              		R1=BP	// QImode move
00008C8B 0D 05 19 00        		R2=BP+25
00008C8D 4A 92              		R1=10	// QImode move
00008C8E 02 97              		R3=R2	// QImode move
00008C8F C3 D2              		[R3]=R1	// QImode move
000022AB                    	.debug
000022AB 2E 00 73 00        		.dw '.stabn 0x44,0,386,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         36 00 2C 00
         00 00 00 00
000022BF D3 07 00 00        		.dd LM262-_main
000022C1 0D 00 0A 00        		.dw 0x0d,0x0a
00008C90                    	.code
                            	LM262:
00008C90 40 F0 8B A8        		call _Dipin	// call with return value
000022C3                    	.debug
000022C3 2E 00 73 00        		.dw '.stabn 0x44,0,387,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         37 00 2C 00
         00 00 00 00
000022D7 D5 07 00 00        		.dd LM263-_main
000022D9 0D 00 0A 00        		.dw 0x0d,0x0a
00008C92                    	.code
                            	LM263:
00008C92 0F 9F 94 8C        		pc=L53	// jump
000022DB                    	.debug
000022DB 2E 00 73 00        		.dw '.stabn 0x44,0,388,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         38 00 2C 00
         00 00 00 00
000022EF D7 07 00 00        		.dd LM264-_main
000022F1 0D 00 0A 00        		.dw 0x0d,0x0a
00008C94                    	.code
                            	LM264:
                            	LBE8:
                            	L122:
                            	L53:
000022F3                    	.debug
000022F3 2E 00 73 00        		.dw '.stabn 0x44,0,389,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         39 00 2C 00
         00 00 00 00
00002307 D7 07 00 00        		.dd LM265-_main
00002309 0D 00 0A 00        		.dw 0x0d,0x0a
00008C94                    	.code
                            	LM265:
                            	LBE7:
00008C94 0F 9F 03 85        		pc=L50	// jump
                            	L51:
0000230B                    	.debug
0000230B 2E 00 73 00        		.dw '.stabn 0x44,0,390,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         30 00 2C 00
         00 00 00 00
0000231F D9 07 00 00        		.dd LM266-_main
00002321 0D 00 0A 00        		.dw 0x0d,0x0a
00008C96                    	.code
                            	LM266:
                            	LBE6:
00002323                    	.debug
00002323 2E 00 73 00        		.dw '.stabn 0x44,0,390,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         30 00 2C 00
         00 00 00 00
00002337 D9 07 00 00        		.dd LM267-_main
00002339 0D 00 0A 00        		.dw 0x0d,0x0a
00008C96                    	.code
                            	LM267:
                            	L48:
                            	
00008C96 7E 00              		sp+=62
00008C97 88 98              		pop bp from [sp]
00008C98 90 9A              		retf
                            		.endp	// end of main
                            	
0000233B                    	.debug
0000233B 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000234D 07 00 00 00        		.dd LBB6-_main
0000234F 0D 00 0A 00        		.dw 0x0d,0x0a
00008C99                    	.code
00002351                    	.debug
00002351 2E 00 73 00        		.dw '.stabs "keyfirst:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6B 00 65 00
         79 00 66 00
         69 00 72 00
         73 00 74 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008C99                    	.CODE
00002370                    	.debug
00002370 2E 00 73 00        		.dw '.stabs "keylast:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6B 00 65 00
         79 00 6C 00
         61 00 73 00
         74 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00008C99                    	.CODE
0000238E                    	.debug
0000238E 2E 00 73 00        		.dw '.stabs "xx0:1",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         30 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
00008C99                    	.CODE
000023A8                    	.debug
000023A8 2E 00 73 00        		.dw '.stabs "xx1:1",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         31 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
00008C99                    	.CODE
000023C2                    	.debug
000023C2 2E 00 73 00        		.dw '.stabs "xx2:1",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         32 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
00008C99                    	.CODE
000023DC                    	.debug
000023DC 2E 00 73 00        		.dw '.stabs "xx3:1",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         33 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
00008C99                    	.CODE
000023F6                    	.debug
000023F6 2E 00 73 00        		.dw '.stabs "xx4:1",128,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         34 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
00008C99                    	.CODE
00002410                    	.debug
00002410 2E 00 73 00        		.dw '.stabs "xx5:1",128,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         35 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 37 00
         0D 00 0A 00
00008C99                    	.CODE
0000242A                    	.debug
0000242A 2E 00 73 00        		.dw '.stabs "xx6:1",128,0,0,8',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         36 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 38 00
         0D 00 0A 00
00008C99                    	.CODE
00002444                    	.debug
00002444 2E 00 73 00        		.dw '.stabs "xx7:1",128,0,0,9',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         37 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 39 00
         0D 00 0A 00
00008C99                    	.CODE
0000245E                    	.debug
0000245E 2E 00 73 00        		.dw '.stabs "xx8:1",128,0,0,10',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         38 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         30 00 0D 00
         0A 00      
00008C99                    	.CODE
00002479                    	.debug
00002479 2E 00 73 00        		.dw '.stabs "xx9:1",128,0,0,11',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         39 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         31 00 0D 00
         0A 00      
00008C99                    	.CODE
00002494                    	.debug
00002494 2E 00 73 00        		.dw '.stabs "xxA:1",128,0,0,12',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         41 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         32 00 0D 00
         0A 00      
00008C99                    	.CODE
000024AF                    	.debug
000024AF 2E 00 73 00        		.dw '.stabs "xxB:1",128,0,0,13',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         42 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         33 00 0D 00
         0A 00      
00008C99                    	.CODE
000024CA                    	.debug
000024CA 2E 00 73 00        		.dw '.stabs "xxC:1",128,0,0,14',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         43 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         34 00 0D 00
         0A 00      
00008C99                    	.CODE
000024E5                    	.debug
000024E5 2E 00 73 00        		.dw '.stabs "xxD:1",128,0,0,15',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         44 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         35 00 0D 00
         0A 00      
00008C99                    	.CODE
00002500                    	.debug
00002500 2E 00 73 00        		.dw '.stabs "xxE:1",128,0,0,16',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         45 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         36 00 0D 00
         0A 00      
00008C99                    	.CODE
0000251B                    	.debug
0000251B 2E 00 73 00        		.dw '.stabs "xxF:1",128,0,0,17',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 78 00
         46 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         37 00 0D 00
         0A 00      
00008C99                    	.CODE
00002536                    	.debug
00002536 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,18',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         38 00 0D 00
         0A 00      
00008C99                    	.CODE
0000254F                    	.debug
0000254F 2E 00 73 00        		.dw '.stabs "aa:1",128,0,0,19',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         61 00 61 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 39 00
         0D 00 0A 00
00008C99                    	.CODE
00002569                    	.debug
00002569 2E 00 73 00        		.dw '.stabs "bb:1",128,0,0,20',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 62 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 30 00
         0D 00 0A 00
00008C99                    	.CODE
00002583                    	.debug
00002583 2E 00 73 00        		.dw '.stabs "cc:1",128,0,0,21',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 63 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 31 00
         0D 00 0A 00
00008C99                    	.CODE
0000259D                    	.debug
0000259D 2E 00 73 00        		.dw '.stabs "dd:1",128,0,0,22',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 64 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 32 00
         0D 00 0A 00
00008C99                    	.CODE
000025B7                    	.debug
000025B7 2E 00 73 00        		.dw '.stabs "ff:1",128,0,0,23',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 66 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 33 00
         0D 00 0A 00
00008C99                    	.CODE
000025D1                    	.debug
000025D1 2E 00 73 00        		.dw '.stabs "kind:1",128,0,0,24',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6B 00 69 00
         6E 00 64 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 34 00
         0D 00 0A 00
00008C99                    	.CODE
000025ED                    	.debug
000025ED 2E 00 73 00        		.dw '.stabs "frequency:1",128,0,0,25',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 72 00
         65 00 71 00
         75 00 65 00
         6E 00 63 00
         79 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         35 00 0D 00
         0A 00      
00008C99                    	.CODE
0000260E                    	.debug
0000260E 2E 00 73 00        		.dw '.stabs "max:4",128,0,0,26',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         78 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         36 00 0D 00
         0A 00      
00008C99                    	.CODE
00002629                    	.debug
00002629 2E 00 73 00        		.dw '.stabs "m:4",128,0,0,27',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         37 00 0D 00
         0A 00      
00008C99                    	.CODE
00002642                    	.debug
00002642 2E 00 73 00        		.dw '.stabs "yy:1",128,0,0,28',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         79 00 79 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 38 00
         0D 00 0A 00
00008C99                    	.CODE
0000265C                    	.debug
0000265C 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000266E 4A 00 00 00        		.dd LBB7-_main
00002670 0D 00 0A 00        		.dw 0x0d,0x0a
00008C99                    	.code
00002672                    	.debug
00002672 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00002684 27 01 00 00        		.dd LBB8-_main
00002686 0D 00 0A 00        		.dw 0x0d,0x0a
00008C99                    	.code
00002688                    	.debug
00002688 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000269A D7 07 00 00        		.dd LBE8-_main
0000269C 0D 00 0A 00        		.dw 0x0d,0x0a
00008C99                    	.code
0000269E                    	.debug
0000269E 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000026B0 D7 07 00 00        		.dd LBE7-_main
000026B2 0D 00 0A 00        		.dw 0x0d,0x0a
00008C99                    	.code
000026B4                    	.debug
000026B4 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000026C6 D9 07 00 00        		.dd LBE6-_main
000026C8 0D 00 0A 00        		.dw 0x0d,0x0a
00008C99                    	.code
000026CA                    	.debug
000026CA 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000026D3 DC 07 00 00        		.dd LME3-_main
000026D5 0D 00 0A 00        		.dw 0x0d,0x0a
00008C99                    	.code
                            	LME3:
000026D7                    	.debug
000026D7 2E 00 73 00        		.dw '.stabs "w:G12",32,0,0,',0,0,offset _w,seg _w,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 3A 00
         47 00 31 00
         32 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008C99                    	.CODE
000001A4                    	.ram
                            	.public _w
                            	_w:
000001A4 00 00 00 00        		.dw 2 dup(0)
000026F3                    	.debug
000026F3 2E 00 73 00        		.dw '.stabs "y:G12",32,0,0,',0,0,offset _y,seg _y,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         79 00 3A 00
         47 00 31 00
         32 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         02 00 00 00
         0D 00 0A 00
00008C99                    	.CODE
000001A6                    	.ram
                            	.public _y
                            	_y:
000001A6 00 00 00 00        		.dw 2 dup(0)
0000270F                    	.debug
0000270F 2E 00 73 00        		.dw '.stabs "t:G12",32,0,0,',0,0,offset _t,seg _t,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 3A 00
         47 00 31 00
         32 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         04 00 00 00
         0D 00 0A 00
00008C99                    	.CODE
000001A8                    	.ram
                            	.public _t
                            	_t:
000001A8 00 00 00 00        		.dw 2 dup(0)
0000272B                    	.debug
0000272B 2E 00 73 00        		.dw '.stabs "tt:G12",32,0,0,',0,0,offset _tt,seg _tt,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 74 00
         3A 00 47 00
         31 00 32 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 06 00
         00 00 0D 00
         0A 00      
00008C99                    	.CODE
000001AA                    	.ram
                            	.public _tt
                            	_tt:
000001AA 00 00 00 00        		.dw 2 dup(0)
00002748                    	.debug
00002748 2E 00 73 00        		.dw '.stabs "h:G12",32,0,0,',0,0,offset _h,seg _h,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         68 00 3A 00
         47 00 31 00
         32 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         08 00 00 00
         0D 00 0A 00
00008C99                    	.CODE
000001AC                    	.ram
                            	.public _h
                            	_h:
000001AC 00 00 00 00        		.dw 2 dup(0)
00002764                    	.debug
00002764 2E 00 73 00        		.dw '.stabs "j:G12",32,0,0,',0,0,offset _j,seg _j,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         47 00 31 00
         32 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         0A 00 00 00
         0D 00 0A 00
00008C99                    	.CODE
000001AE                    	.ram
                            	.public _j
                            	_j:
000001AE 00 00 00 00        		.dw 2 dup(0)
                            	.external _Dipin
                            	.external _Gaopin
                            	.external _F_Apwm
                            	.external _DAC_FW
                            	.external _sinf
                            	.external _Fangbo
                            	.external _Juchibo
                            	.external _Sanjiaobo
                            	.external _L_asin
                            	.external _key_asm1
                            	.external _key_asm
                            	.external _K_IRQ
                            	.external _baab
                            	.external _delay
                            	.external _singleled
                            	.external _SP_INT_64Hz
                            	.external _SACM_S480_ServiceLoop
                            	.external _SACM_S480_Status
                            	.external _SACM_S480_Play
                            	.external _SACM_S480_Initial
                            	.external _Turnoff_INT_64Hz
                            	.external __cmpf2
                            	.external __addf2
                            	.external __cvi1f2
                            	.external __cvf2i1
                            	.external __divf2
                            	.external __mulf2
                            	.external __divi1
                            	.external __modi1
                            	.external __divi2
                            		.end
0 error(s), 0 warning(s).

