Sunplus u'nSP Assembler - Ver. 1.8.0
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.10
                            	// Command: D:\PROGRA~1\Sunplus\UNSPID~2\IDE180\cc1.exe C:\DOCUME~1\Œ§π„‘∂\LOCALS~1\Temp\ccGwaaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -gstabs -o .\Debug/main.asm
                            	// gcc2_compiled.:
                            	
00008026                    	.code
                            	Ltext0:
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000002C                    	.debug
0000002C 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000052                    	.debug
00000052 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
0000008D                    	.debug
0000008D 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000000BD                    	.debug
000000BD 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000000F7                    	.debug
000000F7 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000137                    	.debug
00000137 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000176                    	.debug
00000176 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000001A8                    	.debug
000001A8 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000001DE                    	.debug
000001DE 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000214                    	.debug
00000214 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000247                    	.debug
00000247 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000026D                    	.debug
0000026D 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000294                    	.debug
00000294 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000002C0                    	.debug
000002C0 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000301                    	.debug
00000301 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000330                    	.debug
00000330 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000360                    	.debug
00000360 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000395                    	.debug
00000395 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00008026                    	.code
000003B5                    	.debug
000003B5 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _main
                            	_main:	.proc
000003D3                    	.debug
000003D3 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
000003E6 00 00 00 00        		.dd LM1-_main
000003E8 0D 00 0A 00        		.dw 0x0d,0x0a
00008026                    	.code
                            	LM1:
                            		// total=29, vars=29
                            		// frame_pointer_needed: 1
00008026 88 DA              		push bp to [sp]
00008027 5D 20              		sp-=29
00008028 08 0B 01 00        		bp=sp+1
                            	
0000802A 0D 03 20 00        		R1=BP+32
0000802C 1B D2              		[bp+27]=R1	// QImode move
000003EA                    	.debug
000003EA 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
000003FD 07 00 00 00        		.dd LM2-_main
000003FF 0D 00 0A 00        		.dw 0x0d,0x0a
0000802D                    	.code
                            	LM2:
                            	LBB2:
00000401                    	.debug
00000401 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
00000414 07 00 00 00        		.dd LM3-_main
00000416 0D 00 0A 00        		.dw 0x0d,0x0a
0000802D                    	.code
                            	LM3:
0000802D 40 F0 7E 81        		call _SP_SIOInitial	// call without return value
00000418                    	.debug
00000418 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
0000042B 09 00 00 00        		.dd LM4-_main
0000042D 0D 00 0A 00        		.dw 0x0d,0x0a
0000802F                    	.code
                            	LM4:
0000802F 40 F0 42 82        		call _SP_SIOMassErase	// call without return value
0000042F                    	.debug
0000042F 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
00000442 0B 00 00 00        		.dd LM5-_main
00000444 0D 00 0A 00        		.dw 0x0d,0x0a
00008031                    	.code
                            	LM5:
00008031 05 93              		R1=BP	// QImode move
00008032 0D 05 02 00        		R2=BP+2
00008034 40 96              		R3=0	// HImode immediate to register move
00008035 40 98              		R4=0
00008036 02 93              		R1=R2	// QImode move
00008037 D1 D6              		[R1++]=R3	// [RD]=RS HImode, RD!=RS+1
00008038 C9 D8              		[R1--]=R4
00000446                    	.debug
00000446 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00000459 13 00 00 00        		.dd LM6-_main
0000045B 0D 00 0A 00        		.dw 0x0d,0x0a
00008039                    	.code
                            	LM6:
00008039 05 93              		R1=BP	// QImode move
0000803A 0D 05 05 00        		R2=BP+5
0000803C 40 92              		R1=0	// QImode move
0000803D 02 97              		R3=R2	// QImode move
0000803E C3 D2              		[R3]=R1	// QImode move
0000803F 05 93              		R1=BP	// QImode move
00008040 0D 05 02 00        		R2=BP+2
00008042 02 93              		R1=R2	// QImode move
00008043 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00008044 C9 98              		R4=[R1--]
00008045 D5 D6              		[BP++]=R3	// [RD]=RS HImode, RD!=RS+1
00008046 CD D8              		[BP--]=R4
00008047 05 93              		R1=BP	// QImode move
00008048 0D 05 04 00        		R2=BP+4
0000804A 46 92              		R1=6	// QImode move
0000804B 02 97              		R3=R2	// QImode move
0000804C C3 D2              		[R3]=R1	// QImode move
                            	L3:
0000804D 05 93              		R1=BP	// QImode move
0000804E 0D 05 05 00        		R2=BP+5
00008050 02 99              		R4=R2	// QImode move
00008051 C4 92              		R1=[R4]	// QImode move
00008052 49 42              		CMP R1,9	// QImode compare
00008053 02 9E              		JA L22	// QImode LEU
00008054 0F 9F 58 80        		PC=L6
                            	L22:
00008056 0F 9F 8C 80        		pc=L4	// jump
                            	L6:
0000045D                    	.debug
0000045D 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
00000470 32 00 00 00        		.dd LM7-_main
00000472 0D 00 0A 00        		.dw 0x0d,0x0a
00008058                    	.code
                            	LM7:
00008058 05 93              		R1=BP	// QImode move
00008059 0D 05 04 00        		R2=BP+4
0000805B 02 97              		R3=R2	// QImode move
0000805C C3 92              		R1=[R3]	// QImode move
0000805D C8 D2              		[SP--]=R1	// QImode move
0000805E D5 92              		R1=[BP++]	// RD=[RS] HImode, RD!=RS
0000805F CD 94              		R2=[BP--]
00008060 90 D4              		push R1,R2 to [sp]	// pushhi
00008061 40 F0 92 81        		call _SP_SIOSendAByte	// call without return value
00008063 43 00              		SP=SP+3
00000474                    	.debug
00000474 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
00000487 3E 00 00 00        		.dd LM8-_main
00000489 0D 00 0A 00        		.dw 0x0d,0x0a
00008064                    	.code
                            	LM8:
00008064 D5 92              		R1=[BP++]	// RD=[RS] HImode, RD!=RS
00008065 CD 94              		R2=[BP--]
00008066 09 07 01 00        		R3=R1+1	// HImode RD=RS+#IMM16
00008068 0A 19 00 00        		R4=R2+0, Carry
0000806A D5 D6              		[BP++]=R3	// [RD]=RS HImode, RD!=RS+1
0000806B CD D8              		[BP--]=R4
0000048B                    	.debug
0000048B 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
0000049E 46 00 00 00        		.dd LM9-_main
000004A0 0D 00 0A 00        		.dw 0x0d,0x0a
0000806C                    	.code
                            	LM9:
0000806C 05 95              		R2=BP	// QImode move
0000806D 0D 03 04 00        		R1=BP+4
0000806F 05 95              		R2=BP	// QImode move
00008070 0D 07 04 00        		R3=BP+4
00008072 03 99              		R4=R3	// QImode move
00008073 C4 94              		R2=[R4]	// QImode move
00008074 0A 07 01 00        		R3=R2+1
00008076 01 95              		R2=R1	// QImode move
00008077 C2 D6              		[R2]=R3	// QImode move
000004A2                    	.debug
000004A2 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
000004B5 52 00 00 00        		.dd LM10-_main
000004B7 0D 00 0A 00        		.dw 0x0d,0x0a
00008078                    	.code
                            	LM10:
00008078 41 92              		R1=1	// QImode move
00008079 19 D3 12 70        		[28690]=R1	// QImode move
000004B9                    	.debug
000004B9 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
000004CC 55 00 00 00        		.dd LM11-_main
000004CE 0D 00 0A 00        		.dw 0x0d,0x0a
0000807B                    	.code
                            	LM11:
                            	L5:
0000807B 05 93              		R1=BP	// QImode move
0000807C 0D 05 05 00        		R2=BP+5
0000807E 05 97              		R3=BP	// QImode move
0000807F 0D 03 05 00        		R1=BP+5
00008081 05 95              		R2=BP	// QImode move
00008082 0D 07 05 00        		R3=BP+5
00008084 03 99              		R4=R3	// QImode move
00008085 C4 94              		R2=[R4]	// QImode move
00008086 0A 07 01 00        		R3=R2+1
00008088 01 95              		R2=R1	// QImode move
00008089 C2 D6              		[R2]=R3	// QImode move
0000808A 0F 9F 4D 80        		pc=L3	// jump
                            	L4:
000004D0                    	.debug
000004D0 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
000004E3 66 00 00 00        		.dd LM12-_main
000004E5 0D 00 0A 00        		.dw 0x0d,0x0a
0000808C                    	.code
                            	LM12:
0000808C 05 93              		R1=BP	// QImode move
0000808D 0D 05 05 00        		R2=BP+5
0000808F 40 92              		R1=0	// QImode move
00008090 02 97              		R3=R2	// QImode move
00008091 C3 D2              		[R3]=R1	// QImode move
00008092 05 93              		R1=BP	// QImode move
00008093 0D 05 02 00        		R2=BP+2
00008095 02 93              		R1=R2	// QImode move
00008096 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00008097 C9 98              		R4=[R1--]
00008098 D5 D6              		[BP++]=R3	// [RD]=RS HImode, RD!=RS+1
00008099 CD D8              		[BP--]=R4
                            	L7:
0000809A 05 93              		R1=BP	// QImode move
0000809B 0D 05 05 00        		R2=BP+5
0000809D 02 97              		R3=R2	// QImode move
0000809E C3 92              		R1=[R3]	// QImode move
0000809F 49 42              		CMP R1,9	// QImode compare
000080A0 02 9E              		JA L23	// QImode LEU
000080A1 0F 9F A5 80        		PC=L10
                            	L23:
000080A3 0F 9F D3 80        		pc=L8	// jump
                            	L10:
000004E7                    	.debug
000004E7 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
000004FA 7F 00 00 00        		.dd LM13-_main
000004FC 0D 00 0A 00        		.dw 0x0d,0x0a
000080A5                    	.code
                            	LM13:
000080A5 D5 92              		R1=[BP++]	// RD=[RS] HImode, RD!=RS
000080A6 CD 94              		R2=[BP--]
000080A7 90 D4              		push R1,R2 to [sp]	// pushhi
000080A8 40 F0 B4 81        		call _SP_SIOReadAByte	// call with return value
000080AA 42 00              		SP=SP+2
000080AB 05 97              		R3=BP	// QImode move
000080AC 0D 05 07 00        		R2=BP+7
000080AE 05 97              		R3=BP	// QImode move
000080AF 0D 09 05 00        		R4=BP+5
000080B1 1C D8              		[bp+28]=R4	// QImode move
000080B2 1C 98              		R4=[bp+28]	// QImode move
000080B3 C4 96              		R3=[R4]	// QImode move
000080B4 03 05              		R2+=R3	// addqi3_r0r
000080B5 02 97              		R3=R2	// QImode move
000080B6 C3 D2              		[R3]=R1	// QImode move
000004FE                    	.debug
000004FE 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
00000511 91 00 00 00        		.dd LM14-_main
00000513 0D 00 0A 00        		.dw 0x0d,0x0a
000080B7                    	.code
                            	LM14:
000080B7 D5 92              		R1=[BP++]	// RD=[RS] HImode, RD!=RS
000080B8 CD 94              		R2=[BP--]
000080B9 09 07 01 00        		R3=R1+1	// HImode RD=RS+#IMM16
000080BB 0A 19 00 00        		R4=R2+0, Carry
000080BD D5 D6              		[BP++]=R3	// [RD]=RS HImode, RD!=RS+1
000080BE CD D8              		[BP--]=R4
00000515                    	.debug
00000515 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
00000528 99 00 00 00        		.dd LM15-_main
0000052A 0D 00 0A 00        		.dw 0x0d,0x0a
000080BF                    	.code
                            	LM15:
000080BF 41 92              		R1=1	// QImode move
000080C0 19 D3 12 70        		[28690]=R1	// QImode move
0000052C                    	.debug
0000052C 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
0000053F 9C 00 00 00        		.dd LM16-_main
00000541 0D 00 0A 00        		.dw 0x0d,0x0a
000080C2                    	.code
                            	LM16:
                            	L9:
000080C2 05 93              		R1=BP	// QImode move
000080C3 0D 05 05 00        		R2=BP+5
000080C5 05 97              		R3=BP	// QImode move
000080C6 0D 03 05 00        		R1=BP+5
000080C8 05 95              		R2=BP	// QImode move
000080C9 0D 07 05 00        		R3=BP+5
000080CB 03 99              		R4=R3	// QImode move
000080CC C4 94              		R2=[R4]	// QImode move
000080CD 0A 07 01 00        		R3=R2+1
000080CF 01 95              		R2=R1	// QImode move
000080D0 C2 D6              		[R2]=R3	// QImode move
000080D1 0F 9F 9A 80        		pc=L7	// jump
                            	L8:
00000543                    	.debug
00000543 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00000556 AD 00 00 00        		.dd LM17-_main
00000558 0D 00 0A 00        		.dw 0x0d,0x0a
000080D3                    	.code
                            	LM17:
000080D3 40 92              		R1=0	// QImode move
000080D4 C8 D2              		[SP--]=R1	// QImode move
000080D5 40 F0 62 82        		call _SP_SIOSectorErase	// call without return value
000080D7 41 00              		SP=SP+1
0000055A                    	.debug
0000055A 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
0000056D B2 00 00 00        		.dd LM18-_main
0000056F 0D 00 0A 00        		.dw 0x0d,0x0a
000080D8                    	.code
                            	LM18:
000080D8 05 93              		R1=BP	// QImode move
000080D9 0D 05 05 00        		R2=BP+5
000080DB 40 92              		R1=0	// QImode move
000080DC 02 97              		R3=R2	// QImode move
000080DD C3 D2              		[R3]=R1	// QImode move
000080DE 05 93              		R1=BP	// QImode move
000080DF 0D 05 02 00        		R2=BP+2
000080E1 02 93              		R1=R2	// QImode move
000080E2 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
000080E3 C9 98              		R4=[R1--]
000080E4 D5 D6              		[BP++]=R3	// [RD]=RS HImode, RD!=RS+1
000080E5 CD D8              		[BP--]=R4
000080E6 05 93              		R1=BP	// QImode move
000080E7 0D 05 04 00        		R2=BP+4
000080E9 42 92              		R1=2	// QImode move
000080EA 02 97              		R3=R2	// QImode move
000080EB C3 D2              		[R3]=R1	// QImode move
                            	L11:
000080EC 05 93              		R1=BP	// QImode move
000080ED 0D 05 05 00        		R2=BP+5
000080EF 02 99              		R4=R2	// QImode move
000080F0 C4 92              		R1=[R4]	// QImode move
000080F1 49 42              		CMP R1,9	// QImode compare
000080F2 02 9E              		JA L24	// QImode LEU
000080F3 0F 9F F7 80        		PC=L14
                            	L24:
000080F5 0F 9F 2B 81        		pc=L12	// jump
                            	L14:
00000571                    	.debug
00000571 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00000584 D1 00 00 00        		.dd LM19-_main
00000586 0D 00 0A 00        		.dw 0x0d,0x0a
000080F7                    	.code
                            	LM19:
000080F7 05 93              		R1=BP	// QImode move
000080F8 0D 05 04 00        		R2=BP+4
000080FA 02 97              		R3=R2	// QImode move
000080FB C3 92              		R1=[R3]	// QImode move
000080FC C8 D2              		[SP--]=R1	// QImode move
000080FD D5 92              		R1=[BP++]	// RD=[RS] HImode, RD!=RS
000080FE CD 94              		R2=[BP--]
000080FF 90 D4              		push R1,R2 to [sp]	// pushhi
00008100 40 F0 DA 81        		call _SP_SIOSendAWord	// call without return value
00008102 43 00              		SP=SP+3
00000588                    	.debug
00000588 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
0000059B DD 00 00 00        		.dd LM20-_main
0000059D 0D 00 0A 00        		.dw 0x0d,0x0a
00008103                    	.code
                            	LM20:
00008103 D5 92              		R1=[BP++]	// RD=[RS] HImode, RD!=RS
00008104 CD 94              		R2=[BP--]
00008105 09 07 02 00        		R3=R1+2	// HImode RD=RS+#IMM16
00008107 0A 19 00 00        		R4=R2+0, Carry
00008109 D5 D6              		[BP++]=R3	// [RD]=RS HImode, RD!=RS+1
0000810A CD D8              		[BP--]=R4
0000059F                    	.debug
0000059F 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000005B2 E5 00 00 00        		.dd LM21-_main
000005B4 0D 00 0A 00        		.dw 0x0d,0x0a
0000810B                    	.code
                            	LM21:
0000810B 05 95              		R2=BP	// QImode move
0000810C 0D 03 04 00        		R1=BP+4
0000810E 05 95              		R2=BP	// QImode move
0000810F 0D 07 04 00        		R3=BP+4
00008111 03 99              		R4=R3	// QImode move
00008112 C4 94              		R2=[R4]	// QImode move
00008113 0A 07 01 00        		R3=R2+1
00008115 01 95              		R2=R1	// QImode move
00008116 C2 D6              		[R2]=R3	// QImode move
000005B6                    	.debug
000005B6 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
000005C9 F1 00 00 00        		.dd LM22-_main
000005CB 0D 00 0A 00        		.dw 0x0d,0x0a
00008117                    	.code
                            	LM22:
00008117 41 92              		R1=1	// QImode move
00008118 19 D3 12 70        		[28690]=R1	// QImode move
000005CD                    	.debug
000005CD 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
000005E0 F4 00 00 00        		.dd LM23-_main
000005E2 0D 00 0A 00        		.dw 0x0d,0x0a
0000811A                    	.code
                            	LM23:
                            	L13:
0000811A 05 93              		R1=BP	// QImode move
0000811B 0D 05 05 00        		R2=BP+5
0000811D 05 97              		R3=BP	// QImode move
0000811E 0D 03 05 00        		R1=BP+5
00008120 05 95              		R2=BP	// QImode move
00008121 0D 07 05 00        		R3=BP+5
00008123 03 99              		R4=R3	// QImode move
00008124 C4 94              		R2=[R4]	// QImode move
00008125 0A 07 01 00        		R3=R2+1
00008127 01 95              		R2=R1	// QImode move
00008128 C2 D6              		[R2]=R3	// QImode move
00008129 0F 9F EC 80        		pc=L11	// jump
                            	L12:
000005E4                    	.debug
000005E4 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
000005F7 05 01 00 00        		.dd LM24-_main
000005F9 0D 00 0A 00        		.dw 0x0d,0x0a
0000812B                    	.code
                            	LM24:
0000812B 05 93              		R1=BP	// QImode move
0000812C 0D 05 05 00        		R2=BP+5
0000812E 40 92              		R1=0	// QImode move
0000812F 02 97              		R3=R2	// QImode move
00008130 C3 D2              		[R3]=R1	// QImode move
00008131 05 93              		R1=BP	// QImode move
00008132 0D 05 02 00        		R2=BP+2
00008134 02 93              		R1=R2	// QImode move
00008135 D1 96              		R3=[R1++]	// RD=[RS] HImode, RD!=RS
00008136 C9 98              		R4=[R1--]
00008137 D5 D6              		[BP++]=R3	// [RD]=RS HImode, RD!=RS+1
00008138 CD D8              		[BP--]=R4
                            	L15:
00008139 05 93              		R1=BP	// QImode move
0000813A 0D 05 05 00        		R2=BP+5
0000813C 02 97              		R3=R2	// QImode move
0000813D C3 92              		R1=[R3]	// QImode move
0000813E 49 42              		CMP R1,9	// QImode compare
0000813F 02 9E              		JA L25	// QImode LEU
00008140 0F 9F 44 81        		PC=L18
                            	L25:
00008142 0F 9F 72 81        		pc=L16	// jump
                            	L18:
000005FB                    	.debug
000005FB 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
0000060E 1E 01 00 00        		.dd LM25-_main
00000610 0D 00 0A 00        		.dw 0x0d,0x0a
00008144                    	.code
                            	LM25:
00008144 D5 92              		R1=[BP++]	// RD=[RS] HImode, RD!=RS
00008145 CD 94              		R2=[BP--]
00008146 90 D4              		push R1,R2 to [sp]	// pushhi
00008147 40 F0 10 82        		call _SP_SIOReadAWord	// call with return value
00008149 42 00              		SP=SP+2
0000814A 05 97              		R3=BP	// QImode move
0000814B 0D 05 11 00        		R2=BP+17
0000814D 05 97              		R3=BP	// QImode move
0000814E 0D 09 05 00        		R4=BP+5
00008150 1C D8              		[bp+28]=R4	// QImode move
00008151 1C 98              		R4=[bp+28]	// QImode move
00008152 C4 96              		R3=[R4]	// QImode move
00008153 03 05              		R2+=R3	// addqi3_r0r
00008154 02 97              		R3=R2	// QImode move
00008155 C3 D2              		[R3]=R1	// QImode move
00000612                    	.debug
00000612 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
00000625 30 01 00 00        		.dd LM26-_main
00000627 0D 00 0A 00        		.dw 0x0d,0x0a
00008156                    	.code
                            	LM26:
00008156 D5 92              		R1=[BP++]	// RD=[RS] HImode, RD!=RS
00008157 CD 94              		R2=[BP--]
00008158 09 07 02 00        		R3=R1+2	// HImode RD=RS+#IMM16
0000815A 0A 19 00 00        		R4=R2+0, Carry
0000815C D5 D6              		[BP++]=R3	// [RD]=RS HImode, RD!=RS+1
0000815D CD D8              		[BP--]=R4
00000629                    	.debug
00000629 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
0000063C 38 01 00 00        		.dd LM27-_main
0000063E 0D 00 0A 00        		.dw 0x0d,0x0a
0000815E                    	.code
                            	LM27:
0000815E 41 92              		R1=1	// QImode move
0000815F 19 D3 12 70        		[28690]=R1	// QImode move
00000640                    	.debug
00000640 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00000653 3B 01 00 00        		.dd LM28-_main
00000655 0D 00 0A 00        		.dw 0x0d,0x0a
00008161                    	.code
                            	LM28:
                            	L17:
00008161 05 93              		R1=BP	// QImode move
00008162 0D 05 05 00        		R2=BP+5
00008164 05 97              		R3=BP	// QImode move
00008165 0D 03 05 00        		R1=BP+5
00008167 05 95              		R2=BP	// QImode move
00008168 0D 07 05 00        		R3=BP+5
0000816A 03 99              		R4=R3	// QImode move
0000816B C4 94              		R2=[R4]	// QImode move
0000816C 0A 07 01 00        		R3=R2+1
0000816E 01 95              		R2=R1	// QImode move
0000816F C2 D6              		[R2]=R3	// QImode move
00008170 0F 9F 39 81        		pc=L15	// jump
                            	L16:
00000657                    	.debug
00000657 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
0000066A 4C 01 00 00        		.dd LM29-_main
0000066C 0D 00 0A 00        		.dw 0x0d,0x0a
00008172                    	.code
                            	LM29:
                            	L19:
00008172 0F 9F 76 81        		pc=L21	// jump
00008174 0F 9F 7B 81        		pc=L20	// jump
                            	L21:
0000066E                    	.debug
0000066E 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00000681 50 01 00 00        		.dd LM30-_main
00000683 0D 00 0A 00        		.dw 0x0d,0x0a
00008176                    	.code
                            	LM30:
00008176 41 92              		R1=1	// QImode move
00008177 19 D3 12 70        		[28690]=R1	// QImode move
00000685                    	.debug
00000685 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000698 53 01 00 00        		.dd LM31-_main
0000069A 0D 00 0A 00        		.dw 0x0d,0x0a
00008179                    	.code
                            	LM31:
00008179 0F 9F 72 81        		pc=L19	// jump
                            	L20:
0000069C                    	.debug
0000069C 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
000006AF 55 01 00 00        		.dd LM32-_main
000006B1 0D 00 0A 00        		.dw 0x0d,0x0a
0000817B                    	.code
                            	LM32:
                            	LBE2:
000006B3                    	.debug
000006B3 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
000006C6 55 01 00 00        		.dd LM33-_main
000006C8 0D 00 0A 00        		.dw 0x0d,0x0a
0000817B                    	.code
                            	LM33:
                            	L2:
                            	
0000817B 5D 00              		sp+=29
0000817C 88 98              		pop bp from [sp]
0000817D 90 9A              		retf
                            		.endp	// end of main
                            	
000006CA                    	.debug
000006CA 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000006DC 07 00 00 00        		.dd LBB2-_main
000006DE 0D 00 0A 00        		.dw 0x0d,0x0a
0000817E                    	.code
000006E0                    	.debug
000006E0 2E 00 73 00        		.dw '.stabs "ulAddr:5",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6C 00
         41 00 64 00
         64 00 72 00
         3A 00 35 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000817E                    	.CODE
000006FD                    	.debug
000006FD 2E 00 73 00        		.dw '.stabs "ulStartAddr:5",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6C 00
         53 00 74 00
         61 00 72 00
         74 00 41 00
         64 00 64 00
         72 00 3A 00
         35 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000817E                    	.CODE
0000071F                    	.debug
0000071F 2E 00 73 00        		.dw '.stabs "uiData:4",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         44 00 61 00
         74 00 61 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
0000817E                    	.CODE
0000073C                    	.debug
0000073C 2E 00 73 00        		.dw '.stabs "i:4",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000817E                    	.CODE
00000754                    	.debug
00000754 2E 00 73 00        		.dw '.stabs "j:4",128,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000817E                    	.CODE
0000076C                    	.debug
0000076C 2E 00 73 00        		.dw '.stabs "uiByteBuffer:20=ar1;0;9;4",128,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         42 00 79 00
         74 00 65 00
         42 00 75 00
         66 00 66 00
         65 00 72 00
         3A 00 32 00
         30 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         39 00 3B 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 37 00
         0D 00 0A 00
0000817E                    	.CODE
0000079A                    	.debug
0000079A 2E 00 73 00        		.dw '.stabs "uiWordBuffer:21=ar1;0;9;4",128,0,0,17',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         57 00 6F 00
         72 00 64 00
         42 00 75 00
         66 00 66 00
         65 00 72 00
         3A 00 32 00
         31 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         39 00 3B 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         37 00 0D 00
         0A 00      
0000817E                    	.CODE
000007C9                    	.debug
000007C9 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000007DB 55 01 00 00        		.dd LBE2-_main
000007DD 0D 00 0A 00        		.dw 0x0d,0x0a
0000817E                    	.code
000007DF                    	.debug
000007DF 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000007E8 58 01 00 00        		.dd LME1-_main
000007EA 0D 00 0A 00        		.dw 0x0d,0x0a
0000817E                    	.code
                            	LME1:
                            	.external _SP_SIOReadAWord
                            	.external _SP_SIOSendAWord
                            	.external _SP_SIOSectorErase
                            	.external _SP_SIOReadAByte
                            	.external _SP_SIOSendAByte
                            	.external _SP_SIOMassErase
                            	.external _SP_SIOInitial
                            		.end
0 error(s), 0 warning(s).



