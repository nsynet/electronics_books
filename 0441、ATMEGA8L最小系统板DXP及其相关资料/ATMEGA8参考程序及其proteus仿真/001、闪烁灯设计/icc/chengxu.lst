__text_start:
__start:
    002A E5CF      LDI	R28,0x5F
    002B E0D4      LDI	R29,4
    002C BFCD      OUT	0x3D,R28
    002D BFDE      OUT	0x3E,R29
    002E 51C0      SUBI	R28,0x10
    002F 40D0      SBCI	R29,0
    0030 EA0A      LDI	R16,0xAA
    0031 8308      STD	Y+0,R16
    0032 2400      CLR	R0
    0033 E6E0      LDI	R30,0x60
    0034 E0F0      LDI	R31,0
    0035 E010      LDI	R17,0
    0036 36E0      CPI	R30,0x60
    0037 07F1      CPC	R31,R17
    0038 F011      BEQ	0x003B
    0039 9201      ST	R0,Z+
    003A CFFB      RJMP	0x0036
    003B 8300      STD	Z+0,R16
    003C E5E4      LDI	R30,0x54
    003D E0F0      LDI	R31,0
    003E E6A0      LDI	R26,0x60
    003F E0B0      LDI	R27,0
    0040 E010      LDI	R17,0
    0041 35E4      CPI	R30,0x54
    0042 07F1      CPC	R31,R17
    0043 F021      BEQ	0x0048
    0044 95C8      LPM
    0045 9631      ADIW	R30,1
    0046 920D      ST	R0,X+
    0047 CFF9      RJMP	0x0041
    0048 940E005E  CALL	_main
_exit:
    004A CFFF      RJMP	_exit
_DelayMS:
  j                    --> R20
  i                    --> R16
    004B 940E006E  CALL	push_gset1
FILE: D:\整理\个人总结的M8程序\001、闪烁灯设计\icc\chengxu.c
(0001) #include <iom8v.h>
(0002) /**********************************************************************
(0003) 				  函数数据类型说明							   	
(0004) **********************************************************************/
(0005) #define uchar unsigned char 
(0006) #define uint unsigned int
(0007) /**********************************************************************
(0008) 				  MS级延时函数程序，参数i 延时时间								   	
(0009) **********************************************************************/
(0010) void DelayMS(uint i)
(0011) {
(0012) uint j;
(0013) for(;i!=0;i--)
    004D C00A      RJMP	0x0058
(0014) {
(0015) for(j=8000;j!=0;j--);
    004E E440      LDI	R20,0x40
    004F E15F      LDI	R21,0x1F
    0050 C002      RJMP	0x0053
    0051 5041      SUBI	R20,1
    0052 4050      SBCI	R21,0
    0053 3040      CPI	R20,0
    0054 0745      CPC	R20,R21
    0055 F7D9      BNE	0x0051
    0056 5001      SUBI	R16,1
    0057 4010      SBCI	R17,0
    0058 3000      CPI	R16,0
    0059 0701      CPC	R16,R17
    005A F799      BNE	0x004E
    005B 940E0071  CALL	pop_gset1
    005D 9508      RET
(0016) }
(0017) }
(0018) /**********************************************************************
(0019) 				   主函数						   	
(0020) **********************************************************************/
(0021) void main(void)
(0022) {
(0023)  DDRB=0XFF;//端口设置，PB口设置为推挽1输出
_main:
    005E EF8F      LDI	R24,0xFF
    005F BB87      OUT	0x17,R24
(0024)  PORTB=0XFF;
    0060 BB88      OUT	0x18,R24
    0061 C00A      RJMP	0x006C
(0025)  			while(1)//程序无条件执行
(0026) 			{
(0027) 			    PORTB=0X00;
    0062 2422      CLR	R2
    0063 BA28      OUT	0x18,R2
(0028) 			 	DelayMS(100);//延时时间约100MS
    0064 E604      LDI	R16,0x64
    0065 E010      LDI	R17,0
    0066 DFE4      RCALL	_DelayMS
(0029) 				PORTB=0XFF;
    0067 EF8F      LDI	R24,0xFF
    0068 BB88      OUT	0x18,R24
(0030) 			 	DelayMS(100);//延时时间约100MS
FILE: <library>
    0069 E604      LDI	R16,0x64
    006A E010      LDI	R17,0
    006B DFDF      RCALL	_DelayMS
    006C CFF5      RJMP	0x0062
    006D 9508      RET
push_gset1:
    006E 935A      ST	R21,-Y
    006F 934A      ST	R20,-Y
    0070 9508      RET
pop_gset1:
    0071 E0E1      LDI	R30,1
pop:
    0072 9149      LD	R20,Y+
    0073 9159      LD	R21,Y+
    0074 FDE0      SBRC	R30,0
    0075 9508      RET
    0076 9169      LD	R22,Y+
    0077 9179      LD	R23,Y+
    0078 FDE1      SBRC	R30,1
    0079 9508      RET
    007A 90A9      LD	R10,Y+
    007B 90B9      LD	R11,Y+
    007C FDE2      SBRC	R30,2
    007D 9508      RET
    007E 90C9      LD	R12,Y+
    007F 90D9      LD	R13,Y+
    0080 FDE3      SBRC	R30,3
    0081 9508      RET
    0082 90E9      LD	R14,Y+
    0083 90F9      LD	R15,Y+
    0084 9508      RET
