__start:
__text_start:
    0013 E5CF      LDI	R28,0x5F
    0014 E0D4      LDI	R29,4
    0015 BFCD      OUT	0x3D,R28
    0016 BFDE      OUT	0x3E,R29
    0017 51C0      SUBI	R28,0x10
    0018 40D0      SBCI	R29,0
    0019 EA0A      LDI	R16,0xAA
    001A 8308      STD	Y+0,R16
    001B 2400      CLR	R0
    001C E6E0      LDI	R30,0x60
    001D E0F0      LDI	R31,0
    001E E010      LDI	R17,0
    001F 36E0      CPI	R30,0x60
    0020 07F1      CPC	R31,R17
    0021 F011      BEQ	0x0024
    0022 9201      ST	R0,Z+
    0023 CFFB      RJMP	0x001F
    0024 8300      STD	Z+0,R16
    0025 E2E6      LDI	R30,0x26
    0026 E0F0      LDI	R31,0
    0027 E6A0      LDI	R26,0x60
    0028 E0B0      LDI	R27,0
    0029 E010      LDI	R17,0
    002A 32E6      CPI	R30,0x26
    002B 07F1      CPC	R31,R17
    002C F021      BEQ	0x0031
    002D 95C8      LPM
    002E 9631      ADIW	R30,1
    002F 920D      ST	R0,X+
    0030 CFF9      RJMP	0x002A
    0031 D00A      RCALL	_main
_exit:
    0032 CFFF      RJMP	_exit
FILE: F:\产品最新整理\汇诚科技产品最新整理\ATMEGA8最小系统\仿真程序\icc\chengxu.c
(0001) #include <iom8v.h>
(0002) #define uchar unsigned char 
(0003) #define uint unsigned int
(0004) //////////////////////////////初始化////////////////////////////////////
(0005) void Init_IO(void)//初始化I/O
(0006) {
(0007) //设置B口为输入
(0008) DDRB=0xFF;
_Init_IO:
    0033 EF8F      LDI	R24,0xFF
    0034 BB87      OUT	0x17,R24
(0009) PORTB=0xFF;
    0035 BB88      OUT	0x18,R24
(0010) //设置C口为输出
(0011) DDRC=0xFF;
    0036 BB84      OUT	0x14,R24
(0012) PORTC=0xFF;
    0037 BB85      OUT	0x15,R24
(0013) //设置D口为输出
(0014) DDRD=0X00;
    0038 2422      CLR	R2
    0039 BA21      OUT	0x11,R2
(0015) PORTD=0xff;
    003A BB82      OUT	0x12,R24
    003B 9508      RET
(0016) }
(0017) /////////////////////////////主函数/////////////////////////////////////
(0018) void main(void)
(0019) {
(0020) Init_IO();  //初始化I/O
_main:
    003C DFF6      RCALL	_Init_IO
    003D C013      RJMP	0x0051
(0021) while(1)
(0022) {
(0023) while((PIND&0X04)==0)//按键加计数标志
(0024) {PORTB=0x55;}
    003E E585      LDI	R24,0x55
    003F BB88      OUT	0x18,R24
    0040 9B82      SBIS	0x10,2
    0041 CFFC      RJMP	0x003E
    0042 C002      RJMP	0x0045
(0025) while((PIND&0X08)==0)//按键减计数标志
(0026) {PORTB=0xaa;}
    0043 EA8A      LDI	R24,0xAA
    0044 BB88      OUT	0x18,R24
    0045 9B83      SBIS	0x10,3
    0046 CFFC      RJMP	0x0043
    0047 C002      RJMP	0x004A
(0027) while((PIND&0X10)==0)//按键加计数标志
(0028) {PORTB=0x0f;}
    0048 E08F      LDI	R24,0xF
    0049 BB88      OUT	0x18,R24
    004A 9B84      SBIS	0x10,4
    004B CFFC      RJMP	0x0048
    004C C002      RJMP	0x004F
(0029) while((PIND&0X20)==0)//按键减计数标志
(0030) {PORTB=0xf0;}
FILE: <library>
    004D EF80      LDI	R24,0xF0
    004E BB88      OUT	0x18,R24
    004F 9B85      SBIS	0x10,5
    0050 CFFC      RJMP	0x004D
    0051 CFEE      RJMP	0x0040
    0052 9508      RET
