                        .module chengxu.c
                        .area data(ram, con, rel)
 0000           _Flag::
 0000                   .blkb 1
                        .area idata
 0000 00                .byte 0
                        .area data(ram, con, rel)
 0001                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0001                   .dbsym e Flag _Flag c
 0001           _Table::
 0001                   .blkb 2
                        .area idata
 0001 3F06              .byte 63,6
                        .area data(ram, con, rel)
 0003                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0003                   .blkb 2
                        .area idata
 0003 5B4F              .byte 91,'O
                        .area data(ram, con, rel)
 0005                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0005                   .blkb 2
                        .area idata
 0005 666D              .byte 'f,'m
                        .area data(ram, con, rel)
 0007                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0007                   .blkb 2
                        .area idata
 0007 7D07              .byte 125,7
                        .area data(ram, con, rel)
 0009                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0009                   .blkb 2
                        .area idata
 0009 7F6F              .byte 127,'o
                        .area data(ram, con, rel)
 000B                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 000B                   .blkb 2
                        .area idata
 000B 777C              .byte 'w,124
                        .area data(ram, con, rel)
 000D                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 000D                   .blkb 2
                        .area idata
 000D 395E              .byte 57,94
                        .area data(ram, con, rel)
 000F                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 000F                   .blkb 2
                        .area idata
 000F 7971              .byte 'y,'q
                        .area data(ram, con, rel)
 0011                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0011                   .blkb 4
                        .area idata
 0011 00000000          .byte 0,0,0,0
                        .area data(ram, con, rel)
 0015                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0015                   .dbsym e Table _Table A[20:20]c
 0015           _Data::
 0015                   .blkb 2
                        .area idata
 0015 0000              .byte 0,0
                        .area data(ram, con, rel)
 0017                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0017                   .blkb 2
                        .area idata
 0017 0000              .byte 0,0
                        .area data(ram, con, rel)
 0019                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0019                   .dbsym e Data _Data A[4:4]c
 0019           _CNT::
 0019                   .blkb 2
                        .area idata
 0019 0000              .word 0
                        .area data(ram, con, rel)
 001B                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 001B                   .dbsym e CNT _CNT i
                        .area text(rom, con, rel)
 0000                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0000                   .dbfunc e DelayMs _DelayMs fV
 0000           ;              j -> R20,R21
 0000           ;              i -> R16,R17
                        .even
 0000           _DelayMs::
 0000 0E940000          xcall push_gset1
 0004                   .dbline -1
 0004                   .dbline 22
 0004           ; 
 0004           ; //***************FileName:Capature.C***************//
 0004           ; //***************ICCAVR V6.30编译*****************//
 0004           ; 
 0004           ; #include <iom16v.h> 
 0004           ; #include <macros.h>          
 0004           ; #define uchar unsigned char
 0004           ; #define uint  unsigned int
 0004           ; 
 0004           ; #define CON 1000      //频率常数定义
 0004           ; uchar Flag=0;         //捕获次数定义
 0004           ; 
 0004           ; //数码管字型表，对应0，1，2，3，4，5，6，7，8，9,A,b,C,d,E,F//
 0004           ; uchar Table[20]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
 0004           ;                  0x7f,0x6f,0x77,0x7c,0x39,0x5E,0x79,0x71};
 0004           ; uchar Data[4]={0,0,0,0};       //显示初始值：0 0 0 0
 0004           ; uint  CNT1;                    //第一次捕获值
 0004           ; uint  CNT2;                    //第二此捕获值
 0004           ; uint  CNT=0;                 //捕获差值 
 0004           ;       
 0004           ; void DelayMs(uint i)           //Ms级延时，参数i为延时时间
 0004           ; {uint j;
 0004                   .dbline 23
 0004           ;  for(;i!=0;i--)
 0004 0AC0              xjmp L5
 0006           L2:
 0006                   .dbline 24
 0006                   .dbline 24
 0006 40ED              ldi R20,2000
 0008 57E0              ldi R21,7
 000A 02C0              xjmp L9
 000C           L6:
 000C                   .dbline 24
 000C                   .dbline 24
 000C                   .dbline 24
 000C           L7:
 000C                   .dbline 24
 000C 4150              subi R20,1
 000E 5040              sbci R21,0
 0010           L9:
 0010                   .dbline 24
 0010 4030              cpi R20,0
 0012 4507              cpc R20,R21
 0014 D9F7              brne L6
 0016           X0:
 0016                   .dbline 24
 0016           L3:
 0016                   .dbline 23
 0016 0150              subi R16,1
 0018 1040              sbci R17,0
 001A           L5:
 001A                   .dbline 23
 001A 0030              cpi R16,0
 001C 0107              cpc R16,R17
 001E 99F7              brne L2
 0020           X1:
 0020                   .dbline -2
 0020           L1:
 0020 0E940000          xcall pop_gset1
 0024                   .dbline 0 ; func end
 0024 0895              ret
 0026                   .dbsym r j 20 i
 0026                   .dbsym r i 16 i
 0026                   .dbend
 0026                   .dbfunc e Display _Display fV
 0026           ;            sel -> R20
 0026           ;              i -> R22
 0026           ;              p -> R10,R11
                        .even
 0026           _Display::
 0026 0E940000          xcall push_gset3
 002A 5801              movw R10,R16
 002C                   .dbline -1
 002C                   .dbline 28
 002C           ;   {for(j=2000;j!=0;j--) {;}}
 002C           ; }
 002C           ; 
 002C           ; void Display(uchar *p)         //动态显示函数，参数p为待显示的数组名
 002C           ; {uchar i,sel=0x08;           
 002C                   .dbline 28
 002C 48E0              ldi R20,8
 002E                   .dbline 29
 002E           ;  for(i=0;i<4;i++)
 002E 6627              clr R22
 0030 14C0              xjmp L14
 0032           L11:
 0032                   .dbline 30
 0032                   .dbline 30
 0032 242E              mov R2,R20
 0034 2094              com R2
 0036 25BA              out 0x15,R2
 0038                   .dbline 31
 0038 E62F              mov R30,R22
 003A FF27              clr R31
 003C EA0D              add R30,R10
 003E FB1D              adc R31,R11
 0040 E081              ldd R30,z+0
 0042 FF27              clr R31
 0044 80E0              ldi R24,<_Table
 0046 90E0              ldi R25,>_Table
 0048 E80F              add R30,R24
 004A F91F              adc R31,R25
 004C 2080              ldd R2,z+0
 004E 2BBA              out 0x1b,R2
 0050                   .dbline 32
 0050 02E0              ldi R16,2
 0052 10E0              ldi R17,0
 0054 D5DF              xcall _DelayMs
 0056                   .dbline 33
 0056 4695              lsr R20
 0058                   .dbline 34
 0058           L12:
 0058                   .dbline 29
 0058 6395              inc R22
 005A           L14:
 005A                   .dbline 29
 005A 6430              cpi R22,4
 005C 50F3              brlo L11
 005E                   .dbline -2
 005E           L10:
 005E 0E940000          xcall pop_gset3
 0062                   .dbline 0 ; func end
 0062 0895              ret
 0064                   .dbsym r sel 20 c
 0064                   .dbsym r i 22 c
 0064                   .dbsym r p 10 pc
 0064                   .dbend
 0064                   .dbfunc e HZ _HZ fV
 0064           ;            TEM -> R22,R23
 0064           ;              p -> R20,R21
 0064           ;              i -> R10,R11
                        .even
 0064           _HZ::
 0064 0E940000          xcall push_gset3
 0068 A901              movw R20,R18
 006A 5801              movw R10,R16
 006C                   .dbline -1
 006C                   .dbline 38
 006C           ;   {PORTC=~sel;                  //选通最右边的数码管
 006C           ;    PORTA=Table[p[i]];          //送字型码
 006C           ;    DelayMs(2);                 //显示延时    
 006C           ;    sel=sel>>1;                 //移位以显示前一位
 006C           ;   }
 006C           ; }
 006C           ; 
 006C           ; void HZ(uint i,uchar *p)
 006C           ; {uint TEM;
 006C                   .dbline 39
 006C           ;  p[0]=CON/i;
 006C 08EE              ldi R16,1000
 006E 13E0              ldi R17,3
 0070 9501              movw R18,R10
 0072 0E940000          xcall div16u
 0076 FA01              movw R30,R20
 0078 0083              std z+0,R16
 007A                   .dbline 40
 007A           ;  TEM=CON%i;
 007A 08EE              ldi R16,1000
 007C 13E0              ldi R17,3
 007E 9501              movw R18,R10
 0080 0E940000          xcall mod16u
 0084 B801              movw R22,R16
 0086                   .dbline 41
 0086           ;  TEM=TEM*10;
 0086 0AE0              ldi R16,10
 0088 10E0              ldi R17,0
 008A 9B01              movw R18,R22
 008C 0E940000          xcall empy16s
 0090 B801              movw R22,R16
 0092                   .dbline 42
 0092           ;  p[1]=TEM/i;
 0092 9501              movw R18,R10
 0094 0E940000          xcall div16u
 0098 FA01              movw R30,R20
 009A 0183              std z+1,R16
 009C                   .dbline 43
 009C           ;  TEM=TEM%i;
 009C 9501              movw R18,R10
 009E 8B01              movw R16,R22
 00A0 0E940000          xcall mod16u
 00A4 B801              movw R22,R16
 00A6                   .dbline 44
 00A6           ;  TEM=TEM*10;
 00A6 0AE0              ldi R16,10
 00A8 10E0              ldi R17,0
 00AA 9B01              movw R18,R22
 00AC 0E940000          xcall empy16s
 00B0 B801              movw R22,R16
 00B2                   .dbline 45
 00B2           ;  p[2]=TEM/i;
 00B2 9501              movw R18,R10
 00B4 0E940000          xcall div16u
 00B8 FA01              movw R30,R20
 00BA 0283              std z+2,R16
 00BC                   .dbline 46
 00BC           ;  TEM=TEM%i;
 00BC 9501              movw R18,R10
 00BE 8B01              movw R16,R22
 00C0 0E940000          xcall mod16u
 00C4 B801              movw R22,R16
 00C6                   .dbline 47
 00C6           ;  TEM=TEM*10;
 00C6 0AE0              ldi R16,10
 00C8 10E0              ldi R17,0
 00CA 9B01              movw R18,R22
 00CC 0E940000          xcall empy16s
 00D0 B801              movw R22,R16
 00D2                   .dbline 48
 00D2           ;  p[3]=TEM/i;
 00D2 9501              movw R18,R10
 00D4 0E940000          xcall div16u
 00D8 FA01              movw R30,R20
 00DA 0383              std z+3,R16
 00DC                   .dbline -2
 00DC           L15:
 00DC 0E940000          xcall pop_gset3
 00E0                   .dbline 0 ; func end
 00E0 0895              ret
 00E2                   .dbsym r TEM 22 i
 00E2                   .dbsym r p 20 pc
 00E2                   .dbsym r i 10 i
 00E2                   .dbend
 00E2                   .dbfunc e Init_IO _Init_IO fV
                        .even
 00E2           _Init_IO::
 00E2                   .dbline -1
 00E2                   .dbline 52
 00E2           ; }
 00E2           ; 
 00E2           ; void Init_IO(void)             //初始化I/O口
 00E2           ; {DDRA=0xff;                    //设置A口为推挽1输出
 00E2                   .dbline 52
 00E2 8FEF              ldi R24,255
 00E4 8ABB              out 0x1a,R24
 00E6                   .dbline 53
 00E6           ;  PORTA=0xff;
 00E6 8BBB              out 0x1b,R24
 00E8                   .dbline 54
 00E8           ;  DDRB=0xff;                    //设置A口为推挽1输出
 00E8 87BB              out 0x17,R24
 00EA                   .dbline 55
 00EA           ;  PORTB=0xff;
 00EA 88BB              out 0x18,R24
 00EC                   .dbline 56
 00EC           ;  DDRC=0xff;                    //设置C口为推挽1输出             
 00EC 84BB              out 0x14,R24
 00EE                   .dbline 57
 00EE           ;  PORTC=0xff;
 00EE 85BB              out 0x15,R24
 00F0                   .dbline 58
 00F0           ;  DDRD=0x00;                    //设置D口为带上拉电阻输入
 00F0 2224              clr R2
 00F2 21BA              out 0x11,R2
 00F4                   .dbline 59
 00F4           ;  PORTD=0x00;    
 00F4 22BA              out 0x12,R2
 00F6                   .dbline -2
 00F6           L16:
 00F6                   .dbline 0 ; func end
 00F6 0895              ret
 00F8                   .dbend
 00F8                   .dbfunc e Init_Timer1 _Init_Timer1 fV
                        .even
 00F8           _Init_Timer1::
 00F8                   .dbline -1
 00F8                   .dbline 63
 00F8           ; }
 00F8           ; 
 00F8           ; void Init_Timer1(void)         //初始化T/C1的输入捕获中断
 00F8           ; {TIMSK=TIMSK|0x20;             //输入捕获使能
 00F8                   .dbline 63
 00F8 89B7              in R24,0x39
 00FA 8062              ori R24,32
 00FC 89BF              out 0x39,R24
 00FE                   .dbline 64
 00FE           ;  TCCR1B=0xC2;                  //输入捕获噪音使能，下降沿捕获，时钟8分频1uS计数一次。
 00FE 82EC              ldi R24,194
 0100 8EBD              out 0x2e,R24
 0102                   .dbline 65
 0102           ;  TIFR=0x20;                    //清中断标志
 0102 80E2              ldi R24,32
 0104 88BF              out 0x38,R24
 0106                   .dbline 66
 0106           ;  SREG=SREG&0X7F;               //全局中断关
 0106 8FB7              in R24,0x3f
 0108 8F77              andi R24,127
 010A 8FBF              out 0x3f,R24
 010C                   .dbline -2
 010C           L17:
 010C                   .dbline 0 ; func end
 010C 0895              ret
 010E                   .dbend
 010E                   .dbfunc e main _main fV
 010E           ;              i -> R20
                        .even
 010E           _main::
 010E                   .dbline -1
 010E                   .dbline 70
 010E           ; } 
 010E           ; 
 010E           ; void main(void)
 010E           ; {uchar i;
 010E                   .dbline 71
 010E           ;  Init_IO();                    //初始化I/O口
 010E E9DF              xcall _Init_IO
 0110                   .dbline 72
 0110           ;  PORTA=0xff;                   //点亮以测试所有的数码管
 0110 8FEF              ldi R24,255
 0112 8BBB              out 0x1b,R24
 0114                   .dbline 73
 0114           ;  PORTC=0xf0;   
 0114 80EF              ldi R24,240
 0116 85BB              out 0x15,R24
 0118                   .dbline 78
 0118           ;  //DelayMs(300);
 0118           ;  //PORTC=0xff;                   //熄灭所有的数码管
 0118           ;  //Pre_Display();                //预显示，数码管显示测试
 0118           ; // PORTC=0xff;
 0118           ;  Init_Timer1();                //T/C1初试化 
 0118 EFDF              xcall _Init_Timer1
 011A 58C0              xjmp L20
 011C           X2:
 011C                   .dbline 80
 011C           ;  while(1)
 011C           ;   {
 011C           L22:
 011C                   .dbline 82
 011C                   .dbline 82
 011C 88B7              in R24,0x38
 011E 8062              ori R24,32
 0120 88BF              out 0x38,R24
 0122                   .dbline 83
 0122 26B4              in R2,0x26
 0124 3324              clr R3
 0126 30921A00          sts _CNT+1,R3
 012A 20921900          sts _CNT,R2
 012E                   .dbline 84
 012E 26B4              in R2,0x26
 0130 37B4              in R3,0x27
 0132 30920100          sts _CNT2+1,R3
 0136 20920000          sts _CNT2,R2
 013A                   .dbline 85
 013A 20900200          lds R2,_CNT1
 013E 30900300          lds R3,_CNT1+1
 0142 40900000          lds R4,_CNT2
 0146 50900100          lds R5,_CNT2+1
 014A 4218              sub R4,R2
 014C 5308              sbc R5,R3
 014E 50921A00          sts _CNT+1,R5
 0152 40921900          sts _CNT,R4
 0156                   .dbline 86
 0156 20900000          lds R2,_CNT2
 015A 30900100          lds R3,_CNT2+1
 015E 30920300          sts _CNT1+1,R3
 0162 20920200          sts _CNT1,R2
 0166                   .dbline 87
 0166 80910000          lds R24,_Flag
 016A 8F5F              subi R24,255    ; addi 1
 016C 80930000          sts _Flag,R24
 0170                   .dbline 87
 0170           L23:
 0170                   .dbline 81
 0170           ;   while(TIFR&0x20)             //捕获检测
 0170 28B6              in R2,0x38
 0172 25FC              sbrc R2,5
 0174 D3CF              rjmp L22
 0176                   .dbline 88
 0176           ;       {TIFR|=0x20;             //清除捕获标志
 0176           ;          CNT=ICR1L;              //CNT暂存
 0176           ;        CNT2=(ICR1H<<8)+ICR1L;  //CNT2存放当前捕获值
 0176           ;        CNT=CNT2-CNT1;          //CNT存放两次时间差
 0176           ;        CNT1=CNT2;              //CNT1存放上次捕获值
 0176           ;        Flag++;}                //检测到第一次捕获
 0176           ;    if(Flag==2)                 //检测到第二此捕获
 0176 80910000          lds R24,_Flag
 017A 8230              cpi R24,2
 017C 39F5              brne L25
 017E                   .dbline 89
 017E           ;       {Flag=0;                 //清除捕获检测标志
 017E                   .dbline 89
 017E 2224              clr R2
 0180 20920000          sts _Flag,R2
 0184                   .dbline 90
 0184           ;          HZ(CNT,Data);           //数据处理
 0184 20E0              ldi R18,<_Data
 0186 30E0              ldi R19,>_Data
 0188 00911900          lds R16,_CNT
 018C 10911A00          lds R17,_CNT+1
 0190 69DF              xcall _HZ
 0192                   .dbline 91
 0192           ;          for(i=0;i<100;i++)      //频率显示
 0192 4427              clr R20
 0194 04C0              xjmp L30
 0196           L27:
 0196                   .dbline 92
 0196 00E0              ldi R16,<_Data
 0198 10E0              ldi R17,>_Data
 019A 45DF              xcall _Display
 019C           L28:
 019C                   .dbline 91
 019C 4395              inc R20
 019E           L30:
 019E                   .dbline 91
 019E 4436              cpi R20,100
 01A0 D0F3              brlo L27
 01A2                   .dbline 93
 01A2           ;              Display(Data);
 01A2           ;                  PORTB=ICR1L;
 01A2 26B4              in R2,0x26
 01A4 28BA              out 0x18,R2
 01A6                   .dbline 94
 01A6           ;                  PORTA=CNT;
 01A6 20901900          lds R2,_CNT
 01AA 30901A00          lds R3,_CNT+1
 01AE 2BBA              out 0x1b,R2
 01B0                   .dbline 95
 01B0 2224              clr R2
 01B2 3324              clr R3
 01B4 30921A00          sts _CNT+1,R3
 01B8 20921900          sts _CNT,R2
 01BC                   .dbline 95
 01BC 30920300          sts _CNT1+1,R3
 01C0 20920200          sts _CNT1,R2
 01C4                   .dbline 95
 01C4 30920100          sts _CNT2+1,R3
 01C8 20920000          sts _CNT2,R2
 01CC                   .dbline 95
 01CC           L25:
 01CC                   .dbline 95
 01CC           L20:
 01CC                   .dbline 79
 01CC D1CF              xjmp L23
 01CE           X3:
 01CE                   .dbline -2
 01CE           L18:
 01CE                   .dbline 0 ; func end
 01CE 0895              ret
 01D0                   .dbsym r i 20 c
 01D0                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile D:\Proteus仿真实例\ATMEGA16\个人总结AVR\基于T_C1的频率计设计\icc\chengxu.c
 0000           _CNT2::
 0000                   .blkb 2
 0002                   .dbsym e CNT2 _CNT2 i
 0002           _CNT1::
 0002                   .blkb 2
 0004                   .dbsym e CNT1 _CNT1 i
