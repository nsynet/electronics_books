C51 COMPILER V8.08   DIANZIZHONG                                                           06/10/2008 16:07:30 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE DIANZIZHONG
OBJECT MODULE PLACED IN dianzizhong.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE dianzizhong.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          
   4          unsigned char data dis_digit;
   5          unsigned char key_s, key_v;
   6          
   7          unsigned char code dis_code[11]={0xc0,0xf9,0xa4,0xb0, // 0, 1, 2, 3
   8              0x99,0x92,0x82,0xf8,0x80,0x90, 0xff};// 4, 5, 6, 7, 8, 9, off 
   9          unsigned char data dis_buf[8];
  10          unsigned char data dis_index;
  11          unsigned char hour,min,sec;
  12          unsigned char sec100; 
  13          
  14          sbit K1 = P1^0;
  15          sbit K2 = P1^1;
  16          //sbit JJ=P2^0;
  17          
  18          bit scan_key();
  19          void proc_key();
  20          void inc_sec();
  21          void inc_min();
  22          void inc_hour();
  23          void display();
  24          void delayms(unsigned char ms);
  25          
  26          void main(void)
  27          {
  28   1       P0 = 0xff;
  29   1       P3 = 0xff;
  30   1       TMOD = 0x11;  // 定时器0, 1工作模式1, 16位定时方式
  31   1       TH1 = 0xdc;
  32   1       TL1 = 0;
  33   1      
  34   1       TH0 = 0xFC;
  35   1       TL0 = 0x17;
  36   1       
  37   1       hour = 12;
  38   1       min = 00;
  39   1       sec = 00;
  40   1      
  41   1       sec100 = 0;
  42   1       
  43   1       dis_buf[0] = dis_code[hour / 10];  // 时十位
  44   1       dis_buf[1] = dis_code[hour % 10];  // 时个位
  45   1       dis_buf[3] = dis_code[min / 10];  // 分十位
  46   1       dis_buf[4] = dis_code[min % 10];  // 分个位
  47   1       dis_buf[6] = dis_code[sec / 10];  // 秒十位
  48   1       dis_buf[7] = dis_code[sec % 10];  // 秒个位
  49   1       dis_buf[2] = 0xbf;      // 显示"-"
  50   1       dis_buf[5] = 0xbf;      // 显示"-"
  51   1         
  52   1       dis_digit = 0xfe;
  53   1       dis_index = 0;
  54   1       
  55   1       TCON = 0x01;
C51 COMPILER V8.08   DIANZIZHONG                                                           06/10/2008 16:07:30 PAGE 2   

  56   1       IE = 0x8a;    // 使能timer0,1 中断
  57   1       
  58   1       TR0 = 1;
  59   1       TR1 = 1;
  60   1      
  61   1       key_v = 0x03;
  62   1      
  63   1       while(1)
  64   1       {
  65   2        if(scan_key())
  66   2        {
  67   3         delayms(10);
  68   3         if(scan_key())
  69   3         {
  70   4          key_v = key_s;
  71   4          proc_key();
  72   4         }
  73   3        }
  74   2        
  75   2       }
  76   1      }
  77          
  78          bit scan_key()
  79          {
  80   1       key_s = 0x00;
  81   1       key_s |= K2;
  82   1       key_s <<= 1;
  83   1       key_s |= K1;
  84   1       return(key_s ^ key_v); 
  85   1      }
  86          
  87          void proc_key()
  88          {
  89   1       EA = 0;
  90   1       if((key_v & 0x01) == 0)  // K1
  91   1       {
  92   2        inc_hour();
  93   2       // JJ=1;
  94   2       }
  95   1       else if((key_v & 0x02) == 0) // K2
  96   1       {
  97   2        min++;
  98   2       // JJ=0;
  99   2        if(min > 59)
 100   2        {
 101   3         min = 0;
 102   3        }
 103   2        dis_buf[3] = dis_code[min / 10];  // 分十位
 104   2        dis_buf[4] = dis_code[min % 10];  // 分个位
 105   2       }
 106   1      
 107   1       EA = 1;
 108   1      }
 109          
 110          void timer0() interrupt 1
 111          // 定时器0中断服务程序, 用于数码管的动态扫描
 112          // dis_index --- 显示索引, 用于标识当前显示的数码管和缓冲区的偏移量
 113          // dis_digit --- 位选通值, 传送到P2口用于选通当前数码管的数值, 如等于0xfe时,
 114          //    选通P2.0口数码管
 115          // dis_buf   --- 显于缓冲区基地址 
 116          {
 117   1       TH0 = 0xFC;
C51 COMPILER V8.08   DIANZIZHONG                                                           06/10/2008 16:07:30 PAGE 3   

 118   1       TL0 = 0x17;
 119   1       
 120   1       P3 = 0xff;       // 先关闭所有数码管
 121   1       P0 = dis_buf[dis_index];   // 显示代码传送到P0口
 122   1       P3 = dis_digit;      // 
 123   1      
 124   1       dis_digit = _crol_(dis_digit,1); // 位选通值左移, 下次中断时选通下一位数码管
 125   1       dis_index++;      // 
 126   1           
 127   1       dis_index &= 0x07;   // 8个数码管全部扫描完一遍之后，再回到第一个开始下一次扫描
 128   1      } 
 129          
 130          void timer1() interrupt 3
 131          {
 132   1       TH1 = 0xdc;
 133   1       
 134   1       sec100++;
 135   1       
 136   1       if(sec100 >= 100)
 137   1       {
 138   2        sec100 = 0;
 139   2        inc_sec();
 140   2       }
 141   1      }
 142          
 143          void inc_sec()
 144          {
 145   1       sec++;
 146   1       if(sec > 59)
 147   1       {
 148   2        sec = 0;
 149   2        inc_min();
 150   2       }
 151   1       dis_buf[6] = dis_code[sec / 10];  // 秒十位
 152   1       dis_buf[7] = dis_code[sec % 10];  // 秒个位 
 153   1      }
 154          
 155          void inc_min()
 156          {
 157   1       min++;
 158   1       if(min > 59)
 159   1       {
 160   2        min = 0;
 161   2        inc_hour();
 162   2       }
 163   1       dis_buf[3] = dis_code[min / 10];  // 分十位
 164   1       dis_buf[4] = dis_code[min % 10];  // 分个位
 165   1      }
 166          
 167          void inc_hour()
 168          {
 169   1       hour++;
 170   1       if(hour > 23)
 171   1       {
 172   2        hour = 0;
 173   2       }
 174   1       if(hour > 9)
 175   1        dis_buf[0] = dis_code[hour / 10];  // 时十位
 176   1       else
 177   1        dis_buf[0] = 0xff;     // 当小时的十位为0时不显示
 178   1       dis_buf[1] = dis_code[hour % 10];  // 时个位
 179   1      
C51 COMPILER V8.08   DIANZIZHONG                                                           06/10/2008 16:07:30 PAGE 4   

 180   1      }
 181          
 182          
 183          void delayms(unsigned char ms) 
 184          // 延时子程序
 185          {      
 186   1       unsigned char i;
 187   1       while(ms--)
 188   1       {
 189   2        for(i = 0; i < 120; i++);
 190   2       }
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    502    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
