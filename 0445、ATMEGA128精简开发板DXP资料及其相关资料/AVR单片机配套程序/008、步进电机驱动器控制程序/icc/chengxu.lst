__start:
__text_start:
    0046 EFCF      LDI	R28,0xFF
    0047 E1D0      LDI	R29,0x10
    0048 BFCD      OUT	0x3D,R28
    0049 BFDE      OUT	0x3E,R29
    004A 51C0      SUBI	R28,0x10
    004B 40D0      SBCI	R29,0
    004C EA0A      LDI	R16,0xAA
    004D 8308      STD	Y+0,R16
    004E 2400      CLR	R0
    004F E0E0      LDI	R30,0
    0050 E0F1      LDI	R31,1
    0051 E011      LDI	R17,1
    0052 30E0      CPI	R30,0
    0053 07F1      CPC	R31,R17
    0054 F011      BEQ	0x0057
    0055 9201      ST	R0,Z+
    0056 CFFB      RJMP	0x0052
    0057 8300      STD	Z+0,R16
    0058 E8EC      LDI	R30,0x8C
    0059 E0F0      LDI	R31,0
    005A E0A0      LDI	R26,0
    005B E0B1      LDI	R27,1
    005C E010      LDI	R17,0
    005D 38EC      CPI	R30,0x8C
    005E 07F1      CPC	R31,R17
    005F F021      BEQ	0x0064
    0060 95C8      LPM
    0061 9631      ADIW	R30,1
    0062 920D      ST	R0,X+
    0063 CFF9      RJMP	0x005D
    0064 940E0082  CALL	_main
_exit:
    0066 CFFF      RJMP	_exit
FILE: C:\DOCUME~1\Administrator\桌面\001、闪烁灯设计\icc\chengxu.c
(0001) #include<iom128v.h>
(0002) #include <macros.h>
(0003) /**********************************************************************
(0004) 				  函数数据类型说明							   	
(0005) **********************************************************************/
(0006) #define uint unsigned int
(0007) #define uchar unsigned char
(0008) 
(0009) /**********************************************************************
(0010) 				初始化I/0口							   	
(0011) **********************************************************************/
(0012) void int_io()
(0013) {
(0014)    DDRD  =0xff;  
_int_io:
    0067 EF8F      LDI	R24,0xFF
    0068 BB81      OUT	0x11,R24
    0069 9508      RET
_Delay_us:
  i                    --> R20
  j                    --> R22
  Timer                --> R16
    006A 940E00AB  CALL	push_gset2
(0015) }
(0016) 
(0017) /**********************************************************************
(0018) 				  MS级延时函数程序，参数Timer 延时时间								   	
(0019) **********************************************************************/
(0020) void Delay_us(int Timer)
(0021) {
(0022)    int i,j;
(0023)    for( i = Timer; i > 0; i--)
    006C 01A8      MOVW	R20,R16
    006D C00C      RJMP	0x007A
(0024)    for( j = 11   ; j > 0; j--)
    006E E06B      LDI	R22,0xB
    006F E070      LDI	R23,0
(0025)    NOP();
    0070 0000      NOP
    0071 5061      SUBI	R22,1
    0072 4070      SBCI	R23,0
    0073 2422      CLR	R2
    0074 2433      CLR	R3
    0075 1626      CP	R2,R22
    0076 0637      CPC	R3,R23
    0077 F3C4      BLT	0x0070
    0078 5041      SUBI	R20,1
    0079 4050      SBCI	R21,0
    007A 2422      CLR	R2
    007B 2433      CLR	R3
    007C 1624      CP	R2,R20
    007D 0635      CPC	R3,R21
    007E F37C      BLT	0x006E
    007F 940E0091  CALL	pop_gset2
    0081 9508      RET
(0026) }
(0027) 
(0028) /**********************************************************************
(0029) 				   主函数						   	
(0030) **********************************************************************/
(0031) void main()
(0032) {
(0033)     int_io();
_main:
    0082 DFE4      RCALL	_int_io
(0034)    PORTD|=(1<<4);
    0083 9A94      SBI	0x12,4
(0035)    PORTD|=(1<<5);
    0084 9A95      SBI	0x12,5
(0036)    PORTD&=~(1<<6);
    0085 9896      CBI	0x12,6
    0086 C008      RJMP	0x008F
(0037)    while(1)
(0038)    {      
(0039)          Delay_us(10000);
    0087 E100      LDI	R16,0x10
    0088 E217      LDI	R17,0x27
    0089 DFE0      RCALL	_Delay_us
(0040)          PORTD&=~(1<<7);
    008A 9897      CBI	0x12,7
(0041)          Delay_us(10000);
    008B E100      LDI	R16,0x10
    008C E217      LDI	R17,0x27
    008D DFDC      RCALL	_Delay_us
(0042)          PORTD|=(1<<7);
FILE: <library>
    008E 9A97      SBI	0x12,7
    008F CFF7      RJMP	0x0087
    0090 9508      RET
pop_gset2:
    0091 E0E2      LDI	R30,2
    0092 940C0098  JMP	pop
push_gset1:
    0094 935A      ST	R21,-Y
    0095 934A      ST	R20,-Y
    0096 9508      RET
pop_gset1:
    0097 E0E1      LDI	R30,1
pop:
    0098 9149      LD	R20,Y+
    0099 9159      LD	R21,Y+
    009A FDE0      SBRC	R30,0
    009B 9508      RET
    009C 9169      LD	R22,Y+
    009D 9179      LD	R23,Y+
    009E FDE1      SBRC	R30,1
    009F 9508      RET
    00A0 90A9      LD	R10,Y+
    00A1 90B9      LD	R11,Y+
    00A2 FDE2      SBRC	R30,2
    00A3 9508      RET
    00A4 90C9      LD	R12,Y+
    00A5 90D9      LD	R13,Y+
    00A6 FDE3      SBRC	R30,3
    00A7 9508      RET
    00A8 90E9      LD	R14,Y+
    00A9 90F9      LD	R15,Y+
    00AA 9508      RET
push_gset2:
    00AB 937A      ST	R23,-Y
    00AC 936A      ST	R22,-Y
    00AD 940C0094  JMP	push_gset1
