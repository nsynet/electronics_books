__start:
__text_start:
    004D EFCF      LDI	R28,0xFF
    004E E1D0      LDI	R29,0x10
    004F BFCD      OUT	0x3D,R28
    0050 BFDE      OUT	0x3E,R29
    0051 51C0      SUBI	R28,0x10
    0052 40D0      SBCI	R29,0
    0053 EA0A      LDI	R16,0xAA
    0054 8308      STD	Y+0,R16
    0055 2400      CLR	R0
    0056 E0EE      LDI	R30,0xE
    0057 E0F1      LDI	R31,1
    0058 E011      LDI	R17,1
    0059 31E8      CPI	R30,0x18
    005A 07F1      CPC	R31,R17
    005B F011      BEQ	0x005E
    005C 9201      ST	R0,Z+
    005D CFFB      RJMP	0x0059
    005E 8300      STD	Z+0,R16
    005F E8EC      LDI	R30,0x8C
    0060 E0F0      LDI	R31,0
    0061 E0A0      LDI	R26,0
    0062 E0B1      LDI	R27,1
    0063 E010      LDI	R17,0
    0064 39EA      CPI	R30,0x9A
    0065 07F1      CPC	R31,R17
    0066 F021      BEQ	0x006B
    0067 95C8      LPM
    0068 9631      ADIW	R30,1
    0069 920D      ST	R0,X+
    006A CFF9      RJMP	0x0064
    006B 940E0100  CALL	_main
_exit:
    006D CFFF      RJMP	_exit
_DelayMS:
  j                    --> R20
  i                    --> R16
    006E 940E0127  CALL	push_gset1
FILE: F:\NEW光~1\MEGA12~1\AVR单片机配套程序\006、四位数码管动态显示程序\icc\chengxu.c
(0001) #include <iom128.h>
(0002) /********************************************************************
(0003)                 数据类型定义
(0004) *********************************************************************/
(0005) #define uchar unsigned char 
(0006) #define uint unsigned int
(0007) /********************************************************************
(0008)                 数码管段码定义0123456789
(0009) *********************************************************************/
(0010) uchar Table[10]={0xc0,0Xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};	 //所需的段的位码
(0011) uchar wei[4]={0X01,0X02,0X04,0X08};  //位的控制端	(仿真)    
(0012) //uchar wei[4]={0XEF,0XDF,0XBF,0X7F};  //位的控制端	(开发板使用) 
(0013) uint z,x,c,v, date;	//定义数据类型                           
(0014) /**********************************************************************
(0015) 				  MS级延时函数程序，参数i 延时时间					   	
(0016) **********************************************************************/
(0017) void DelayMS(uint i)
(0018) {
(0019) uint j;
(0020) for(;i!=0;i--)
    0070 C00A      RJMP	0x007B
(0021) {
(0022) for(j=8000;j!=0;j--);
    0071 E440      LDI	R20,0x40
    0072 E15F      LDI	R21,0x1F
    0073 C002      RJMP	0x0076
    0074 5041      SUBI	R20,1
    0075 4050      SBCI	R21,0
    0076 3040      CPI	R20,0
    0077 0745      CPC	R20,R21
    0078 F7D9      BNE	0x0074
    0079 5001      SUBI	R16,1
    007A 4010      SBCI	R17,0
    007B 3000      CPI	R16,0
    007C 0701      CPC	R16,R17
    007D F799      BNE	0x0071
    007E 940E012A  CALL	pop_gset1
    0080 9508      RET
(0023) }
(0024) }
(0025) /**********************************************************************
(0026)                 数码管动态扫描
(0027) *********************************************************************/
(0028) void Pre_Display()
(0029)  { 
(0030) 
(0031)  /***********************数据转换*****************************/ 
(0032)   z=date/1000;			 //求千位
_Pre_Display:
    0081 EE28      LDI	R18,0xE8
    0082 E033      LDI	R19,3
    0083 9100010E  LDS	R16,_date
    0085 9110010F  LDS	R17,_date+1
    0087 940E010D  CALL	div16u
    0089 93100117  STS	_z+1,R17
    008B 93000116  STS	_z,R16
(0033)   x=date%1000/100;		 //求百位
    008D EE28      LDI	R18,0xE8
    008E E033      LDI	R19,3
    008F 9100010E  LDS	R16,_date
    0091 9110010F  LDS	R17,_date+1
    0093 940E010B  CALL	mod16u
    0095 E624      LDI	R18,0x64
    0096 E030      LDI	R19,0
    0097 940E010D  CALL	div16u
    0099 93100115  STS	_x+1,R17
    009B 93000114  STS	_x,R16
(0034)   c=date%100/10;		 //求十位
    009D E624      LDI	R18,0x64
    009E E030      LDI	R19,0
    009F 9100010E  LDS	R16,_date
    00A1 9110010F  LDS	R17,_date+1
    00A3 940E010B  CALL	mod16u
    00A5 E02A      LDI	R18,0xA
    00A6 E030      LDI	R19,0
    00A7 940E010D  CALL	div16u
    00A9 93100113  STS	_c+1,R17
    00AB 93000112  STS	_c,R16
(0035)   v=date%10;			 //求个位
    00AD E02A      LDI	R18,0xA
    00AE E030      LDI	R19,0
    00AF 9100010E  LDS	R16,_date
    00B1 9110010F  LDS	R17,_date+1
    00B3 940E010B  CALL	mod16u
    00B5 93100111  STS	_v+1,R17
    00B7 93000110  STS	_v,R16
(0036) 
(0037)       PORTE=wei[0];
    00B9 9020010A  LDS	R2,0x10A
    00BB B823      OUT	0x03,R2
(0038) 	  PORTD=Table[z];
    00BC E080      LDI	R24,0
    00BD E091      LDI	R25,1
    00BE 91E00116  LDS	R30,_z
    00C0 91F00117  LDS	R31,_z+1
    00C2 0FE8      ADD	R30,R24
    00C3 1FF9      ADC	R31,R25
    00C4 8020      LDD	R2,Z+0
    00C5 BA22      OUT	0x12,R2
(0039) 	  DelayMS(1);  
    00C6 E001      LDI	R16,1
    00C7 E010      LDI	R17,0
    00C8 DFA5      RCALL	_DelayMS
(0040)   	  PORTE=wei[1];
    00C9 9020010B  LDS	R2,0x10B
    00CB B823      OUT	0x03,R2
(0041)       PORTD=Table[x];
    00CC E080      LDI	R24,0
    00CD E091      LDI	R25,1
    00CE 91E00114  LDS	R30,_x
    00D0 91F00115  LDS	R31,_x+1
    00D2 0FE8      ADD	R30,R24
    00D3 1FF9      ADC	R31,R25
    00D4 8020      LDD	R2,Z+0
    00D5 BA22      OUT	0x12,R2
(0042) 	  DelayMS(1);  
    00D6 E001      LDI	R16,1
    00D7 E010      LDI	R17,0
    00D8 DF95      RCALL	_DelayMS
(0043)    	  PORTE=wei[2];
    00D9 9020010C  LDS	R2,0x10C
    00DB B823      OUT	0x03,R2
(0044)       PORTD=Table[c];
    00DC E080      LDI	R24,0
    00DD E091      LDI	R25,1
    00DE 91E00112  LDS	R30,_c
    00E0 91F00113  LDS	R31,_c+1
    00E2 0FE8      ADD	R30,R24
    00E3 1FF9      ADC	R31,R25
    00E4 8020      LDD	R2,Z+0
    00E5 BA22      OUT	0x12,R2
(0045) 	  DelayMS(1);  
    00E6 E001      LDI	R16,1
    00E7 E010      LDI	R17,0
    00E8 DF85      RCALL	_DelayMS
(0046)       PORTE=wei[3];
    00E9 9020010D  LDS	R2,0x10D
    00EB B823      OUT	0x03,R2
(0047)       PORTD=Table[v];
    00EC E080      LDI	R24,0
    00ED E091      LDI	R25,1
    00EE 91E00110  LDS	R30,_v
    00F0 91F00111  LDS	R31,_v+1
    00F2 0FE8      ADD	R30,R24
    00F3 1FF9      ADC	R31,R25
    00F4 8020      LDD	R2,Z+0
    00F5 BA22      OUT	0x12,R2
(0048) 	  DelayMS(1);  
    00F6 E001      LDI	R16,1
    00F7 E010      LDI	R17,0
    00F8 DF75      RCALL	_DelayMS
    00F9 9508      RET
(0049)   }
(0050) //////////////////////////////初始化////////////////////////////////////
(0051) void Init_IO(void)//初始化I/O
(0052) {
(0053) //设置A口为输出
(0054) DDRD=0xFF;
_Init_IO:
    00FA EF8F      LDI	R24,0xFF
    00FB BB81      OUT	0x11,R24
(0055) PORTD=0xFF;
    00FC BB82      OUT	0x12,R24
(0056) //设置C口为输出
(0057) DDRE=0xFF;
    00FD B982      OUT	0x02,R24
(0058) PORTE=0xFF;
    00FE B983      OUT	0x03,R24
    00FF 9508      RET
(0059) }
(0060) 
(0061) /**********************************************************************
(0062) 				           主函数						  	
(0063) **********************************************************************/
(0064) void main(void)
(0065) {
(0066) Init_IO();  //初始化I/O
_main:
    0100 DFF9      RCALL	_Init_IO
    0101 C007      RJMP	0x0109
(0067) while(1)
(0068) {
(0069) date=2345;//数码管显示数值
    0102 E289      LDI	R24,0x29
    0103 E099      LDI	R25,0x9
    0104 9390010F  STS	_date+1,R25
    0106 9380010E  STS	_date,R24
(0070) Pre_Display();
FILE: <library>
    0108 DF78      RCALL	_Pre_Display
    0109 CFF8      RJMP	0x0102
    010A 9508      RET
mod16u:
    010B 9468      BSET	6
    010C C001      RJMP	xdiv16u
div16u:
    010D 94E8      BCLR	6
xdiv16u:
    010E 92EA      ST	R14,-Y
    010F 92FA      ST	R15,-Y
    0110 938A      ST	R24,-Y
    0111 24EE      CLR	R14
    0112 24FF      CLR	R15
    0113 E180      LDI	R24,0x10
    0114 0F00      LSL	R16
    0115 1F11      ROL	R17
    0116 1CEE      ROL	R14
    0117 1CFF      ROL	R15
    0118 16E2      CP	R14,R18
    0119 06F3      CPC	R15,R19
    011A F018      BCS	0x011E
    011B 1AE2      SUB	R14,R18
    011C 0AF3      SBC	R15,R19
    011D 9503      INC	R16
    011E 958A      DEC	R24
    011F F7A1      BNE	0x0114
    0120 F416      BRTC	0x0123
    0121 2D0E      MOV	R16,R14
    0122 2D1F      MOV	R17,R15
    0123 9189      LD	R24,Y+
    0124 90F9      LD	R15,Y+
    0125 90E9      LD	R14,Y+
    0126 9508      RET
push_gset1:
    0127 935A      ST	R21,-Y
    0128 934A      ST	R20,-Y
    0129 9508      RET
pop_gset1:
    012A E0E1      LDI	R30,1
pop:
    012B 9149      LD	R20,Y+
    012C 9159      LD	R21,Y+
    012D FDE0      SBRC	R30,0
    012E 9508      RET
    012F 9169      LD	R22,Y+
    0130 9179      LD	R23,Y+
    0131 FDE1      SBRC	R30,1
    0132 9508      RET
    0133 90A9      LD	R10,Y+
    0134 90B9      LD	R11,Y+
    0135 FDE2      SBRC	R30,2
    0136 9508      RET
    0137 90C9      LD	R12,Y+
    0138 90D9      LD	R13,Y+
    0139 FDE3      SBRC	R30,3
    013A 9508      RET
    013B 90E9      LD	R14,Y+
    013C 90F9      LD	R15,Y+
    013D 9508      RET
