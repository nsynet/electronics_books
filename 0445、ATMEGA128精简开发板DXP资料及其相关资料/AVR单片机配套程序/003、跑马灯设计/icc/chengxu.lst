__start:
__text_start:
    0046 EFCF      LDI	R28,0xFF
    0047 E1D0      LDI	R29,0x10
    0048 BFCD      OUT	0x3D,R28
    0049 BFDE      OUT	0x3E,R29
    004A 51C0      SUBI	R28,0x10
    004B 40D0      SBCI	R29,0
    004C EA0A      LDI	R16,0xAA
    004D 8308      STD	Y+0,R16
    004E 2400      CLR	R0
    004F E0E0      LDI	R30,0
    0050 E0F1      LDI	R31,1
    0051 E011      LDI	R17,1
    0052 30E0      CPI	R30,0
    0053 07F1      CPC	R31,R17
    0054 F011      BEQ	0x0057
    0055 9201      ST	R0,Z+
    0056 CFFB      RJMP	0x0052
    0057 8300      STD	Z+0,R16
    0058 E8EC      LDI	R30,0x8C
    0059 E0F0      LDI	R31,0
    005A E0A0      LDI	R26,0
    005B E0B1      LDI	R27,1
    005C E010      LDI	R17,0
    005D 38EC      CPI	R30,0x8C
    005E 07F1      CPC	R31,R17
    005F F021      BEQ	0x0064
    0060 95C8      LPM
    0061 9631      ADIW	R30,1
    0062 920D      ST	R0,X+
    0063 CFF9      RJMP	0x005D
    0064 940E00BF  CALL	_main
_exit:
    0066 CFFF      RJMP	_exit
_DelayMS:
  j                    --> R20
  i                    --> R16
    0067 940E00DD  CALL	push_gset1
FILE: F:\NEW光~1\MEGA12~1\AVR单片机配套程序\003、跑马灯设计\icc\chengxu.c
(0001) #include <iom128.h>
(0002) /**********************************************************************
(0003) 				  函数数据类型说明							   	
(0004) **********************************************************************/
(0005) #define uchar unsigned char 
(0006) #define uint unsigned int
(0007) /**********************************************************************
(0008) 				  MS级延时函数程序，参数i 延时时间								   	
(0009) **********************************************************************/
(0010) void DelayMS(uint i)
(0011) {
(0012) uint j;
(0013) for(;i!=0;i--)
    0069 C00A      RJMP	0x0074
(0014) {
(0015) for(j=8000;j!=0;j--);
    006A E440      LDI	R20,0x40
    006B E15F      LDI	R21,0x1F
    006C C002      RJMP	0x006F
    006D 5041      SUBI	R20,1
    006E 4050      SBCI	R21,0
    006F 3040      CPI	R20,0
    0070 0745      CPC	R20,R21
    0071 F7D9      BNE	0x006D
    0072 5001      SUBI	R16,1
    0073 4010      SBCI	R17,0
    0074 3000      CPI	R16,0
    0075 0701      CPC	R16,R17
    0076 F799      BNE	0x006A
    0077 940E00E0  CALL	pop_gset1
    0079 9508      RET
_horse:
  i                    --> R16
    007A 940E00DD  CALL	push_gset1
(0016) }
(0017) }
(0018) /**********************************************************************
(0019) 				  跑马灯程序，通过跑过的步数进行判断来点亮相应的LED
(0020) 				  低电平点亮LED								   	
(0021) **********************************************************************/
(0022) void horse(uchar i)
(0023) {switch (i)
    007C 2F40      MOV	R20,R16
    007D 2755      CLR	R21
    007E 3040      CPI	R20,0
    007F 0745      CPC	R20,R21
    0080 F109      BEQ	0x00A2
    0081 3041      CPI	R20,1
    0082 E0E0      LDI	R30,0
    0083 075E      CPC	R21,R30
    0084 F101      BEQ	0x00A5
    0085 3042      CPI	R20,2
    0086 E0E0      LDI	R30,0
    0087 075E      CPC	R21,R30
    0088 F0F9      BEQ	0x00A8
    0089 3043      CPI	R20,3
    008A E0E0      LDI	R30,0
    008B 075E      CPC	R21,R30
    008C F0F1      BEQ	0x00AB
    008D 3044      CPI	R20,4
    008E E0E0      LDI	R30,0
    008F 075E      CPC	R21,R30
    0090 F0E9      BEQ	0x00AE
    0091 3045      CPI	R20,5
    0092 E0E0      LDI	R30,0
    0093 075E      CPC	R21,R30
    0094 F0E1      BEQ	0x00B1
    0095 3046      CPI	R20,6
    0096 E0E0      LDI	R30,0
    0097 075E      CPC	R21,R30
    0098 F0D9      BEQ	0x00B4
    0099 3047      CPI	R20,7
    009A E0E0      LDI	R30,0
    009B 075E      CPC	R21,R30
    009C F0D1      BEQ	0x00B7
    009D 3048      CPI	R20,0x8
    009E E0E0      LDI	R30,0
    009F 075E      CPC	R21,R30
    00A0 F0C9      BEQ	0x00BA
    00A1 C01A      RJMP	0x00BC
(0024) {
(0025) case 0:PORTD=0X00;break;//0000 0000B 点亮LED1~LED8
    00A2 2422      CLR	R2
    00A3 BA22      OUT	0x12,R2
    00A4 C017      RJMP	0x00BC
(0026) case 1:PORTD=0X01;break;//0000 0001B 点亮LED2~LED8
    00A5 E081      LDI	R24,1
    00A6 BB82      OUT	0x12,R24
    00A7 C014      RJMP	0x00BC
(0027) case 2:PORTD=0X03;break;//0000 0011B 点亮LED3~LED8
    00A8 E083      LDI	R24,3
    00A9 BB82      OUT	0x12,R24
    00AA C011      RJMP	0x00BC
(0028) case 3:PORTD=0X07;break;//0000 0111B 点亮LED4~LED8
    00AB E087      LDI	R24,7
    00AC BB82      OUT	0x12,R24
    00AD C00E      RJMP	0x00BC
(0029) case 4:PORTD=0X0f;break;//0000 1111B 点亮LED5~LED8
    00AE E08F      LDI	R24,0xF
    00AF BB82      OUT	0x12,R24
    00B0 C00B      RJMP	0x00BC
(0030) case 5:PORTD=0X1f;break;//0001 1111B 点亮LED6~LED8
    00B1 E18F      LDI	R24,0x1F
    00B2 BB82      OUT	0x12,R24
    00B3 C008      RJMP	0x00BC
(0031) case 6:PORTD=0X3f;break;//0011 1111B 点亮LED7~LED8
    00B4 E38F      LDI	R24,0x3F
    00B5 BB82      OUT	0x12,R24
    00B6 C005      RJMP	0x00BC
(0032) case 7:PORTD=0X7f;break;//0111 1111B 点亮LED8
    00B7 E78F      LDI	R24,0x7F
    00B8 BB82      OUT	0x12,R24
    00B9 C002      RJMP	0x00BC
(0033) case 8:PORTD=0Xff;break;//1111 1111B 全熄灭
    00BA EF8F      LDI	R24,0xFF
    00BB BB82      OUT	0x12,R24
(0034) default:break;
    00BC 940E00E0  CALL	pop_gset1
    00BE 9508      RET
(0035) }
(0036) }
(0037) /**********************************************************************
(0038) 				   主函数						   	
(0039) **********************************************************************/
(0040) void main(void)
(0041) {
(0042) uchar i;
(0043) DDRD=0XFF;//端口设置，PA口设置为推挽1输出
_main:
  i                    --> R20
    00BF EF8F      LDI	R24,0xFF
    00C0 BB81      OUT	0x11,R24
(0044) PORTD=0XFF;
    00C1 BB82      OUT	0x12,R24
(0045) PORTD=0XFF;//PORTD初始化为1,灭掉所有的LED
    00C2 BB82      OUT	0x12,R24
(0046) DelayMS(10);
    00C3 E00A      LDI	R16,0xA
    00C4 E010      LDI	R17,0
    00C5 DFA1      RCALL	_DelayMS
    00C6 C014      RJMP	0x00DB
(0047) while(1)//程序无条件执行
(0048) {
(0049) for(i=0;i<9;i++)
    00C7 2744      CLR	R20
    00C8 C006      RJMP	0x00CF
(0050) {
(0051) horse(i);
    00C9 2F04      MOV	R16,R20
    00CA DFAF      RCALL	_horse
(0052) DelayMS(10);//延时时间约10MS
    00CB E00A      LDI	R16,0xA
    00CC E010      LDI	R17,0
    00CD DF99      RCALL	_DelayMS
    00CE 9543      INC	R20
    00CF 3049      CPI	R20,0x9
    00D0 F3C0      BCS	0x00C9
(0053) }
(0054) for(i=7;i!=0;i--)
    00D1 E047      LDI	R20,7
    00D2 C006      RJMP	0x00D9
(0055) {
(0056) horse(i);
    00D3 2F04      MOV	R16,R20
    00D4 DFA5      RCALL	_horse
(0057) DelayMS(10);
FILE: <library>
    00D5 E00A      LDI	R16,0xA
    00D6 E010      LDI	R17,0
    00D7 DF8F      RCALL	_DelayMS
    00D8 954A      DEC	R20
    00D9 2344      TST	R20
    00DA F7C1      BNE	0x00D3
    00DB CFEB      RJMP	0x00C7
    00DC 9508      RET
push_gset1:
    00DD 935A      ST	R21,-Y
    00DE 934A      ST	R20,-Y
    00DF 9508      RET
pop_gset1:
    00E0 E0E1      LDI	R30,1
pop:
    00E1 9149      LD	R20,Y+
    00E2 9159      LD	R21,Y+
    00E3 FDE0      SBRC	R30,0
    00E4 9508      RET
    00E5 9169      LD	R22,Y+
    00E6 9179      LD	R23,Y+
    00E7 FDE1      SBRC	R30,1
    00E8 9508      RET
    00E9 90A9      LD	R10,Y+
    00EA 90B9      LD	R11,Y+
    00EB FDE2      SBRC	R30,2
    00EC 9508      RET
    00ED 90C9      LD	R12,Y+
    00EE 90D9      LD	R13,Y+
    00EF FDE3      SBRC	R30,3
    00F0 9508      RET
    00F1 90E9      LD	R14,Y+
    00F2 90F9      LD	R15,Y+
    00F3 9508      RET
