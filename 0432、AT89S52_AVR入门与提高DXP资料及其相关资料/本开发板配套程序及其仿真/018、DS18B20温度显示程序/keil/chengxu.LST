C51 COMPILER V8.05a   CHENGXU                                                              12/05/2009 18:55:15 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE CHENGXU
OBJECT MODULE PLACED IN chengxu.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE chengxu.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          code unsigned char seg7code[10]={ 0xC0,0xf9,0xa4,0xb0,0x99,0x92,
   3          0x82,0xf8,0x80,0x90}; //显示段码
   4          
   5          sbit TMDAT =P3^2; //DS18B20 的数据输入/输出脚DQ,根据情况设定
   6          
   7          unsigned int sdata;//测量到的温度的整数部分
   8          unsigned char xiaoshu1;//小数第一位
   9          unsigned char xiaoshu2;//小数第二位
  10          unsigned char xiaoshu;//两位小数
  11          
  12          
  13          bit fg=1; //温度正负标志
  14          /**********************************************************************/
  15          //////////*显示延时程序*///////////////
  16          
  17          void Delay(unsigned int tc)
  18          {while( tc != 0 )
  19   1      {unsigned int i;
  20   2      for(i=0; i<80; i++);
  21   2      tc--;}
  22   1      }
  23          /**********************************************************************/
  24          ////////////延时部分///////////////
  25          
  26          void dmsec (unsigned int count) 
  27          {
  28   1      unsigned char i;
  29   1      while(count--)
  30   1      {for(i=0;i<115;i++);}
  31   1      }
  32          /**********************************************************************/
  33          /////////////发送复位///////////////
  34          
  35          void tmreset (void) 
  36          {
  37   1      unsigned char i;
  38   1      TMDAT=0; for(i=0;i<103;i++);
  39   1      TMDAT = 1; for(i=0;i<4;i++);
  40   1      }
  41          
  42          /**********************************************************************/
  43          bit tmrbit (void) //读一位//
  44          {                      
  45   1      unsigned int i;
  46   1      bit dat;
  47   1      TMDAT = 0;
  48   1      i++;
  49   1      TMDAT = 1;
  50   1      i++; i++; //微量延时 //
  51   1      dat = TMDAT;
  52   1      for(i=0;i<8;i++);
  53   1      return (dat);
  54   1      }
  55          unsigned char tmrbyte (void) //读一个字节
C51 COMPILER V8.05a   CHENGXU                                                              12/05/2009 18:55:15 PAGE 2   

  56          {
  57   1      unsigned char i,j,dat;
  58   1      dat = 0;
  59   1      for (i=1;i<=8;i++)
  60   1      { j = tmrbit(); dat = (j << 7) | (dat >> 1); }
  61   1      return (dat);
  62   1      }
  63          /**********************************************************************/
  64          void tmwbyte (unsigned char dat) //写一个字节
  65          {
  66   1      unsigned char j,i;
  67   1      bit testb;
  68   1      for (j=1;j<=8;j++)
  69   1      { testb = dat & 0x01;
  70   2      dat = dat >> 1;
  71   2      if (testb)
  72   2      { TMDAT = 0; //写0
  73   3      i++; i++;
  74   3      TMDAT = 1;
  75   3      for(i=0;i<8;i++); }
  76   2      else
  77   2      { TMDAT = 0; //写0
  78   3      for(i=0;i<8;i++);
  79   3      TMDAT = 1;
  80   3      i++; i++;}
  81   2      }
  82   1      }
  83          /**********************************************************************/
  84          void tmstart (void) //发送ds1820 开始转换
  85          {
  86   1      tmreset(); //复位
  87   1      dmsec(1); //延时
  88   1      tmwbyte(0xcc); //跳过序列号命令
  89   1      tmwbyte(0x44); //发转换命令 44H,
  90   1      }   
  91          /**********************************************************************/                
  92          void tmrtemp (void) //读取温度
  93          {
  94   1      unsigned char a,b;
  95   1      tmreset (); //复位
  96   1      dmsec (1); //延时
  97   1      tmwbyte (0xcc); //跳过序列号命令
  98   1      tmwbyte (0xbe); //发送读取命令
  99   1      a = tmrbyte (); //读取低位温度
 100   1      b = tmrbyte (); //读取高位温度
 101   1      if(b>0x7f) //最高位为1 时温度是负
 102   1      {a=~a; b=~b+1; //补码转换，取反加一
 103   2      fg=0; //读取温度为负时fg=0
 104   2      }
 105   1      sdata = a/16+b*16; //整数部分
 106   1      xiaoshu1 = (a&0x0f)*10/16; //小数第一位
 107   1      xiaoshu2 = (a&0x0f)*100/16%10;//小数
 108   1      xiaoshu=xiaoshu1*10+xiaoshu2; //小数
 109   1      }
 110          /**********************************************************************/
 111          void DS18B20PRO(void)
 112          { 
 113   1      tmstart();
 114   1      
 115   1      tmrtemp(); //读取温度,执行完毕温度将存于
 116   1      }
 117          
C51 COMPILER V8.05a   CHENGXU                                                              12/05/2009 18:55:15 PAGE 3   

 118          /**********************************************************************/
 119          void Led()
 120          {
 121   1      if(fg==1) //温度为正时显示的数据
 122   1      { 
 123   2      P2=P2&0xef;
 124   2      P0=seg7code[sdata/10]; //输
 125   2      Delay(2); P2=P2|0xf0; P2=P2&0xdf;
 126   2      P0=seg7code[sdata%10]&0x7f;//输出个
 127   2      Delay(2); P2=P2|0xf0; P2=P2&0xbf;
 128   2      P0=seg7code[xiaoshu1]; //输出小数点
 129   2      Delay(2); P2=P2|0xf0; P2=P2&0x7f;
 130   2      P0=seg7code[xiaoshu2]; //输出小
 131   2      Delay(2); P2=P2|0xf0;
 132   2      }
 133   1      
 134   1      if(fg==0) //温度为负时显示的数据
 135   1      { P2=P2&0xef;
 136   2      P0=seg7code[11]; //负号
 137   2      Delay(8); P2=P2|0xf0; P2=P2&0xdf;
 138   2      P0=seg7code[sdata/10]&0x7f; //输出十位
 139   2      Delay(8); P2=P2|0xf0; P2=P2&0xbf;
 140   2      P0=seg7code[sdata%10]; //输出个位
 141   2      Delay(8); P2=P2|0xf0;              P2=P2&0x7f;
 142   2      P0=seg7code[xiaoshu1]; //输出小
 143   2      Delay(4); P2=P2|0xf0;
 144   2      } 
 145   1      }
 146          main()
 147          {fg=1;
 148   1      while(1)
 149   1      {
 150   2      DS18B20PRO();
 151   2      Led();
 152   2      
 153   2      }
 154   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    528    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
