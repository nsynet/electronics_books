                        .module chengxu.c
                        .area data(ram, con, rel)
 0000           _Table::
 0000                   .blkb 2
                        .area idata
 0000 C0F9              .byte 192,249
                        .area data(ram, con, rel)
 0002                   .blkb 2
                        .area idata
 0002 A4B0              .byte 164,176
                        .area data(ram, con, rel)
 0004                   .blkb 2
                        .area idata
 0004 9992              .byte 153,146
                        .area data(ram, con, rel)
 0006                   .blkb 2
                        .area idata
 0006 82F8              .byte 130,248
                        .area data(ram, con, rel)
 0008                   .blkb 2
                        .area idata
 0008 8090              .byte 128,144
                        .area data(ram, con, rel)
 000A                   .dbfile D:\整理\个人总结的M8程序\020、模拟采集串口发送程序\icc\chengxu.c
 000A                   .dbsym e Table _Table A[10:10]c
 000A           _wei::
 000A                   .blkb 2
                        .area idata
 000A E0D0              .byte 224,208
                        .area data(ram, con, rel)
 000C                   .dbfile D:\整理\个人总结的M8程序\020、模拟采集串口发送程序\icc\chengxu.c
 000C                   .blkb 2
                        .area idata
 000C B070              .byte 176,'p
                        .area data(ram, con, rel)
 000E                   .dbfile D:\整理\个人总结的M8程序\020、模拟采集串口发送程序\icc\chengxu.c
 000E                   .dbsym e wei _wei A[4:4]c
                        .area text(rom, con, rel)
 0000                   .dbfile D:\整理\个人总结的M8程序\020、模拟采集串口发送程序\icc\chengxu.c
 0000                   .dbfunc e DelayMs _DelayMs fV
 0000           ;              j -> R20,R21
 0000           ;              i -> R16,R17
                        .even
 0000           _DelayMs::
 0000 0E940000          xcall push_gset1
 0004                   .dbline -1
 0004                   .dbline 16
 0004           ; #include <iom8v.h>
 0004           ; #include <macros.h> 
 0004           ; #define uchar unsigned char
 0004           ; #define uint  unsigned int
 0004           ; /********************************************************************
 0004           ;                 数码管段码定义0123456789
 0004           ; *********************************************************************/
 0004           ; uchar Table[10]={0xc0,0Xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};   //所需的段的位码
 0004           ; //uchar wei[4]={0X10,0X20,0X40,0X80};  //位的控制端   (仿真) 
 0004           ; uchar wei[4]={0Xe0,0Xd0,0Xb0,0X70};  //位的控制端     (板子) 
 0004           ; uint z,x,c,v,date;    //定义数据类型 
 0004           ; /**********************************************************************
 0004           ;                                                               延时函数                                                                        
 0004           ; **********************************************************************/
 0004           ; void DelayMs(uint i)  //0.25ms
 0004           ; {uint j;
 0004                   .dbline 17
 0004           ;  for(;i!=0;i--)
 0004 0AC0              xjmp L5
 0006           L2:
 0006                   .dbline 18
 0006                   .dbline 18
 0006 40E4              ldi R20,8000
 0008 5FE1              ldi R21,31
 000A 02C0              xjmp L9
 000C           L6:
 000C                   .dbline 18
 000C                   .dbline 18
 000C                   .dbline 18
 000C           L7:
 000C                   .dbline 18
 000C 4150              subi R20,1
 000E 5040              sbci R21,0
 0010           L9:
 0010                   .dbline 18
 0010 4030              cpi R20,0
 0012 4507              cpc R20,R21
 0014 D9F7              brne L6
 0016           X0:
 0016                   .dbline 18
 0016           L3:
 0016                   .dbline 17
 0016 0150              subi R16,1
 0018 1040              sbci R17,0
 001A           L5:
 001A                   .dbline 17
 001A 0030              cpi R16,0
 001C 0107              cpc R16,R17
 001E 99F7              brne L2
 0020           X1:
 0020                   .dbline -2
 0020           L1:
 0020 0E940000          xcall pop_gset1
 0024                   .dbline 0 ; func end
 0024 0895              ret
 0026                   .dbsym r j 20 i
 0026                   .dbsym r i 16 i
 0026                   .dbend
 0026                   .dbfunc e Pre_Display _Pre_Display fV
                        .even
 0026           _Pre_Display::
 0026                   .dbline -1
 0026                   .dbline 24
 0026           ;   {for(j=8000;j!=0;j--) {;}}
 0026           ; }
 0026           ; /**********************************************************************
 0026           ;                 数码管动态扫描
 0026           ; *********************************************************************/
 0026           ; void Pre_Display()
 0026           ;  { 
 0026                   .dbline 27
 0026           ; 
 0026           ;  /***********************数据转换*****************************/ 
 0026           ;   z=date/1000;                         //求千位
 0026 28EE              ldi R18,1000
 0028 33E0              ldi R19,3
 002A 00910000          lds R16,_date
 002E 10910100          lds R17,_date+1
 0032 0E940000          xcall div16u
 0036 10930900          sts _z+1,R17
 003A 00930800          sts _z,R16
 003E                   .dbline 28
 003E           ;   x=date%1000/100;             //求百位
 003E 28EE              ldi R18,1000
 0040 33E0              ldi R19,3
 0042 00910000          lds R16,_date
 0046 10910100          lds R17,_date+1
 004A 0E940000          xcall mod16u
 004E 24E6              ldi R18,100
 0050 30E0              ldi R19,0
 0052 0E940000          xcall div16u
 0056 10930700          sts _x+1,R17
 005A 00930600          sts _x,R16
 005E                   .dbline 29
 005E           ;   c=date%100/10;               //求十位
 005E 24E6              ldi R18,100
 0060 30E0              ldi R19,0
 0062 00910000          lds R16,_date
 0066 10910100          lds R17,_date+1
 006A 0E940000          xcall mod16u
 006E 2AE0              ldi R18,10
 0070 30E0              ldi R19,0
 0072 0E940000          xcall div16u
 0076 10930500          sts _c+1,R17
 007A 00930400          sts _c,R16
 007E                   .dbline 30
 007E           ;   v=date%10;                   //求个位
 007E 2AE0              ldi R18,10
 0080 30E0              ldi R19,0
 0082 00910000          lds R16,_date
 0086 10910100          lds R17,_date+1
 008A 0E940000          xcall mod16u
 008E 10930300          sts _v+1,R17
 0092 00930200          sts _v,R16
 0096                   .dbline 32
 0096           ; 
 0096           ;       PORTD=wei[0];
 0096 20900A00          lds R2,_wei
 009A 22BA              out 0x12,R2
 009C                   .dbline 33
 009C           ;         PORTB=Table[z];
 009C 80E0              ldi R24,<_Table
 009E 90E0              ldi R25,>_Table
 00A0 E0910800          lds R30,_z
 00A4 F0910900          lds R31,_z+1
 00A8 E80F              add R30,R24
 00AA F91F              adc R31,R25
 00AC 2080              ldd R2,z+0
 00AE 28BA              out 0x18,R2
 00B0                   .dbline 34
 00B0           ;         DelayMs(1);  
 00B0 01E0              ldi R16,1
 00B2 10E0              ldi R17,0
 00B4 A5DF              xcall _DelayMs
 00B6                   .dbline 35
 00B6           ;         PORTD=wei[1];
 00B6 20900B00          lds R2,_wei+1
 00BA 22BA              out 0x12,R2
 00BC                   .dbline 36
 00BC           ;       PORTB=Table[x];
 00BC 80E0              ldi R24,<_Table
 00BE 90E0              ldi R25,>_Table
 00C0 E0910600          lds R30,_x
 00C4 F0910700          lds R31,_x+1
 00C8 E80F              add R30,R24
 00CA F91F              adc R31,R25
 00CC 2080              ldd R2,z+0
 00CE 28BA              out 0x18,R2
 00D0                   .dbline 37
 00D0           ;         DelayMs(1);  
 00D0 01E0              ldi R16,1
 00D2 10E0              ldi R17,0
 00D4 95DF              xcall _DelayMs
 00D6                   .dbline 38
 00D6           ;         PORTD=wei[2];
 00D6 20900C00          lds R2,_wei+2
 00DA 22BA              out 0x12,R2
 00DC                   .dbline 39
 00DC           ;       PORTB=Table[c];
 00DC 80E0              ldi R24,<_Table
 00DE 90E0              ldi R25,>_Table
 00E0 E0910400          lds R30,_c
 00E4 F0910500          lds R31,_c+1
 00E8 E80F              add R30,R24
 00EA F91F              adc R31,R25
 00EC 2080              ldd R2,z+0
 00EE 28BA              out 0x18,R2
 00F0                   .dbline 40
 00F0           ;         DelayMs(1);  
 00F0 01E0              ldi R16,1
 00F2 10E0              ldi R17,0
 00F4 85DF              xcall _DelayMs
 00F6                   .dbline 41
 00F6           ;       PORTD=wei[3];
 00F6 20900D00          lds R2,_wei+3
 00FA 22BA              out 0x12,R2
 00FC                   .dbline 42
 00FC           ;       PORTB=Table[v];
 00FC 80E0              ldi R24,<_Table
 00FE 90E0              ldi R25,>_Table
 0100 E0910200          lds R30,_v
 0104 F0910300          lds R31,_v+1
 0108 E80F              add R30,R24
 010A F91F              adc R31,R25
 010C 2080              ldd R2,z+0
 010E 28BA              out 0x18,R2
 0110                   .dbline 43
 0110           ;         DelayMs(1);  
 0110 01E0              ldi R16,1
 0112 10E0              ldi R17,0
 0114 75DF              xcall _DelayMs
 0116                   .dbline -2
 0116           L10:
 0116                   .dbline 0 ; func end
 0116 0895              ret
 0118                   .dbend
 0118                   .dbfunc e ADC_Convert _ADC_Convert fi
 0118           ;          temp1 -> R22,R23
 0118           ;          temp2 -> R20,R21
                        .even
 0118           _ADC_Convert::
 0118 0E940000          xcall push_gset2
 011C                   .dbline -1
 011C                   .dbline 49
 011C           ;   }
 011C           ; /**********************************************************************
 011C           ;                                                               电压值处理函数                                                                  
 011C           ; **********************************************************************/
 011C           ; uint ADC_Convert(void)
 011C           ; {uint temp1,temp2;
 011C                   .dbline 50
 011C           ;  temp1=(uint)ADCL;//先读ADCL
 011C 64B1              in R22,0x4
 011E 7727              clr R23
 0120                   .dbline 51
 0120           ;  temp2=(uint)ADCH;//再读ADCH
 0120 45B1              in R20,0x5
 0122 5527              clr R21
 0124                   .dbline 52
 0124           ;  temp2=(temp2<<8)+temp1;//求值
 0124 1A01              movw R2,R20
 0126 322C              mov R3,R2
 0128 2224              clr R2
 012A 260E              add R2,R22
 012C 371E              adc R3,R23
 012E                   .dbline 53
 012E           ;  temp2=temp2*49/10;//求显示的电压值（0~5.12）V
 012E 01E3              ldi R16,49
 0130 10E0              ldi R17,0
 0132 9101              movw R18,R2
 0134 0E940000          xcall empy16s
 0138 2AE0              ldi R18,10
 013A 30E0              ldi R19,0
 013C 0E940000          xcall div16u
 0140 A801              movw R20,R16
 0142                   .dbline 54
 0142           ;  return(temp2);
 0142                   .dbline -2
 0142           L14:
 0142 0E940000          xcall pop_gset2
 0146                   .dbline 0 ; func end
 0146 0895              ret
 0148                   .dbsym r temp1 22 i
 0148                   .dbsym r temp2 20 i
 0148                   .dbend
 0148                   .dbfunc e Init_IO _Init_IO fV
                        .even
 0148           _Init_IO::
 0148                   .dbline -1
 0148                   .dbline 60
 0148           ; }
 0148           ; /**********************************************************************
 0148           ;                       初始化I/O口
 0148           ; **********************************************************************/
 0148           ; void Init_IO(void)             //初始化I/O口
 0148           ; {
 0148                   .dbline 61
 0148           ;  DDRC=0x00;                    //设置C口为不带上拉输入；
 0148 2224              clr R2
 014A 24BA              out 0x14,R2
 014C                   .dbline 62
 014C           ;  PORTC=0x00;
 014C 25BA              out 0x15,R2
 014E                   .dbline 63
 014E           ;  DDRB=0xff;                    //设置B口为推挽1输出；
 014E 8FEF              ldi R24,255
 0150 87BB              out 0x17,R24
 0152                   .dbline 64
 0152           ;  PORTB=0xff;
 0152 88BB              out 0x18,R24
 0154                   .dbline 65
 0154           ;  DDRD=0xFF;                    //设置D口为推挽1输出；
 0154 81BB              out 0x11,R24
 0156                   .dbline 66
 0156           ;  PORTD=0xFF;
 0156 82BB              out 0x12,R24
 0158                   .dbline -2
 0158           L15:
 0158                   .dbline 0 ; func end
 0158 0895              ret
 015A                   .dbend
 015A                   .dbfunc e Uart_Init _Uart_Init fV
                        .even
 015A           _Uart_Init::
 015A                   .dbline -1
 015A                   .dbline 72
 015A           ; }
 015A           ; /********************************************************************
 015A           ;                       串口初始化子程序
 015A           ; *********************************************************************/
 015A           ; void Uart_Init(void)
 015A           ; {
 015A                   .dbline 73
 015A           ;     UCSRB  =  0x00;     //disable while setting baud rate
 015A 2224              clr R2
 015C 2AB8              out 0xa,R2
 015E                   .dbline 74
 015E           ;     UCSRA  =  0x00;     //Bit1为1则倍速发送
 015E 2BB8              out 0xb,R2
 0160                   .dbline 75
 0160           ;     UCSRC  =  0x86;  
 0160 86E8              ldi R24,134
 0162 80BD              out 0x20,R24
 0164                   .dbline 76
 0164           ;     UBRRL  =  0x33;     //波特率：9600 Bps
 0164 83E3              ldi R24,51
 0166 89B9              out 0x9,R24
 0168                   .dbline 77
 0168           ;     UBRRH  =  0x00;     //误差率：0.156%
 0168 20BC              out 0x20,R2
 016A                   .dbline 78
 016A           ;     UCSRB  =  0x18;  
 016A 88E1              ldi R24,24
 016C 8AB9              out 0xa,R24
 016E                   .dbline -2
 016E           L16:
 016E                   .dbline 0 ; func end
 016E 0895              ret
 0170                   .dbend
 0170                   .dbfunc e Putchar _Putchar fV
 0170           ;              c -> R16
                        .even
 0170           _Putchar::
 0170                   .dbline -1
 0170                   .dbline 84
 0170           ; }
 0170           ; /********************************************************************
 0170           ;                      串口发送字节子程序
 0170           ; *********************************************************************/
 0170           ; void Putchar(unsigned char c)
 0170           ; {
 0170           L18:
 0170                   .dbline 85
 0170           L19:
 0170                   .dbline 85
 0170           ;    while (!(UCSRA&(1<<UDRE)));
 0170 5D9B              sbis 0xb,5
 0172 FECF              rjmp L18
 0174                   .dbline 86
 0174           ;    UDR=c;
 0174 0CB9              out 0xc,R16
 0176                   .dbline -2
 0176           L17:
 0176                   .dbline 0 ; func end
 0176 0895              ret
 0178                   .dbsym r c 16 c
 0178                   .dbend
 0178                   .dbfunc e main _main fV
 0178           ;              i -> R20,R21
 0178           ;            TXD -> R22,R23
                        .even
 0178           _main::
 0178                   .dbline -1
 0178                   .dbline 92
 0178           ; }
 0178           ; /**********************************************************************
 0178           ;                                                               主函数                                                                  
 0178           ; **********************************************************************/
 0178           ; void main(void)
 0178           ; {uint i;
 0178                   .dbline 94
 0178           ;  uint TXD;
 0178           ;  Init_IO();
 0178 E7DF              xcall _Init_IO
 017A                   .dbline 95
 017A           ;  Uart_Init();
 017A EFDF              xcall _Uart_Init
 017C                   .dbline 96
 017C           ;  ADMUX=0x00;                   //选择第一通道；
 017C 2224              clr R2
 017E 27B8              out 0x7,R2
 0180                   .dbline 98
 0180           ;  /**********************转换速率应在50~200K****************************/
 0180           ;  ADCSR=0xe6;                   //125K转换速率，自由转换模式；启动AD转换器；
 0180 86EE              ldi R24,230
 0182 86B9              out 0x6,R24
 0184                   .dbline 99
 0184           ;  DelayMs(1);                //延时待系统稳定；
 0184 01E0              ldi R16,1
 0186 10E0              ldi R17,0
 0188 3BDF              xcall _DelayMs
 018A 19C0              xjmp L23
 018C           L22:
 018C                   .dbline 101
 018C           ;  while(1)
 018C           ;  {
 018C                   .dbline 103
 018C           ;  
 018C           ;  i=ADC_Convert();   //显示电压值(0~1024)
 018C C5DF              xcall _ADC_Convert
 018E A801              movw R20,R16
 0190                   .dbline 104
 0190           ;  date=i;           
 0190 50930100          sts _date+1,R21
 0194 40930000          sts _date,R20
 0198                   .dbline 105
 0198           ;  TXD=i/19;          //串口发送数据（0~255）
 0198 23E1              ldi R18,19
 019A 30E0              ldi R19,0
 019C 0E940000          xcall div16u
 01A0 B801              movw R22,R16
 01A2                   .dbline 106
 01A2           ;  if(TXD>=255)TXD=255;
 01A2 0F3F              cpi R16,255
 01A4 E0E0              ldi R30,0
 01A6 1E07              cpc R17,R30
 01A8 10F0              brlo L25
 01AA                   .dbline 106
 01AA 6FEF              ldi R22,255
 01AC 70E0              ldi R23,0
 01AE           L25:
 01AE                   .dbline 107
 01AE           ;  if(TXD<=0)TXD=0;
 01AE 6030              cpi R22,0
 01B0 6707              cpc R22,R23
 01B2 11F4              brne L27
 01B4           X2:
 01B4                   .dbline 107
 01B4 6627              clr R22
 01B6 7727              clr R23
 01B8           L27:
 01B8                   .dbline 108
 01B8 062F              mov R16,R22
 01BA DADF              xcall _Putchar
 01BC                   .dbline 109
 01BC 34DF              xcall _Pre_Display
 01BE                   .dbline 111
 01BE           L23:
 01BE                   .dbline 100
 01BE E6CF              xjmp L22
 01C0           X3:
 01C0                   .dbline -2
 01C0           L21:
 01C0                   .dbline 0 ; func end
 01C0 0895              ret
 01C2                   .dbsym r i 20 i
 01C2                   .dbsym r TXD 22 i
 01C2                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile D:\整理\个人总结的M8程序\020、模拟采集串口发送程序\icc\chengxu.c
 0000           _date::
 0000                   .blkb 2
 0002                   .dbsym e date _date i
 0002           _v::
 0002                   .blkb 2
 0004                   .dbsym e v _v i
 0004           _c::
 0004                   .blkb 2
 0006                   .dbsym e c _c i
 0006           _x::
 0006                   .blkb 2
 0008                   .dbsym e x _x i
 0008           _z::
 0008                   .blkb 2
 000A                   .dbsym e z _z i
