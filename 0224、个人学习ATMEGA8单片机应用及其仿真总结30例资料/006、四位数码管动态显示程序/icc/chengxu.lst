__start:
__text_start:
    0031 E5CF      LDI	R28,0x5F
    0032 E0D4      LDI	R29,4
    0033 BFCD      OUT	0x3D,R28
    0034 BFDE      OUT	0x3E,R29
    0035 51C0      SUBI	R28,0x10
    0036 40D0      SBCI	R29,0
    0037 EA0A      LDI	R16,0xAA
    0038 8308      STD	Y+0,R16
    0039 2400      CLR	R0
    003A E6EE      LDI	R30,0x6E
    003B E0F0      LDI	R31,0
    003C E010      LDI	R17,0
    003D 37E8      CPI	R30,0x78
    003E 07F1      CPC	R31,R17
    003F F011      BEQ	0x0042
    0040 9201      ST	R0,Z+
    0041 CFFB      RJMP	0x003D
    0042 8300      STD	Z+0,R16
    0043 E5E4      LDI	R30,0x54
    0044 E0F0      LDI	R31,0
    0045 E6A0      LDI	R26,0x60
    0046 E0B0      LDI	R27,0
    0047 E010      LDI	R17,0
    0048 36E2      CPI	R30,0x62
    0049 07F1      CPC	R31,R17
    004A F021      BEQ	0x004F
    004B 95C8      LPM
    004C 9631      ADIW	R30,1
    004D 920D      ST	R0,X+
    004E CFF9      RJMP	0x0048
    004F 940E00E4  CALL	_main
_exit:
    0051 CFFF      RJMP	_exit
_DelayMS:
  j                    --> R20
  i                    --> R16
    0052 940E010B  CALL	push_gset1
FILE: D:\整理\个人总结的M8程序\006、四位数码管动态显示程序\icc\chengxu.c
(0001) #include <iom8v.h>
(0002) /********************************************************************
(0003)                 数据类型定义
(0004) *********************************************************************/
(0005) #define uchar unsigned char 
(0006) #define uint unsigned int
(0007) /********************************************************************
(0008)                 数码管段码定义0123456789
(0009) *********************************************************************/
(0010) uchar Table[10]={0xc0,0Xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};	 //所需的段的位码
(0011) uchar wei[4]={0X01,0X02,0X04,0X08};  //位的控制端	(仿真)    
(0012) //uchar wei[4]={0XEF,0XDF,0XBF,0X7F};  //位的控制端	(开发板使用) 
(0013) uint z,x,c,v, date;	//定义数据类型                           
(0014) /**********************************************************************
(0015) 				  MS级延时函数程序，参数i 延时时间					   	
(0016) **********************************************************************/
(0017) void DelayMS(uint i)
(0018) {
(0019) uint j;
(0020) for(;i!=0;i--)
    0054 C00A      RJMP	0x005F
(0021) {
(0022) for(j=8000;j!=0;j--);
    0055 E440      LDI	R20,0x40
    0056 E15F      LDI	R21,0x1F
    0057 C002      RJMP	0x005A
    0058 5041      SUBI	R20,1
    0059 4050      SBCI	R21,0
    005A 3040      CPI	R20,0
    005B 0745      CPC	R20,R21
    005C F7D9      BNE	0x0058
    005D 5001      SUBI	R16,1
    005E 4010      SBCI	R17,0
    005F 3000      CPI	R16,0
    0060 0701      CPC	R16,R17
    0061 F799      BNE	0x0055
    0062 940E010E  CALL	pop_gset1
    0064 9508      RET
(0023) }
(0024) }
(0025) /**********************************************************************
(0026)                 数码管动态扫描
(0027) *********************************************************************/
(0028) void Pre_Display()
(0029)  { 
(0030) 
(0031)  /***********************数据转换*****************************/ 
(0032)   z=date/1000;			 //求千位
_Pre_Display:
    0065 EE28      LDI	R18,0xE8
    0066 E033      LDI	R19,3
    0067 9100006E  LDS	R16,_date
    0069 9110006F  LDS	R17,_date+1
    006B 940E00F1  CALL	div16u
    006D 93100077  STS	_z+1,R17
    006F 93000076  STS	_z,R16
(0033)   x=date%1000/100;		 //求百位
    0071 EE28      LDI	R18,0xE8
    0072 E033      LDI	R19,3
    0073 9100006E  LDS	R16,_date
    0075 9110006F  LDS	R17,_date+1
    0077 940E00EF  CALL	mod16u
    0079 E624      LDI	R18,0x64
    007A E030      LDI	R19,0
    007B 940E00F1  CALL	div16u
    007D 93100075  STS	_x+1,R17
    007F 93000074  STS	_x,R16
(0034)   c=date%100/10;		 //求十位
    0081 E624      LDI	R18,0x64
    0082 E030      LDI	R19,0
    0083 9100006E  LDS	R16,_date
    0085 9110006F  LDS	R17,_date+1
    0087 940E00EF  CALL	mod16u
    0089 E02A      LDI	R18,0xA
    008A E030      LDI	R19,0
    008B 940E00F1  CALL	div16u
    008D 93100073  STS	_c+1,R17
    008F 93000072  STS	_c,R16
(0035)   v=date%10;			 //求个位
    0091 E02A      LDI	R18,0xA
    0092 E030      LDI	R19,0
    0093 9100006E  LDS	R16,_date
    0095 9110006F  LDS	R17,_date+1
    0097 940E00EF  CALL	mod16u
    0099 93100071  STS	_v+1,R17
    009B 93000070  STS	_v,R16
(0036) 
(0037)       PORTC=wei[0];
    009D 9020006A  LDS	R2,0x6A
    009F BA25      OUT	0x15,R2
(0038) 	  PORTB=Table[z];
    00A0 E680      LDI	R24,0x60
    00A1 E090      LDI	R25,0
    00A2 91E00076  LDS	R30,_z
    00A4 91F00077  LDS	R31,_z+1
    00A6 0FE8      ADD	R30,R24
    00A7 1FF9      ADC	R31,R25
    00A8 8020      LDD	R2,Z+0
    00A9 BA28      OUT	0x18,R2
(0039) 	  DelayMS(1);  
    00AA E001      LDI	R16,1
    00AB E010      LDI	R17,0
    00AC DFA5      RCALL	_DelayMS
(0040)   	  PORTC=wei[1];
    00AD 9020006B  LDS	R2,0x6B
    00AF BA25      OUT	0x15,R2
(0041)       PORTB=Table[x];
    00B0 E680      LDI	R24,0x60
    00B1 E090      LDI	R25,0
    00B2 91E00074  LDS	R30,_x
    00B4 91F00075  LDS	R31,_x+1
    00B6 0FE8      ADD	R30,R24
    00B7 1FF9      ADC	R31,R25
    00B8 8020      LDD	R2,Z+0
    00B9 BA28      OUT	0x18,R2
(0042) 	  DelayMS(1);  
    00BA E001      LDI	R16,1
    00BB E010      LDI	R17,0
    00BC DF95      RCALL	_DelayMS
(0043)    	  PORTC=wei[2];
    00BD 9020006C  LDS	R2,0x6C
    00BF BA25      OUT	0x15,R2
(0044)       PORTB=Table[c];
    00C0 E680      LDI	R24,0x60
    00C1 E090      LDI	R25,0
    00C2 91E00072  LDS	R30,_c
    00C4 91F00073  LDS	R31,_c+1
    00C6 0FE8      ADD	R30,R24
    00C7 1FF9      ADC	R31,R25
    00C8 8020      LDD	R2,Z+0
    00C9 BA28      OUT	0x18,R2
(0045) 	  DelayMS(1);  
    00CA E001      LDI	R16,1
    00CB E010      LDI	R17,0
    00CC DF85      RCALL	_DelayMS
(0046)       PORTC=wei[3];
    00CD 9020006D  LDS	R2,0x6D
    00CF BA25      OUT	0x15,R2
(0047)       PORTB=Table[v];
    00D0 E680      LDI	R24,0x60
    00D1 E090      LDI	R25,0
    00D2 91E00070  LDS	R30,_v
    00D4 91F00071  LDS	R31,_v+1
    00D6 0FE8      ADD	R30,R24
    00D7 1FF9      ADC	R31,R25
    00D8 8020      LDD	R2,Z+0
    00D9 BA28      OUT	0x18,R2
(0048) 	  DelayMS(1);  
    00DA E001      LDI	R16,1
    00DB E010      LDI	R17,0
    00DC DF75      RCALL	_DelayMS
    00DD 9508      RET
(0049)   }
(0050) //////////////////////////////初始化////////////////////////////////////
(0051) void Init_IO(void)//初始化I/O
(0052) {
(0053) //设置B口为输出
(0054) DDRB=0xFF;
_Init_IO:
    00DE EF8F      LDI	R24,0xFF
    00DF BB87      OUT	0x17,R24
(0055) PORTB=0xFF;
    00E0 BB88      OUT	0x18,R24
(0056) //设置C口为输出
(0057) DDRC=0xFF;
    00E1 BB84      OUT	0x14,R24
(0058) PORTC=0xFF;
    00E2 BB85      OUT	0x15,R24
    00E3 9508      RET
(0059) }
(0060) 
(0061) /**********************************************************************
(0062) 				           主函数						  	
(0063) **********************************************************************/
(0064) void main(void)
(0065) {
(0066) Init_IO();  //初始化I/O
_main:
    00E4 DFF9      RCALL	_Init_IO
    00E5 C007      RJMP	0x00ED
(0067) while(1)
(0068) {
(0069) date=2345;//数码管显示数值
    00E6 E289      LDI	R24,0x29
    00E7 E099      LDI	R25,0x9
    00E8 9390006F  STS	_date+1,R25
    00EA 9380006E  STS	_date,R24
(0070) Pre_Display();
FILE: <library>
    00EC DF78      RCALL	_Pre_Display
    00ED CFF8      RJMP	0x00E6
    00EE 9508      RET
mod16u:
    00EF 9468      BSET	6
    00F0 C001      RJMP	xdiv16u
div16u:
    00F1 94E8      BCLR	6
xdiv16u:
    00F2 92EA      ST	R14,-Y
    00F3 92FA      ST	R15,-Y
    00F4 938A      ST	R24,-Y
    00F5 24EE      CLR	R14
    00F6 24FF      CLR	R15
    00F7 E180      LDI	R24,0x10
    00F8 0F00      LSL	R16
    00F9 1F11      ROL	R17
    00FA 1CEE      ROL	R14
    00FB 1CFF      ROL	R15
    00FC 16E2      CP	R14,R18
    00FD 06F3      CPC	R15,R19
    00FE F018      BCS	0x0102
    00FF 1AE2      SUB	R14,R18
    0100 0AF3      SBC	R15,R19
    0101 9503      INC	R16
    0102 958A      DEC	R24
    0103 F7A1      BNE	0x00F8
    0104 F416      BRTC	0x0107
    0105 2D0E      MOV	R16,R14
    0106 2D1F      MOV	R17,R15
    0107 9189      LD	R24,Y+
    0108 90F9      LD	R15,Y+
    0109 90E9      LD	R14,Y+
    010A 9508      RET
push_gset1:
    010B 935A      ST	R21,-Y
    010C 934A      ST	R20,-Y
    010D 9508      RET
pop_gset1:
    010E E0E1      LDI	R30,1
pop:
    010F 9149      LD	R20,Y+
    0110 9159      LD	R21,Y+
    0111 FDE0      SBRC	R30,0
    0112 9508      RET
    0113 9169      LD	R22,Y+
    0114 9179      LD	R23,Y+
    0115 FDE1      SBRC	R30,1
    0116 9508      RET
    0117 90A9      LD	R10,Y+
    0118 90B9      LD	R11,Y+
    0119 FDE2      SBRC	R30,2
    011A 9508      RET
    011B 90C9      LD	R12,Y+
    011C 90D9      LD	R13,Y+
    011D FDE3      SBRC	R30,3
    011E 9508      RET
    011F 90E9      LD	R14,Y+
    0120 90F9      LD	R15,Y+
    0121 9508      RET
