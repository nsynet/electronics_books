                        .module chengxu.c
                        .area data(ram, con, rel)
 0000           _Table::
 0000                   .blkb 2
                        .area idata
 0000 3F06              .byte 63,6
                        .area data(ram, con, rel)
 0002                   .blkb 2
                        .area idata
 0002 5B4F              .byte 91,'O
                        .area data(ram, con, rel)
 0004                   .blkb 2
                        .area idata
 0004 666D              .byte 'f,'m
                        .area data(ram, con, rel)
 0006                   .blkb 2
                        .area idata
 0006 7D07              .byte 125,7
                        .area data(ram, con, rel)
 0008                   .blkb 2
                        .area idata
 0008 7F6F              .byte 127,'o
                        .area data(ram, con, rel)
 000A                   .dbfile E:\Proteus\AVR单片机应用系统开发经典实例\013、基于TC2的实时时钟电路设计---------------未成功\icc\chengxu.c
 000A                   .dbsym e Table _Table A[10:10]c
 000A           _Data::
 000A                   .blkb 2
                        .area idata
 000A 0000              .byte 0,0
                        .area data(ram, con, rel)
 000C                   .dbfile E:\Proteus\AVR单片机应用系统开发经典实例\013、基于TC2的实时时钟电路设计---------------未成功\icc\chengxu.c
 000C                   .blkb 2
                        .area idata
 000C 0000              .byte 0,0
                        .area data(ram, con, rel)
 000E                   .dbfile E:\Proteus\AVR单片机应用系统开发经典实例\013、基于TC2的实时时钟电路设计---------------未成功\icc\chengxu.c
 000E                   .dbsym e Data _Data A[4:4]c
 000E           _CNT::
 000E                   .blkb 1
                        .area idata
 000E 00                .byte 0
                        .area data(ram, con, rel)
 000F                   .dbfile E:\Proteus\AVR单片机应用系统开发经典实例\013、基于TC2的实时时钟电路设计---------------未成功\icc\chengxu.c
 000F                   .dbsym e CNT _CNT c
                        .area text(rom, con, rel)
 0000                   .dbfile E:\Proteus\AVR单片机应用系统开发经典实例\013、基于TC2的实时时钟电路设计---------------未成功\icc\chengxu.c
 0000                   .dbfunc e DelayMs _DelayMs fV
 0000           ;              j -> R20,R21
 0000           ;              i -> R16,R17
                        .even
 0000           _DelayMs::
 0000 0E940000          xcall push_gset1
 0004                   .dbline -1
 0004                   .dbline 18
 0004           ; #include <iom16v.h>
 0004           ; /********************************************************************
 0004           ;                 数据类型定义
 0004           ; *********************************************************************/
 0004           ; #define uchar unsigned char
 0004           ; #define uint  unsigned int
 0004           ; /********************************************************************
 0004           ;                 数码管段码定义0123456789
 0004           ; *********************************************************************/
 0004           ; //数码管字型表，对应0，1，2，3，4，5，6，7，8，9//
 0004           ; uchar Table[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
 0004           ; uchar Data[4]={0,0,0,0};       //定义初始时间：00：00            
 0004           ; uchar CNT=0;                     //定义中断计数次数    
 0004           ; /**********************************************************************
 0004           ;                                 MS级延时函数程序，参数i 延时时间                                              
 0004           ; **********************************************************************/            
 0004           ; void DelayMs(uint i)           //Ms级延时，参数i为延时时间
 0004           ; {uint j;
 0004                   .dbline 19
 0004           ;  for(;i!=0;i--)
 0004 0AC0              xjmp L5
 0006           L2:
 0006                   .dbline 20
 0006                   .dbline 20
 0006 40E4              ldi R20,8000
 0008 5FE1              ldi R21,31
 000A 02C0              xjmp L9
 000C           L6:
 000C                   .dbline 20
 000C                   .dbline 20
 000C                   .dbline 20
 000C           L7:
 000C                   .dbline 20
 000C 4150              subi R20,1
 000E 5040              sbci R21,0
 0010           L9:
 0010                   .dbline 20
 0010 4030              cpi R20,0
 0012 4507              cpc R20,R21
 0014 D9F7              brne L6
 0016           X0:
 0016                   .dbline 20
 0016           L3:
 0016                   .dbline 19
 0016 0150              subi R16,1
 0018 1040              sbci R17,0
 001A           L5:
 001A                   .dbline 19
 001A 0030              cpi R16,0
 001C 0107              cpc R16,R17
 001E 99F7              brne L2
 0020           X1:
 0020                   .dbline -2
 0020           L1:
 0020 0E940000          xcall pop_gset1
 0024                   .dbline 0 ; func end
 0024 0895              ret
 0026                   .dbsym r j 20 i
 0026                   .dbsym r i 16 i
 0026                   .dbend
 0026                   .dbfunc e Display _Display fV
 0026           ;            sel -> R20
 0026           ;              i -> R22
 0026           ;              p -> R10,R11
                        .even
 0026           _Display::
 0026 0E940000          xcall push_gset3
 002A 5801              movw R10,R16
 002C                   .dbline -1
 002C                   .dbline 27
 002C           ;   {for(j=8000;j!=0;j--) {;}}
 002C           ; }
 002C           ; /**********************************************************************
 002C           ;                                           显示函数            
 002C           ; 注意：使用开发板时sel=0xef;
 002C           ; **********************************************************************/
 002C           ; void Display(uchar *p)         //动态显示函数，参数p为待显示的数组名
 002C           ; {uchar i,sel=0x01;           
 002C                   .dbline 27
 002C 41E0              ldi R20,1
 002E                   .dbline 28
 002E           ;  for(i=0;i<4;i++)
 002E 6627              clr R22
 0030 13C0              xjmp L14
 0032           L11:
 0032                   .dbline 29
 0032                   .dbline 29
 0032 45BB              out 0x15,R20
 0034                   .dbline 30
 0034 E62F              mov R30,R22
 0036 FF27              clr R31
 0038 EA0D              add R30,R10
 003A FB1D              adc R31,R11
 003C E081              ldd R30,z+0
 003E FF27              clr R31
 0040 80E0              ldi R24,<_Table
 0042 90E0              ldi R25,>_Table
 0044 E80F              add R30,R24
 0046 F91F              adc R31,R25
 0048 2080              ldd R2,z+0
 004A 2094              com R2
 004C 2BBA              out 0x1b,R2
 004E                   .dbline 31
 004E 01E0              ldi R16,1
 0050 10E0              ldi R17,0
 0052 D6DF              xcall _DelayMs
 0054                   .dbline 32
 0054 440F              lsl R20
 0056                   .dbline 33
 0056           L12:
 0056                   .dbline 28
 0056 6395              inc R22
 0058           L14:
 0058                   .dbline 28
 0058 6430              cpi R22,4
 005A 58F3              brlo L11
 005C                   .dbline -2
 005C           L10:
 005C 0E940000          xcall pop_gset3
 0060                   .dbline 0 ; func end
 0060 0895              ret
 0062                   .dbsym r sel 20 c
 0062                   .dbsym r i 22 c
 0062                   .dbsym r p 10 pc
 0062                   .dbend
 0062                   .dbfunc e Init_IO _Init_IO fV
                        .even
 0062           _Init_IO::
 0062                   .dbline -1
 0062                   .dbline 39
 0062           ;   {PORTC=sel;                  //选通最右边的数码管
 0062           ;    PORTA=~Table[p[i]];          //送字型码
 0062           ;    DelayMs(1);                 //显示延时    
 0062           ;    sel=sel<<1;                 //移位以显示前一位
 0062           ;   }
 0062           ; }
 0062           ; /**********************************************************************
 0062           ;                                        初始化I/O口    
 0062           ; **********************************************************************/
 0062           ; void Init_IO(void)             //初始化I/O口
 0062           ; {DDRA=0xff;                    //设置A口为推挽1输出
 0062                   .dbline 39
 0062 8FEF              ldi R24,255
 0064 8ABB              out 0x1a,R24
 0066                   .dbline 40
 0066           ;  PORTA=0xff;
 0066 8BBB              out 0x1b,R24
 0068                   .dbline 41
 0068           ;  DDRC=0xff;                    //设置C口为推挽1输出             
 0068 84BB              out 0x14,R24
 006A                   .dbline 42
 006A           ;  PORTC=0xff;
 006A 85BB              out 0x15,R24
 006C                   .dbline -2
 006C           L15:
 006C                   .dbline 0 ; func end
 006C 0895              ret
 006E                   .dbend
 006E                   .dbfunc e Add_Second _Add_Second fV
 006E           ;              p -> R16,R17
                        .even
 006E           _Add_Second::
 006E                   .dbline -1
 006E                   .dbline 48
 006E           ; }
 006E           ; /**********************************************************************
 006E           ;                                        时间处理，最大计时59分59秒     
 006E           ; **********************************************************************/
 006E           ; void Add_Second(uchar *p)
 006E           ; {p[3]++;
 006E                   .dbline 48
 006E C801              movw R24,R16
 0070 0396              adiw R24,3
 0072 FC01              movw R30,R24
 0074 8081              ldd R24,z+0
 0076 8F5F              subi R24,255    ; addi 1
 0078 8083              std z+0,R24
 007A                   .dbline 49
 007A           ;  if(p[3]==10) {p[3]=0;p[2]++;}
 007A F801              movw R30,R16
 007C 8381              ldd R24,z+3
 007E 8A30              cpi R24,10
 0080 49F4              brne L17
 0082                   .dbline 49
 0082                   .dbline 49
 0082 2224              clr R2
 0084 F801              movw R30,R16
 0086 2382              std z+3,R2
 0088                   .dbline 49
 0088 C801              movw R24,R16
 008A 0296              adiw R24,2
 008C FC01              movw R30,R24
 008E 8081              ldd R24,z+0
 0090 8F5F              subi R24,255    ; addi 1
 0092 8083              std z+0,R24
 0094                   .dbline 49
 0094           L17:
 0094                   .dbline 50
 0094           ;  if(p[2]==6)  {p[2]=0;p[1]++;}
 0094 F801              movw R30,R16
 0096 8281              ldd R24,z+2
 0098 8630              cpi R24,6
 009A 49F4              brne L19
 009C                   .dbline 50
 009C                   .dbline 50
 009C 2224              clr R2
 009E F801              movw R30,R16
 00A0 2282              std z+2,R2
 00A2                   .dbline 50
 00A2 C801              movw R24,R16
 00A4 0196              adiw R24,1
 00A6 FC01              movw R30,R24
 00A8 8081              ldd R24,z+0
 00AA 8F5F              subi R24,255    ; addi 1
 00AC 8083              std z+0,R24
 00AE                   .dbline 50
 00AE           L19:
 00AE                   .dbline 51
 00AE           ;  if(p[1]==10) {p[1]=0;p[0]++;}
 00AE F801              movw R30,R16
 00B0 8181              ldd R24,z+1
 00B2 8A30              cpi R24,10
 00B4 39F4              brne L21
 00B6                   .dbline 51
 00B6                   .dbline 51
 00B6 2224              clr R2
 00B8 F801              movw R30,R16
 00BA 2182              std z+1,R2
 00BC                   .dbline 51
 00BC F801              movw R30,R16
 00BE 8081              ldd R24,z+0
 00C0 8F5F              subi R24,255    ; addi 1
 00C2 8083              std z+0,R24
 00C4                   .dbline 51
 00C4           L21:
 00C4                   .dbline 52
 00C4 F801              movw R30,R16
 00C6 8081              ldd R24,z+0
 00C8 8630              cpi R24,6
 00CA 11F4              brne L23
 00CC                   .dbline 52
 00CC                   .dbline 52
 00CC 2224              clr R2
 00CE 2082              std z+0,R2
 00D0                   .dbline 52
 00D0           L23:
 00D0                   .dbline -2
 00D0           L16:
 00D0                   .dbline 0 ; func end
 00D0 0895              ret
 00D2                   .dbsym r p 16 pc
 00D2                   .dbend
 00D2                   .dbfunc e main _main fV
 00D2           ;              i -> <dead>
                        .even
 00D2           _main::
 00D2                   .dbline -1
 00D2                   .dbline 58
 00D2           ;  if(p[0]==6)  {p[0]=0;}
 00D2           ; }
 00D2           ; /**********************************************************************
 00D2           ;                                         主函数                
 00D2           ; **********************************************************************/
 00D2           ; void main(void)
 00D2           ; {uchar i;
 00D2                   .dbline 59
 00D2           ;  Init_IO();                    //初始化I/O口
 00D2 C7DF              xcall _Init_IO
 00D4                   .dbline 62
 00D4           ;  //TCCR2=0x00;                                   //停止定时器
 00D4           ;  //TIMSK=0X00;                                   //关闭溢出中断使能
 00D4           ;  ASSR=0x08;                    //异步时钟使能
 00D4 88E0              ldi R24,8
 00D6 82BD              out 0x22,R24
 00D8                   .dbline 63
 00D8           ;  TCCR2=0x07;                   //32768的晶振1024分频作为T/C2的时钟源
 00D8 87E0              ldi R24,7
 00DA 85BD              out 0x25,R24
 00DC                   .dbline 64
 00DC           ;  TCNT2=0Xff;                             //数据寄存器初始值（加1溢出）
 00DC 8FEF              ldi R24,255
 00DE 84BD              out 0x24,R24
 00E0                   .dbline 65
 00E0           ;  TIMSK=0x40;                   //T/C2溢出中断使能
 00E0 80E4              ldi R24,64
 00E2 89BF              out 0x39,R24
 00E4                   .dbline 66
 00E4           ;  SREG=SREG|0x80;               //全局中断使能       
 00E4 7894              bset 7
 00E6 0DC0              xjmp L27
 00E8           L26:
 00E8                   .dbline 68
 00E8           ;  while(1)
 00E8           ;  {Display(Data);
 00E8                   .dbline 68
 00E8 00E0              ldi R16,<_Data
 00EA 10E0              ldi R17,>_Data
 00EC 9CDF              xcall _Display
 00EE                   .dbline 69
 00EE           ;  if(CNT==32) 
 00EE 80910E00          lds R24,_CNT
 00F2 8032              cpi R24,32
 00F4 31F4              brne L29
 00F6                   .dbline 70
 00F6           ;     {CNT=0;
 00F6                   .dbline 70
 00F6 2224              clr R2
 00F8 20920E00          sts _CNT,R2
 00FC                   .dbline 71
 00FC           ;        Add_Second(Data);}                //时间处理
 00FC 00E0              ldi R16,<_Data
 00FE 10E0              ldi R17,>_Data
 0100 B6DF              xcall _Add_Second
 0102                   .dbline 71
 0102           L29:
 0102                   .dbline 72
 0102           L27:
 0102                   .dbline 67
 0102 F2CF              xjmp L26
 0104           X2:
 0104                   .dbline -2
 0104           L25:
 0104                   .dbline 0 ; func end
 0104 0895              ret
 0106                   .dbsym l i 1 c
 0106                   .dbend
                        .area vector(rom, abs)
                        .org 16
 0010 0C948300          jmp _Timer2
                        .area text(rom, con, rel)
 0106                   .dbfile E:\Proteus\AVR单片机应用系统开发经典实例\013、基于TC2的实时时钟电路设计---------------未成功\icc\chengxu.c
 0106                   .dbfunc e Timer2 _Timer2 fV
                        .even
 0106           _Timer2::
 0106 8A93              st -y,R24
 0108 9A93              st -y,R25
 010A 8FB7              in R24,0x3f
 010C 8A93              st -y,R24
 010E                   .dbline -1
 010E                   .dbline 77
 010E           ;  }
 010E           ; }
 010E           ; /******************TC2中断服务函数*******************************/
 010E           ; #pragma interrupt_handler Timer2:5
 010E           ; void Timer2(void)
 010E           ; {
 010E                   .dbline 78
 010E           ; TCNT2=0XFF;//数据寄存器初始值（加1溢出）
 010E 8FEF              ldi R24,255
 0110 84BD              out 0x24,R24
 0112                   .dbline 79
 0112           ; CNT=CNT+1;}//中断次数
 0112 80910E00          lds R24,_CNT
 0116 8F5F              subi R24,255    ; addi 1
 0118 80930E00          sts _CNT,R24
 011C                   .dbline -2
 011C           L31:
 011C 8991              ld R24,y+
 011E 8FBF              out 0x3f,R24
 0120 9991              ld R25,y+
 0122 8991              ld R24,y+
 0124                   .dbline 0 ; func end
 0124 1895              reti
 0126                   .dbend
