#include "stc.h"
#include "Global.h"

CONST INT8 HexTable[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
/******************************************************************
*函数名称:DelayNus
*输    入:t 延时时间
*输    出:无
*说    明:微秒级延时
*******************************************************************/
void DelayNus(UINT16 t)
{
	UINT16 d=0;
#if  (MCLK == 12000000UL)	
	 d=t;
#elif(MCLK == 24000000UL)
	 d=(t<<1);
#elif(MCLK == 48000000UL)
	 d=(t<<2);
#endif

	do
	{
		NOP();
	}while(--d >0);	
}
/******************************************************************
*函数名称:DelayNms
*输    入:t 延时时间
*输    出:无
*说    明:毫秒级延时
*******************************************************************/
void DelayNms(UINT16 t)
{
	 do
	 {
	 	DelayNus(1000);

	 }while(--t >0);
}
/******************************************************************
*函数名称:DelayNms
*输    入:t 延时时间
*输    出:无
*说    明:秒级延时
*******************************************************************/
void DelayNSec(UINT16 t)
{
	 do
	 {
	 	DelayNms(1000);

	 }while(--t >0);
}
/*************************************************************
* 函数名称:BufClr
* 输    入:dest 缓冲区; size 缓冲区大小
* 输    出:无
* 说    明:清空缓冲区
**************************************************************/
BOOL BufClr(UINT8 * dest,UINT32 size)
{
    if(NULL ==dest || 0==size)
    {
    	return FALSE;
    }
    
	do
	{
		*dest++ = 0;		 
		
	}while(--size!=0);
	
	return TRUE;
}
/*************************************************************
* 函数名称:BufClr
* 输    入:dest 缓冲区; size 缓冲区大小
* 输    出:无
* 说    明:清空缓冲区
**************************************************************/
BOOL MemCpy(UINT8 * dest,UINT8 * src,UINT32 size)
{
    if(NULL ==dest || NULL==src ||0==size)
    {
    	return FALSE;
    }
    
	do
	{
		*dest++ = *src++;
		
	}while(--size!=0);
	
	return TRUE;
} 
