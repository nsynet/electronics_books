C51 COMPILER V7.06   MAIN                                                                  03/16/2011 16:25:55 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /*
   2           ----------------------------------------------------
   3           *作    者：温子祺
   4           ----------------------------------------------------
   5           */
   6          #include "stc.h"
   7          
   8          /***************************************************
   9           *          类型定义，方便代码移植
  10           ***************************************************/
  11          typedef unsigned char   UINT8;
  12          typedef unsigned int    UINT16;
  13          typedef unsigned long   UINT32; 
  14              
  15          typedef char            INT8;
  16          typedef int             INT16;
  17          typedef long            INT32;
  18          typedef bit             BOOL;
  19          
  20          /***************************************************
  21           *          大量宏定义，便于代码移植和阅读
  22           ***************************************************/
  23          //--------------------------------
  24                                             //----头部----
  25          #define DCMD_CTRL_HEAD1      0x10  //PC下传控制包头部1
  26          #define DCMD_CTRL_HEAD2      0x01  //PC下传控制包头部2
  27          
  28                                             //----命令码----
  29          #define DCMD_NULL            0x00  //命令码:空操作
  30          #define DCMD_CTRL_BELL       0x01  //命令码:控制蜂鸣器
  31          #define DCMD_CTRL_LED        0x02  //命令码:控制LED
  32          #define DCMD_REQ_DATA        0x03  //命令码:请求数据
  33          
  34                                             //----数据----
  35          #define DCTRL_BELL_ON        0x01  //蜂鸣器响
  36          #define DCTRL_BELL_OFF       0x02  //蜂鸣器禁鸣
  37          #define DCTRL_LED_ON         0x03  //LED亮
  38          #define DCTRL_LED_OFF        0x04  //LED灭
  39          
  40          //--------------------------------
  41                                             //----头部----
  42          #define UCMD_CTRL_HEAD1      0x20  //MCU上传控制包头部1
  43          #define UCMD_CTRL_HEAD2      0x01  //MCU上传控制包头部2
  44          
  45                                             //----命令码----
  46          #define UCMD_NULL            0x00  //命令码:空操作
  47          #define UCMD_REQ_DATA        0x01  //命令码:请求数据
  48          
  49          
  50          #define CTRL_FRAME_LEN       0x04  //帧长度(不包含数据和校验值)
  51          #define CHECKSUM_LEN         0x01  //检验值长度
  52          
  53          #define EN_UART()            ES=1 //允许串口中断
  54          #define NOT_EN_UART()        ES=0 //禁止串口中断
  55          
C51 COMPILER V7.06   MAIN                                                                  03/16/2011 16:25:55 PAGE 2   

  56          #define BELL(x)             {if((x))P0_6=1 ;else P0_6=0;} //蜂鸣器控制宏函数
  57          #define LED(x)              {if((x))P2=0x00;else P2=0xFF;}//LED控制宏函数    
  58          
  59          #define TRUE                1
  60          #define FALSE               0
  61          
  62          #define HIGH                1
  63          #define LOW                 0   
  64          
  65          #define ON                  1
  66          #define OFF                 0
  67          
  68          #define NULL                (void *)0 
  69          
  70          /*使用结构体对数据包进行封装
  71           *方便操作数据
  72           */
  73          typedef  struct _PKT_SUM
  74          {
  75                  UINT8 m_ucHead1;       //首部1
  76                  UINT8 m_ucHead2;       //首部2
  77                  UINT8 m_ucOptCode;     //操作码
  78                  UINT8 m_ucDataLength;  //数据长度
  79                  UINT8 m_szDataBuf[16]; //数据
  80          
  81                  UINT8 m_ucCheckSum;      //CRC16为2个字节
  82          
  83          }PKT_SUM;
  84          
  85          /*使用共用体再一次对数据包进行封装
  86           *操作数据更加方便
  87           */
  88          typedef union _PKT_SUM_EX
  89          {
  90                  PKT_SUM r;
  91                  UINT8 p[32];
  92          } PKT_SUM_EX;
  93          
  94          
  95          PKT_SUM_EX    PktSumEx; //定义数据包变量
  96          BOOL  bLedOn=FALSE;     //定义是否点亮LED布尔变量
  97          BOOL  bBellOn=FALSE;    //定义是否蜂鸣器响布尔变量
  98          BOOL  bReqData=FALSE;   //定义是否请求数据布尔变量
  99          
 100          /****************************************************
 101          ** 函数名称: CheckSum
 102          ** 输    入: buf 要校验的数据;
 103                       len 要校验的数据的长度 
 104          ** 输    出: 校验值
 105          ** 功能描述: 计算校验和
 106          *****************************************************/
 107          UINT16 CheckSum(UINT8 *buf, UINT8 len) 
 108          {
 109   1                UINT8 i=0,Sum=0;
 110   1      
 111   1                for (i=0;i<len;i++)
 112   1                {
 113   2                        Sum+=*buf++;
 114   2                }
 115   1      
 116   1                return Sum;
 117   1      } 
C51 COMPILER V7.06   MAIN                                                                  03/16/2011 16:25:55 PAGE 3   

 118          /*************************************************************
 119          * 函数名称:BufCpy
 120          * 输    入:dest目标缓冲区; 
 121                     Src  源缓冲区
 122                     size 复制数据的大小
 123          * 输    出:无
 124          * 说    明:复制缓冲区
 125          **************************************************************/
 126          BOOL BufCpy(UINT8 * dest,UINT8 * src,UINT32 size)
 127          {
 128   1          if(NULL ==dest || NULL==src ||NULL==size)
 129   1          {
 130   2              return FALSE;
 131   2          }
 132   1          
 133   1              do
 134   1              {
 135   2                      *dest++ = *src++;
 136   2                      
 137   2              }while(--size!=0);
 138   1              
 139   1              return TRUE;
 140   1      }
 141          /****************************************************
 142          ** 函数名称: UartInit
 143          ** 输    入: 无
 144          ** 输    出: 无
 145          ** 功能描述: 串口初始化
 146          *****************************************************/                                                    
             -                           
 147          void UartInit(void)
 148          {
 149   1              SCON=0x40;
 150   1              T2CON=0x34;
 151   1              RCAP2L=0xD9;
 152   1              RCAP2H=0xFF;
 153   1              REN=1;
 154   1          ES=1;
 155   1      }
 156          /****************************************************
 157          ** 函数名称: UARTSendByte
 158          ** 输    入: b 单个字节
 159          ** 输    出: 无
 160          ** 功能描述: 串口 发送单个字节
 161          *****************************************************/ 
 162          void UARTSendByte(UINT8 b)
 163          {
 164   1               SBUF=b;
 165   1               while(TI==0);
 166   1               TI=0;
 167   1      }
 168          /****************************************************
 169          ** 函数名称: UARTSendByte
 170          ** 输    入: b 单个字节
 171          ** 输    出: 无
 172          ** 功能描述: 串口 发送单个字节
 173          *****************************************************/ 
 174          void UartSendNBytes(UINT8 *buf,UINT8 len)
 175          {
 176   1           while(len--)
 177   1           {
 178   2               UARTSendByte(*buf++);
C51 COMPILER V7.06   MAIN                                                                  03/16/2011 16:25:55 PAGE 4   

 179   2           }
 180   1      }
 181          code INT8 HexTable[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
 182          void UARTCiPrintfString(const INT8 *str)
 183          {
 184   1           while(str && *str)
 185   1           {
 186   2           
 187   2              UARTSendByte(*str++); 
 188   2                     
 189   2           }
 190   1      
 191   1      }
 192          void UARTCiPrintfVal(UINT8 *str,UINT32 val,UINT8 show)
 193          {    
 194   1           UINT8 i=0;
 195   1           UINT8 buf[10]={0}; 
 196   1           
 197   1               UARTCiPrintfString(str);
 198   1      
 199   1           if(10 == show)
 200   1           {
 201   2               for(i=0; i<10 ;i++)
 202   2               {
 203   3                   buf[i]=(UINT8)('0'+val%10);   
 204   3                   val/=10;   
 205   3               } 
 206   2           
 207   2               
 208   2               for(i=9;i>=0;)
 209   2               {
 210   3                   if('0' == buf[i])
 211   3                   {
 212   4                       i--;
 213   4                   }
 214   3                   else
 215   3                   {
 216   4                      break;
 217   4                   }
 218   3               } 
 219   2               
 220   2               while(1)
 221   2               {    
 222   3                   
 223   3                   UARTSendByte(buf[i]); 
 224   3                   
 225   3                   if(!i)
 226   3                   {
 227   4                       break; 
 228   4                   } 
 229   3                   
 230   3                   i--;
 231   3               } 
 232   2               
 233   2               
 234   2           }
 235   1           
 236   1           if(16 == show)
 237   1           {
 238   2              UARTSendByte('0');
 239   2                  UARTSendByte('x');
 240   2                  
C51 COMPILER V7.06   MAIN                                                                  03/16/2011 16:25:55 PAGE 5   

 241   2              i=28;
 242   2              
 243   2              while(i)
 244   2              {
 245   3                  if(0  == ((val>>i) &0x0f))
 246   3                  {   
 247   4                      i=i-4;
 248   4                     
 249   4                  }
 250   3                  else
 251   3                  {
 252   4                      break;
 253   4                  }
 254   3              } 
 255   2              
 256   2              while(1)
 257   2              {
 258   3                  UARTSendByte(HexTable[(val>>i) &0x0f]); 
 259   3                  
 260   3                  if(!i)
 261   3                  {
 262   4                      break; 
 263   4                  }     
 264   3                          
 265   3                  i=i-4;
 266   3              }  
 267   2              
 268   2           } 
 269   1           
 270   1           UARTCiPrintfString("\r\n");
 271   1      }
 272          #define DEBUGMSG   UARTCiPrintfString
 273          #define DEBUGMSGEx UARTCiPrintfVal
 274          /****************************************************
 275          ** 函数名称: main
 276          ** 输    入: 无
 277          ** 输    出: 无
 278          ** 功能描述: 函数主题
 279          *****************************************************/
 280          void main(void)
 281          {
 282   1           UINT8 i=0;
 283   1               UINT8 ucCheckSum=0;
 284   1      
 285   1               UartInit();//串口初始化
 286   1      
 287   1               EA=1;      //开总中断
 288   1               
 289   1           while(1)
 290   1           {
 291   2                if(bLedOn)  //是否点亮Led
 292   2                        {
 293   3                           LED(ON);  
 294   3                        }
 295   2                        else
 296   2                        {
 297   3                           LED(OFF); 
 298   3                        }
 299   2                        
 300   2                        
 301   2                        if(bBellOn)//是否响蜂鸣器
 302   2                        {
C51 COMPILER V7.06   MAIN                                                                  03/16/2011 16:25:55 PAGE 6   

 303   3                           BELL(ON);
 304   3                        }
 305   2                        else
 306   2                        {
 307   3                           BELL(OFF);
 308   3                        }
 309   2                        
 310   2                        if(bReqData)//是否请求数据
 311   2                        {
 312   3                           bReqData=FALSE;
 313   3      
 314   3                               NOT_EN_UART(); //禁止串口中断
 315   3                               
 316   3                               PktSumEx.r.m_ucHead1=UCMD_CTRL_HEAD1;//MCU上传数据帧头部1
 317   3                               PktSumEx.r.m_ucHead2=UCMD_CTRL_HEAD2;//MCU上传数据帧头部2
 318   3                               PktSumEx.r.m_ucOptCode=UCMD_REQ_DATA;//MCU上传数据帧命令码
 319   3                               
 320   3                               PktSumEx.r.m_ucCheckSum=CheckSum(PktSumEx.p,
 321   3                                                                CTRL_FRAME_LEN+
 322   3                                                                                                PktSumEx.r.m_ucDataLength);//计算校验值
 323   3      
 324   3                           /*
 325   3                                  这样做的原因是因为有时写数据长度不一样,
 326   3                              导致PktSumEx.r.m_ucCheckSum会出现为0的情况
 327   3                                      所以使用BufCpy将校验值复制到相应的位置
 328   3                               */
 329   3      
 330   3                               BufCpy(&PktSumEx.p[CTRL_FRAME_LEN+PktSumEx.r.m_ucDataLength],
 331   3                                      &PktSumEx.r.m_ucCheckSum,
 332   3                                               CHECKSUM_LEN);
 333   3                               
 334   3                               UartSendNBytes(PktSumEx.p,
 335   3                                              CTRL_FRAME_LEN+
 336   3                                                              PktSumEx.r.m_ucDataLength+CHECKSUM_LEN);//发送数据
 337   3      
 338   3                               EN_UART();//允许串口中断
 339   3                                              
 340   3                        }
 341   2           }
 342   1      }
 343          /****************************************************
 344          ** 函数名称: UartIRQ
 345          ** 输    入: 无
 346          ** 输    出: 无
 347          ** 功能描述: 串口中断服务程序
 348          *****************************************************/
 349          void UartIRQ(void)interrupt 4
 350          {
 351   1           static UINT8  uccnt=0;
 352   1                      UINT8  uclen;
 353   1                              UINT8  ucCheckSum;
 354   1           
 355   1           if(RI) //是否接收到数据
 356   1           {
 357   2              RI=0;
 358   2      
 359   2              PktSumEx.p[uccnt++]=SBUF;//获取单个字节
 360   2      
 361   2              if(PktSumEx.r.m_ucHead1 == DCMD_CTRL_HEAD1)//是否有效的数据帧头部1
 362   2              {
 363   3                 if(uccnt<CTRL_FRAME_LEN+PktSumEx.r.m_ucDataLength+CHECKSUM_LEN)//是否接收完所有数据
 364   3                 {
C51 COMPILER V7.06   MAIN                                                                  03/16/2011 16:25:55 PAGE 7   

 365   4                    if(uccnt>=2 && PktSumEx.r.m_ucHead2!=DCMD_CTRL_HEAD2)//是否有效的数据帧头部2
 366   4                    {
 367   5                       uccnt=0;
 368   5      
 369   5                       return;
 370   5                    }
 371   4                          
 372   4                 }
 373   3                 else
 374   3                 {
 375   4                            
 376   4                            uclen=CTRL_FRAME_LEN+PktSumEx.r.m_ucDataLength;//获取数据帧有效长度(不包括校验值)
 377   4      
 378   4                                ucCheckSum=CheckSum(PktSumEx.p,uclen);//计算校验值
 379   4      
 380   4                            /*
 381   4                                  这样做的原因是因为有时写数据长度不一样,
 382   4                              导致PktSumEx.r.m_ucCheckSum会出现为0的情况
 383   4                                      所以使用BufCpy将校验值复制到相应的位置
 384   4                                 */
 385   4                                BufCpy(&PktSumEx.r.m_ucCheckSum,&PktSumEx.p[uclen],CHECKSUM_LEN);
 386   4      
 387   4                                //DEBUGMSGEx("ucCheckSum:=",ucCheckSum,16);
 388   4                                //DEBUGMSGEx("PktSumEx.r.m_ucCheckSum:=",PktSumEx.r.m_ucCheckSum,16);
 389   4      
 390   4      
 391   4                                //DEBUGMSG("CheckSuming ...\r\n");
 392   4      
 393   4                                if(ucCheckSum!=PktSumEx.r.m_ucCheckSum)//校验值是否匹配
 394   4                                {
 395   5                                    uccnt=0;
 396   5      
 397   5                                    return;  
 398   5                                }
 399   4      
 400   4                               // DEBUGMSG("CheckSum OK\r\n");
 401   4      
 402   4                    switch(PktSumEx.r.m_ucOptCode)//从命令码中获取相对应的操作
 403   4                    {
 404   5                      case DCMD_CTRL_BELL://控制蜂鸣器命令码
 405   5                      {
 406   6                                               if(DCTRL_BELL_ON==PktSumEx.r.m_szDataBuf[0])//数据部分含控制码
 407   6                                               {
 408   7                                                  bBellOn=TRUE;
 409   7                                               }
 410   6                                               else
 411   6                                               {
 412   7                                                  bBellOn=FALSE;
 413   7                                               }
 414   6                      }
 415   5                      break;
 416   5      
 417   5                      case DCMD_CTRL_LED://控制LED命令码
 418   5                      {
 419   6      
 420   6                                               if(DCTRL_LED_ON==PktSumEx.r.m_szDataBuf[0])//数据部分含控制码
 421   6                                               {
 422   7                                                  bLedOn=TRUE;
 423   7                                               }
 424   6                                               else
 425   6                                               {
 426   7                                                  bLedOn=FALSE;
C51 COMPILER V7.06   MAIN                                                                  03/16/2011 16:25:55 PAGE 8   

 427   7                                               }
 428   6                      }
 429   5                      break;
 430   5      
 431   5                      case DCMD_REQ_DATA://请求数据命令码
 432   5                      {
 433   6                           bReqData=TRUE;
 434   6                      }
 435   5                      break;
 436   5      
 437   5                    }
 438   4      
 439   4                    uccnt=0; 
 440   4      
 441   4                    return;
 442   4                 }
 443   3      
 444   3              }
 445   2              else
 446   2              {
 447   3                  uccnt=0;
 448   3              }
 449   2      
 450   2           }
 451   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    830    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
